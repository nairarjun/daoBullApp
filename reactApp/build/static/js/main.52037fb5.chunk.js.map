{"version":3,"sources":["components/Main/DecentralizeApp.js","App.js","reportWebVitals.js","index.js"],"names":["ourNetwork","protocol","host","port","defaultState","activeUser","accountName","DecentralizeApp","props","componentDidUpdate","ual","state","setState","updateAccountName","getOrderData","a","getAccountName","updateAccountBalance","console","warn","renderLogoutButton","activeAuthenticator","logout","className","variant","onClick","renderModalButton","showModal","rpc","JsonRpc","this","modalButton","logoutBtn","loggedIn","style","textAlign","paddingTop","Component","chainId","rpcEndpoints","anchor","Anchor","appName","service","disableGreymassFuel","requestStatus","DecentralizeAppConsumer","withUAL","App","chains","authenticators","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wfAGMA,EAEU,CAAC,CAAEC,SAAU,QAASC,KAAM,qBAAsBC,KAAM,KAGlEC,EAAe,CACnBC,WAAY,KACZC,YAAa,IA6EAC,E,kDAxEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAOTC,mBAAqB,WAAO,IACVJ,EAAiB,EAAKG,MAA7BE,IAAOL,WACXA,IAAe,EAAKM,MAAMN,YAC5B,EAAKO,SAAS,CAAEP,cAAc,EAAKQ,mBACnC,EAAKC,iBACKT,GAAc,EAAKM,MAAMN,YACnC,EAAKO,SAASR,IAdC,EAkBnBS,kBAlBmB,sBAkBC,4BAAAE,EAAA,+EAEU,EAAKJ,MAAMN,WAAWW,iBAFhC,OAEVV,EAFU,OAGhB,EAAKM,SAAS,CAAEN,eAAe,EAAKW,sBAHpB,gDAKhBC,QAAQC,KAAR,MALgB,yDAlBD,EA2BnBC,mBAAqB,WAAO,IAAD,EACoC,EAAKZ,MAA1DE,IAAOL,EADU,EACVA,WAAYgB,EADF,EACEA,oBAAqBC,EADvB,EACuBA,OAChD,GAAMjB,GAAgBgB,EACpB,OACE,mBAAGE,UAAU,kBAAb,SACE,qBAAKC,QAAQ,iBAAiBC,QAASH,EAAvC,SACG,cAjCQ,EAwCnBI,kBAAkB,WAChB,OACE,mBAAGH,UAAU,kBAAb,SACE,qBAAKC,QAAQ,kBACXC,QAAS,EAAKjB,MAAME,IAAIiB,UACxBJ,UAAU,qBAFZ,kCAzCJ,EAAKZ,MAAL,2BACMP,GADN,IAEEwB,IAAK,IAAIC,UAAJ,UAAe7B,EAAwB,GAAGC,SAA1C,cAAwDD,EAAwB,GAAGE,MAAnF,OAA8H,KAApCF,EAAwB,GAAGG,KAAc,IAAM,IAAzI,OAA8IH,EAAwB,GAAGG,SAJ/J,E,0CAkDnB,WAAU,IACOE,EAAiByB,KAAKtB,MAA7BE,IAAOL,WACPC,EAAgBwB,KAAKnB,MAArBL,YACJyB,GAAe1B,GAAcyB,KAAKJ,oBACtCM,EAAYF,KAAKV,qBACjBa,EAAW3B,EAAW,uBAAmBA,GAAgB,GAEzD,OACE,sBAAK4B,MAAO,CAAEC,UAAW,SAAUC,WAAY,QAA/C,UACE,iDACCL,EACD,oBAAIR,UAAU,eAAd,SAA8BU,IAC5BH,KAAKnB,MAAMN,YACX,8BACK2B,W,GAlEeK,aCPxBrC,EAAa,CACjBsC,QAAS,mEACTC,aAAc,CAAC,CAAEtC,SAAU,QAASC,KAAM,qBAAsBC,KAAM,MAGlEqC,EAAS,IAAIC,SAAO,CAACzC,GAAa,CACtC0C,QAAS,kBACTd,IAAK,IAAIC,UAAJ,UAAe7B,EAAWuC,aAAa,GAAGtC,SAA1C,cAAwDD,EAAWuC,aAAa,GAAGrC,MAAnF,OAA8H,KAApCF,EAAWuC,aAAa,GAAGpC,KAAc,IAAM,IAAzI,OAA8IH,EAAWuC,aAAa,GAAGpC,OAC9KwC,QAAS,yBACTC,qBAAqB,EACrBC,eAAe,IAGXC,EAA0BC,kBAAQxC,GAUzByC,MARf,WACE,OACE,cAAC,cAAD,CAAaC,OAAQ,CAACjD,GAAakD,eAAgB,CAACV,GAASE,QAAS,kBAAtE,SACE,cAACI,EAAD,OCZSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.52037fb5.chunk.js","sourcesContent":["import { JsonRpc } from 'eosjs'\nimport React, {Component} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst ourNetwork = {\n  chainId: \"cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f\",\n  rpcEndpoints: [{ protocol: \"https\", host: \"api.testnet.eos.io\", port: \"\" }]\n}\nconst contract_account = \"cthqkrpvdwcm\";\nconst defaultState = {\n  activeUser: null,\n  accountName: '',\n};\n\nclass DecentralizeApp extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n       ...defaultState,\n      rpc: new JsonRpc(`${ourNetwork.rpcEndpoints[0].protocol}://${ourNetwork.rpcEndpoints[0].host}${ourNetwork.rpcEndpoints[0].port !== \"\" ? \":\" : \"\"}${ourNetwork.rpcEndpoints[0].port}`),\n    }\n  }\n\n componentDidUpdate = () => {\n    const { ual: { activeUser } } = this.props\n    if (activeUser && !this.state.activeUser) {\n      this.setState({ activeUser }, this.updateAccountName)\n      this.getOrderData();\n    } else if (!activeUser && this.state.activeUser) {\n      this.setState(defaultState)\n    }\n  }\n\n  updateAccountName = async () => {\n    try {\n      const accountName = await this.state.activeUser.getAccountName()\n      this.setState({ accountName }, this.updateAccountBalance)\n    } catch (e) {\n      console.warn(e)\n    }\n  }\n\n  renderLogoutButton = () => {\n    const { ual: { activeUser, activeAuthenticator, logout } } = this.props\n    if (!!activeUser && !!activeAuthenticator) {\n      return (\n        <p className='ual-btn-wrapper'>\n          <div variant='outline-danger' onClick={logout}>\n            {'Logout'}\n          </div>\n        </p>\n      )\n    }\n  }\n\n  renderModalButton=()=> {\n    return (\n      <p className='ual-btn-wrapper'>\n        <div variant='outline-primary'\n          onClick={this.props.ual.showModal}\n          className='ual-generic-button'>Connect to Wallet</div>\n      </p>\n    )\n  }\n\n  render() {\n    const { ual: { activeUser } } = this.props\n    const { accountName } = this.state\n    let modalButton = !activeUser && this.renderModalButton(),\n    logoutBtn = this.renderLogoutButton(),\n    loggedIn = accountName ? `Logged in as ${accountName}` : ''\n    \n    return (\n      <div style={{ textAlign: 'center', paddingTop: '50px' }}>\n        <h2>Decentralize.io</h2>\n        {modalButton}\n        <h3 className='ual-subtitle'>{loggedIn}</h3>\n        { this.state.activeUser &&\n          <div>\n              {logoutBtn}\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default DecentralizeApp;","import { UALProvider, withUAL } from 'ual-reactjs-renderer';\nimport { Anchor } from 'ual-anchor';\nimport { JsonRpc } from 'eosjs';\nimport React from 'react';\nimport DecentralizeApp from './components/Main/DecentralizeApp.js';\n\nconst ourNetwork = {\n  chainId: \"cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f\",\n  rpcEndpoints: [{ protocol: \"https\", host: \"api.testnet.eos.io\", port: \"\" }]\n}\n\nconst anchor = new Anchor([ourNetwork], {\n  appName: 'Decentralize.io',\n  rpc: new JsonRpc(`${ourNetwork.rpcEndpoints[0].protocol}://${ourNetwork.rpcEndpoints[0].host}${ourNetwork.rpcEndpoints[0].port !== \"\" ? \":\" : \"\"}${ourNetwork.rpcEndpoints[0].port}`),\n  service: 'https://cb.anchor.link',\n  disableGreymassFuel: false,\n  requestStatus: false\n})\n\nconst DecentralizeAppConsumer = withUAL(DecentralizeApp)\n\nfunction App() {\n  return (\n    <UALProvider chains={[ourNetwork]} authenticators={[anchor]} appName={\"Decentralize.io\"}>\n      <DecentralizeAppConsumer />\n    </UALProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}