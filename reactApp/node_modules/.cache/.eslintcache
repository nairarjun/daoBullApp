[{"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/index.js":"1","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/App.js":"2","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/reportWebVitals.js":"3","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Main/DecentralizeApp.js":"4","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/ScrollToTop/ScrollToTop.js":"5","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/Header/Header.js":"6","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/LogoutButton/LogoutButton.js":"7","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/LoginButton/LoginButton.js":"8","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Loading/Loading.js":"9","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/Header/HeaderLayout.js":"10","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/ComponentData.js":"11","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/TitleTextButton/TitleTextButton.js":"12","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/HomePage.js":"13","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/FeatureComponents/FeatureItem.js":"14","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/FeatureComponents/FeatureItemRow.js":"15","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/BottomDesign/BottomDesign.js":"16","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/common/config.js":"17","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/CreateOrganisation/CreateOrganisation.js":"18","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/SideMenu/SideMenu.js":"19","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/FinancialsPage.js":"20","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/TransfersTable.js":"21","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/SingleTransferTableRow.js":"22","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/SideMenu/SideMenuLayout.js":"23","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/Balances.js":"24","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/TransfersHeading.js":"25","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Organisation.js":"26","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Shareholders/Shareholder.js":"27","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/common/eosio-apiService.js":"28","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Reducers/rootReducers.js":"29","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Sagas/index.js":"30","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Reducers/organisationReducer.js":"31","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Actions/actionTypes.js":"32","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Actions/index.js":"33","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/OrganisationDatePicker.js":"34","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Actions/organisation.js":"35","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/organisationData.js":"36","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/TransactionType/TransactionType.js":"37","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/Voting.js":"38","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Loading/Loading1.js":"39","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/Header/SearchBar.js":"40","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VotingCard.js":"41","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VotingDetails.js":"42","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/VotingModal/VotingModal.js":"43","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/TransactionFund/TransactionFund.js":"44","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/WalletList/WalletList.js":"45","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VotingFilters.js":"46","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VoteResult.js":"47","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VotingPercentage.js":"48","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Tooltip/CommonTooltip.js":"49"},{"size":1167,"mtime":1617598497265,"results":"50","hashOfConfig":"51"},{"size":1217,"mtime":1616412984377,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1616151387540,"results":"53","hashOfConfig":"51"},{"size":6203,"mtime":1617717610387,"results":"54","hashOfConfig":"51"},{"size":314,"mtime":1616151387532,"results":"55","hashOfConfig":"51"},{"size":1204,"mtime":1617598497261,"results":"56","hashOfConfig":"51"},{"size":694,"mtime":1617598497249,"results":"57","hashOfConfig":"51"},{"size":2202,"mtime":1617619669747,"results":"58","hashOfConfig":"51"},{"size":263,"mtime":1617598497249,"results":"59","hashOfConfig":"51"},{"size":237,"mtime":1616151387536,"results":"60","hashOfConfig":"51"},{"size":2307,"mtime":1617598497249,"results":"61","hashOfConfig":"51"},{"size":1433,"mtime":1617623328351,"results":"62","hashOfConfig":"51"},{"size":2267,"mtime":1617604797557,"results":"63","hashOfConfig":"51"},{"size":1289,"mtime":1617598497253,"results":"64","hashOfConfig":"51"},{"size":443,"mtime":1616151387532,"results":"65","hashOfConfig":"51"},{"size":177,"mtime":1616389664232,"results":"66","hashOfConfig":"51"},{"size":661,"mtime":1617701208113,"results":"67","hashOfConfig":"51"},{"size":25543,"mtime":1617713019174,"results":"68","hashOfConfig":"51"},{"size":2549,"mtime":1617715275329,"results":"69","hashOfConfig":"51"},{"size":1225,"mtime":1617598497253,"results":"70","hashOfConfig":"51"},{"size":995,"mtime":1617598497253,"results":"71","hashOfConfig":"51"},{"size":511,"mtime":1616389664232,"results":"72","hashOfConfig":"51"},{"size":1018,"mtime":1617598497265,"results":"73","hashOfConfig":"51"},{"size":990,"mtime":1616417087324,"results":"74","hashOfConfig":"51"},{"size":5866,"mtime":1617619857385,"results":"75","hashOfConfig":"51"},{"size":10559,"mtime":1617713019174,"results":"76","hashOfConfig":"51"},{"size":2195,"mtime":1617598497261,"results":"77","hashOfConfig":"51"},{"size":2162,"mtime":1617689297136,"results":"78","hashOfConfig":"51"},{"size":209,"mtime":1617598497261,"results":"79","hashOfConfig":"51"},{"size":433,"mtime":1617598497261,"results":"80","hashOfConfig":"51"},{"size":1487,"mtime":1617619857389,"results":"81","hashOfConfig":"51"},{"size":269,"mtime":1617598497261,"results":"82","hashOfConfig":"51"},{"size":138,"mtime":1617598497261,"results":"83","hashOfConfig":"51"},{"size":645,"mtime":1617598497261,"results":"84","hashOfConfig":"51"},{"size":728,"mtime":1617619857385,"results":"85","hashOfConfig":"51"},{"size":2770,"mtime":1617713019174,"results":"86","hashOfConfig":"51"},{"size":5699,"mtime":1617713019174,"results":"87","hashOfConfig":"51"},{"size":14014,"mtime":1617717395988,"results":"88","hashOfConfig":"51"},{"size":365,"mtime":1617598497249,"results":"89","hashOfConfig":"51"},{"size":5425,"mtime":1617713019174,"results":"90","hashOfConfig":"51"},{"size":901,"mtime":1617619857385,"results":"91","hashOfConfig":"51"},{"size":3637,"mtime":1617689297140,"results":"92","hashOfConfig":"51"},{"size":1755,"mtime":1617701197373,"results":"93","hashOfConfig":"51"},{"size":8361,"mtime":1617713019174,"results":"94","hashOfConfig":"51"},{"size":2498,"mtime":1617689297140,"results":"95","hashOfConfig":"51"},{"size":1234,"mtime":1617713019174,"results":"96","hashOfConfig":"51"},{"size":720,"mtime":1617623265123,"results":"97","hashOfConfig":"51"},{"size":595,"mtime":1617619857385,"results":"98","hashOfConfig":"51"},{"size":1589,"mtime":1617708154898,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},"nc4o6d",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"103"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"103"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"103"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"103"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"103"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/index.js",["218"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from '../src/components/Pages/Redux/Reducers/rootReducers';\nimport thunk from 'redux-thunk';\nimport { watchAppUser } from '../src/components/Pages/Redux/Sagas/index';\n\nconst componseEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducer,\n  componseEnhancers(applyMiddleware(thunk, sagaMiddleware))\n);\n\nsagaMiddleware.run(watchAppUser)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n",["219","220"],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/App.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/reportWebVitals.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Main/DecentralizeApp.js",["221","222","223","224","225"],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/ScrollToTop/ScrollToTop.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/Header/Header.js",["226"],"import React from 'react';\nimport LoginButton from '../../LoginButton/LoginButton';\nimport LogoutButton from '../../LogoutButton/LogoutButton';\nimport './Header.css'\nimport SearchBar from \"./SearchBar\";\nimport { withRouter } from 'react-router-dom';\nimport daoBull from '../../../Assets/images/2x/daoBullHeader.png'\n\nconst Header = (props) => {\n    let modalButton = !props.activeUser && LoginButton(props)\n    const logoutBtn = LogoutButton(props)\n    return (\n        <div className=\"DI_header_main\" style={props.style && props.style}>\n            <div className=\"DI_logo\"\n                // style={{ display: 'flex' }}\n                onClick={() => { props.history.push(\"/\") }}>\n\n\n                <div><img src={daoBull} style={{width:'45px',height:'50px'}}/></div>\n                <div style={{paddingLeft:'5px'}}>Dao Bull</div>\n            </div>\n            <SearchBar {...props} />\n            <nav className=\"DI_nav_main\">\n\n                {\n                    !props.activeUser &&\n                    modalButton\n                }\n                {props.activeUser &&\n                    logoutBtn\n                }\n            </nav>\n        </div>\n    )\n}\n\nexport default withRouter(Header);","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/LogoutButton/LogoutButton.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/LoginButton/LoginButton.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Loading/Loading.js",["227"],"import React from 'react';\nimport load from './loading.gif'\nconst Loading = (props) => {\n   return (\n      <img id=\"loadingImg\" style={{ width: '30%', paddingTop: '99px' }} style={props.styleData} src={load} alt=\"Loading...\" />\n   );\n}\n\nexport default Loading;\n\n\n","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/Header/HeaderLayout.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/ComponentData.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/TitleTextButton/TitleTextButton.js",["228"],"import React from 'react';\nimport './TitleTextButton.css'\nimport daoBull from \"../../../../Assets/images/2x/daoBullTitle.png\";\nconst TitleTextButton = (props) => {\n    return (\n        <div className=\"DI_HP_SubCompo_Wrapper\"\n            style={{\n                backgroundColor: props.bgColor,\n                height: props.height,\n                paddingTop: props.paddingTop,\n                width:props.width,\n                justifyContent:props.justifyContent\n            }}>\n            {props.daoBullImg &&\n                <img src={daoBull} style={{ width: '130px', marginTop: '30px' }} />\n            }\n            <div className={`DI_HP_SubCompo_Title ${props.className!=='' && ' DaoBull-subHeading'}`}\n                style={{\n                    fontSize: props.titleFontSize,\n                    lineHeight: props.LineHeight,\n                    letterSpacing: props.letterSpacing,\n                    fontWeight: props.fontWeight,\n                    marginTop: props.marginTop,\n                }}>\n                {props.title}\n            </div>\n            <div className=\"DI_HP_SubCompo_Text\">\n                {props.text}\n            </div>\n            {\n                props.btnText !== '' &&\n                <div className=\"DI_HP_SubCompo_Button\" onClick={props.createOrganisation}>\n                    {props.btnText}\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default TitleTextButton","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/HomePage.js",["229"],"import React from 'react';\nimport TitleTextButton from './TitleTextButton/TitleTextButton'\nimport { withRouter } from 'react-router-dom';\nimport './HomePage.css'\nimport { componentList, featuresList1, featuresList2 } from '../../ComponentData'\nimport FeatureItemRow from './FeatureComponents/FeatureItemRow';\nimport BottomDesign from './BottomDesign/BottomDesign';\nconst HomePage = (props) => {\n    return (\n        <div className=\"DI_homePage_main\" style={{ background: 'linear-gradient(180deg, #FFFFFF 0%, #FFFFFF 84.6%, #FAFAFA 100%)' }}>\n\n            {componentList.map((data, i) => {\n                return (\n                    // {\n                    data.title === 'Welcome to Dao Bull'\n                        ?\n                        <div key={i} id='' style={{ display: 'flex', paddingTop: '80px', height: '650px', overflowX: \"hidden\",\n                        overflowY: \"hidden\" }}>\n                            <div className=\"div1\" >\n                                {/* <img src={lefthanddots} style={{width:'450',height:'549'}}/> */}\n                            </div>\n                            <TitleTextButton key={i} {...data} createOrganisation={() => props.history.push('./CreateOrganisation')} />\n\n                            <div className=\"div2\" >\n                                {/* <img src={righthanddots} /> */}\n                            </div>\n                        </div>\n                        :\n                        <TitleTextButton key={i} {...data} createOrganisation={() => props.history.push('./CreateOrganisation')} />\n\n                    // }\n                )\n            })\n            }\n            <div className=\"DI_HP_Feature_wrapper\">\n                <FeatureItemRow featuresList={featuresList1} />\n                <FeatureItemRow featuresList={featuresList2} />\n            </div>\n            <div  style={{ paddingBottom: '97px' }}>\n                <div className=\"DI_HP_SubCompo_Button\"\n                    onClick={() => props.history.push('./CreateOrganisation')}>\n                    Create Now\n            </div>\n            </div>\n\n            {/* <div className=\"DI_HP_Bottom_wrapper\">\n                <BottomDesign />\n            </div> */}\n        </div>\n    )\n}\n\nexport default withRouter(HomePage);","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/FeatureComponents/FeatureItem.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/FeatureComponents/FeatureItemRow.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/HomePage/BottomDesign/BottomDesign.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/common/config.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/CreateOrganisation/CreateOrganisation.js",["230","231","232","233","234","235"],"import * as React from 'react';\nimport './CreateOrganisation.css'\nimport Loading from '../../Loading/Loading';\nimport EOSIOApi from '../../../common/eosio-apiService';\nimport config from '../../../common/config'\nimport { withRouter } from \"react-router-dom\";\nimport WalletList from \"../../WalletList/WalletList\";\nimport * as actions from \"../Redux/Actions/index\";\nimport { connect } from \"react-redux\";\nimport { REACT_APP_EOSIO_CONTRACT_ACCOUNT } from \"../../../common/config\";\nimport CommonTooltip from '../../Tooltip/CommonTooltip';\n\nconst lastStep = 6;\n\nconst defultEditVoteConfiguration = {\n    supportVote: 50,\n    minimalApproval: 0,\n    voteDayDuration: 1,\n    voteHourDuration: 0,\n    voteMinDuration: 0,\n}\nclass CreateOrganisation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            step: props.activeUser ? 3 : 1,\n            loading: false,\n            shareHolderCount: 1,\n            activeUser: null,\n            errMsg: '',\n            eosio: new EOSIOApi(config.REACT_APP_EOSIO_CONTRACT_ACCOUNT, this.props.activeUser),\n            accountName: props.accountName && props.accountName ? props.accountName : '',\n            shareHoldersinfo: { shareholderName: '', amount: '', symbol: '', errMsg: '' },\n            shareHoldersAccount: [{ shareholderAccount: '', balance: '', errMsg: '', balanceError: '' }],\n            selectedOrganisation: '',\n            defaultOrganisation: 'Forest Fund',\n            editVoteConfiguration: {\n                ...defultEditVoteConfiguration\n            },\n            supportVoteErrorInput: '',\n            isEditClick: false,\n            votingConfiguration: [\n                { name: 'Support %', subName: \"(alpha version default 50%)\", locked: true, errMsg: '', values: [{ value: 10, abbrevation: '%', name: 'supportVote' }] },\n                { name: 'Minimal Approval %', subName: '(alpha version default 0%)', locked: true, errMsg: '', values: [{ value: 10, abbrevation: '%', name: 'minimalApproval', errMsg: '' }] },\n                {\n                    name: 'Vote Duration', locked: false, errMsg: '', values: [\n                        { value: 1, abbrevation: ' Day', name: 'voteDayDuration', errMsg: '' },\n                        { value: 0, abbrevation: ' Hours', name: 'voteHourDuration', errMsg: '' },\n                        { value: 0, abbrevation: ' Mins', name: 'voteMinDuration', errMsg: '' }]\n                }],\n            setUpData: ['Name', 'Voting', 'Shareholders']\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n        if (this.props.activeUser && this.state.activeUser !== this.props.activeUser) {\n            this.setState({ step: 3, activeUser: this.props.activeUser })\n        }\n    }\n\n    createOrganisation = async () => {\n        let { accountName } = this.props\n        let { selectedOrganisation, editVoteConfiguration, shareHoldersinfo, shareHoldersAccount } = this.state,\n            { voteDayDuration, voteHourDuration, voteMinDuration } = editVoteConfiguration,\n            minutesvote = voteDayDuration * 24 * 60 + voteHourDuration * 60 + voteMinDuration;\n        let data = {\n            creator: accountName,\n            daoname: selectedOrganisation,\n            support: editVoteConfiguration.supportVote,\n            minsupport: editVoteConfiguration.minimalApproval,\n            minutesvote,\n            token: (`${shareHoldersinfo.amount} `).concat(shareHoldersinfo.symbol),\n            users: shareHoldersAccount.map(value => value.shareholderAccount),\n            balances: shareHoldersAccount.map(value => (`${value.balance} `).concat(shareHoldersinfo.symbol))\n\n        }\n        this.setState({ step: 0, loading: true, isEditClick: false })\n        try {\n            let createdaoData = await new EOSIOApi(config.REACT_APP_EOSIO_CONTRACT_ACCOUNT, this.props.activeUser).transaction(accountName, 'createdao', { ...data })\n            if (createdaoData.isError) {\n                this.setState({ loading: false, step: 6 })\n            } else {\n                let creators = await this.state.eosio.getTableScope('daotokens123', 'accounts', 'bigpicturesw')\n                let totalData = 0\n                if (creators.rows && creators.rows.length > 0) {\n                    for (var i = 0; i < creators.rows.length; i++)\n                        totalData += creators.rows[i].count;\n                    await this.props.setCreatorsList(creators.rows)\n                }\n                let daoList = await this.state.eosio.getTableRows(config.REACT_APP_EOSIO_CONTRACT_ACCOUNT, 'bigpicturesw', 'dao', 0, totalData, totalData)\n                let newSelectedDAO = []\n                await this.props.setOrganisationList(daoList.data.rows)\n                if (daoList.data && daoList.data.rows && daoList.data.rows.length > 0) {\n                    newSelectedDAO = daoList.data.rows.filter(obj => obj.data.daoname === selectedOrganisation)\n                }\n                if (newSelectedDAO.length > 0)\n                    this.props.history.push(`/organisation/Shareholders/${newSelectedDAO[0].data.id}`)\n                else\n                    this.props.history.push('/')\n            }\n\n        } catch (err) {\n            alert(err)\n            this.props.history.push('/')\n        }\n    }\n\n    setOrganisation = () => {\n        return (\n            <div className=\"organisationHeading\">\n                <div className='card-heading'>Creating Organisation</div>\n                <Loading />\n            </div>\n        )\n    }\n\n    editVotingConfig = (event, key, symbol) => {\n        let editVoteConfiguration = this.state.editVoteConfiguration\n        editVoteConfiguration[key] = event.target.value === '' ? defultEditVoteConfiguration[key] : Number(event.target.value)\n        this.setState({ editVoteConfiguration: editVoteConfiguration })\n    }\n\n    selectOrganisation = (event, value) => {\n        this.setState({ selectedOrganisation: event.target.value, errMsg: event.target.value !== '' && '' })\n    }\n\n    next = (stateName) => {\n        let { step, selectedOrganisation, errMsg = '', votingConfiguration, supportVoteErrorInput = '', shareHoldersinfo, shareHoldersAccount, isError = false } = this.state\n        let cloneVotingConfig = [\n            { name: 'Support %', subName: \"(alpha version default 50%)\", locked: true, errMsg: '', values: [{ value: this.state.editVoteConfiguration.supportVote, abbrevation: '%', name: 'supportVote' }] },\n            { name: 'Minimal Approval %', subName: '(alpha version default 0%)', locked: true, errMsg: '', values: [{ value: this.state.editVoteConfiguration.minimalApproval, abbrevation: '%', name: 'minimalApproval', errMsg: '' }] },\n            {\n                name: 'Vote Duration', locked: false, errMsg: '', values: [\n                    { value: this.state.editVoteConfiguration.voteDayDuration, abbrevation: ' Day', name: 'voteDayDuration', errMsg: '' },\n                    { value: this.state.editVoteConfiguration.voteHourDuration, abbrevation: ' Hours', name: 'voteHourDuration', errMsg: '' },\n                    { value: this.state.editVoteConfiguration.voteMinDuration, abbrevation: ' Mins', name: 'voteMinDuration', errMsg: '' }]\n            }]\n        if (stateName === 'selectedOrganisation') {\n            if (selectedOrganisation === '' || selectedOrganisation.length < 5) {\n                errMsg = 'Organisation name must be greater than or equal 5 characters.'\n                isError = true\n            } else if (this.props.daoList.filter((dao) => (dao.data.daoname).toUpperCase().trim() === selectedOrganisation.toUpperCase().trim()).length > 0) {\n                errMsg = 'Organisation name already exits'\n                isError = true\n            } else if (selectedOrganisation.match(/^\\d/)) {\n                errMsg = `Organisation name can't start with number`\n                isError = true\n            }\n        } else if (stateName === 'votingConfiguration') {\n            if (this.state.editVoteConfiguration.supportVote < this.state.editVoteConfiguration.minimalApproval) {\n                errMsg = 'Support % should be equal or more than minimal qpproval'\n                cloneVotingConfig.filter((obj) => obj.name === 'Support %')[0].errMsg = errMsg\n                isError = true\n            } else if (this.state.editVoteConfiguration.supportVote > this.state.editVoteConfiguration.minimalApproval) {\n                errMsg = ''\n                cloneVotingConfig.filter((obj) => obj.name === 'Support %')[0].errMsg = errMsg\n            }\n            if (this.state.editVoteConfiguration.voteDayDuration === 0\n                && this.state.editVoteConfiguration.voteHourDuration === 0\n                && this.state.editVoteConfiguration.voteMinDuration === 0) {\n                errMsg = `Vote duration can't be 0`\n                cloneVotingConfig.filter((obj) => obj.name === 'Vote Duration')[0].errMsg = errMsg\n                isError = true\n            } else {\n                errMsg = ''\n                cloneVotingConfig.filter((obj) => obj.name === 'Vote Duration')[0].errMsg = errMsg\n            }\n        } else if (stateName === 'Configure Shareholders') {\n            if (shareHoldersinfo.amount === '') {\n                shareHoldersinfo.amountErrMsg = 'Please add amount'\n                isError = true\n            } else {\n                shareHoldersinfo.amountErrMsg = ''\n            }\n            if (shareHoldersinfo.symbol === '' || shareHoldersinfo.symbol.length > 7 || /^[A-Z]+$/gm.exec(shareHoldersinfo.symbol) === null) {\n                shareHoldersinfo.symbolErrMsg = 'Symbol is an all uppercase string of 7 or less characters from [A-Z] '\n                isError = true\n            } else {\n                shareHoldersinfo.symbolErrMsg = ''\n            }\n            let tootal = 0\n            for (let i = 0; i < shareHoldersAccount.length; i++) {\n                const regex = /[^a-z0-5]/gm;\n                let bal = shareHoldersAccount[i].balance.split(' ')[0]\n                tootal = Number(bal) + tootal\n                if (Number(bal) > shareHoldersinfo.amount) {\n                    isError = true\n                    shareHoldersAccount[i].balanceError = 'overdrawn balance'\n                }\n\n                if (Number(bal) > 0) {\n                    shareHoldersAccount[i].errMsg = ''\n                    shareHoldersAccount[i].balance = bal.trim()\n\n                } else {\n                    isError = true\n                    shareHoldersAccount[i].balanceError = `Must transfer positive quantity`\n                }\n\n                if (shareHoldersAccount[i].shareholderAccount.length < 12 || regex.exec(shareHoldersAccount[i].shareholderAccount) != null || shareHoldersAccount[i].shareholderAccount.length > 14 || shareHoldersAccount[i].shareholderAccount === '') {\n                    isError = true\n                    shareHoldersAccount[i].errMsg = 'Account names must be 12 characters long and only include the characters 12345abcdefghijklmnopqrstuvwxyz'\n                } else {\n                    shareHoldersAccount[i].errMsg = ''\n                }\n                if (tootal > shareHoldersinfo.amount && i === shareHoldersAccount.length - 1) {\n                    alert('overdrawn balance')\n                    isError = true\n                }\n            }\n        }\n        this.setState({\n            step: isError ? step : this.state.isEditClick ? lastStep : step + 1,\n            errMsg: isError ? errMsg : '',\n            supportVoteErrorInput,\n            shareHoldersinfo,\n            shareHoldersAccount,\n            votingConfiguration: cloneVotingConfig\n        })\n    }\n\n    addMoreShares = () => {\n        let shareHoldersAccount = this.state.shareHoldersAccount\n        shareHoldersAccount.push({ shareholderAccount: '', balance: '', balanceError: '', errMsg: '' })\n        let shareHolderCount = this.state.shareHolderCount\n        this.setState({ shareHolderCount: shareHolderCount + 1, shareHoldersAccount })\n    }\n\n    onShareNameChange = (event, value, contentType, i) => {\n        let shareHoldersinfo = this.state.shareHoldersinfo\n        shareHoldersinfo[contentType] = (event.target.value).trim()\n        if (shareHoldersinfo.symbolErrMsg !== '' && contentType === 'symbol' && event.target.value !== '')\n            shareHoldersinfo.symbolErrMsg = ''\n        if (shareHoldersinfo.amountErrMsg !== '' && contentType === 'amount' && event.target.value !== '')\n            shareHoldersinfo.amountErrMsg = ''\n        this.setState({ shareHoldersinfo })\n    }\n\n    onShareNameAccountChange = (event, value, contentType, i) => {\n        let shareHoldersAccount = this.state.shareHoldersAccount\n        shareHoldersAccount[i][contentType] = event.target.value\n        if (shareHoldersAccount[i].errMsg !== '' && event.target.value !== '')\n            shareHoldersAccount[i].errMsg = ''\n        if (shareHoldersAccount[i].balanceError !== '' && event.target.value !== '')\n            shareHoldersAccount[i].balanceError = ''\n        this.setState({ shareHoldersAccount })\n    }\n\n\n    renderStepOne = () => {\n        return <div>\n            <div className='card-heading'>Connect Wallet</div>\n            <div className='card-description'>To create an organisation you need to connect your EOS account, please click connect below and follow the instruction to connect.</div>\n            <button className=\"organisation-btn organisation-connectbtn\" onClick={() => this.setState({ step: 2 })}>\n                {/* <i className=\"fa fa-copy connectBtnIcon\"></i> */}\n                Connect</button>\n            <div className=\"card-bottom\">\n                <div className=\"card-bottom-container\">\n                    <i className=\"fa fa-lock lock\"></i><span className=\"card-bottom-container-heading\">Create Wallet (Coming soon) </span>\n                    <div className=\"card-bottom-container-summary\">\n                        We’re working on a simplfied sign up experience for none blockchain users, check back soon for an update.\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n\n    renderStepThree = () => {\n        let { selectedOrganisation, errMsg } = this.state\n        return <div>\n            <div className='card-heading'>Organisation Name</div>\n            <div className='Organisations'>Name</div>\n            <input type=\"text\" value={selectedOrganisation} className='organisations-TextBox'\n                onChange={(event, value) => { this.selectOrganisation(event, value) }}\n                placeholder={selectedOrganisation === '' ? 'Select Organisation Name…' : selectedOrganisation} />\n            <div className=\"errMsg\">{errMsg}</div>\n            <button className=\"organisation-btn next-btn\" onClick={() => this.next('selectedOrganisation')}>Next</button>\n        </div>\n\n    }\n\n    renderStepFour = () => {\n        let { votingConfiguration, errMsg } = this.state\n        return <div>\n            <div className='card-heading'>Configure Voting</div>\n            <div className='voting-subInfo'>Edit at a later date within voting settings.</div>\n            {votingConfiguration.map((config, i) => {\n                return (<span key={i}>\n                    <div className=\"voting-txt\">{config.locked === true ? <i className=\"fa fa-lock\"></i> : null}&nbsp;{config.name} {config.subName} <i data-tip data-for={`CO_config_${config.name}_Id`} className=\"fas fa-question-circle toolTipQuestion\"></i>\n                        <CommonTooltip tooltipId={`CO_config_${config.name}_Id`} tooltipName={config.name}></CommonTooltip>\n                    </div>\n                    <span className=\"voting-value-box\">\n                        {config.values.map((data, k) => {\n                            return (\n                                <div className={`${data.abbrevation} observtion-suffix`} key={k} >\n                                    <input\n                                        type=\"Number\"\n                                        disabled={config.locked}\n                                        className={`voting-value ${data.abbrevation}`}\n                                        // value={`${this.state.editVoteConfiguration[data.name]}${data.abbrevation}`}\n                                        key={k}\n                                        placeholder={`${data.value}${data.abbrevation}`}\n                                        onChange={(event) => this.editVotingConfig(event, data.name, data.abbrevation)} />\n\n                                </div>\n                            )\n                        })}\n                    </span>\n                    {config.errMsg != '' && <div className=\"errMsg\" style={{ marginBottom: '29px', marginTop: '-22px' }}>{config.errMsg}</div>}\n\n                </span>)\n            })}\n            <div style={{ display: 'flex', marginTop: '-32px' }}>\n                <button className=\"organisation-btn next-btn voting-next-btn\" onClick={() => this.next('votingConfiguration')}>Next</button>\n                <button className=\"organisation-btn next-btn voting-next-btn returnBtn\"\n                    onClick={() => this.setState({ step: 3 })} >Return</button>\n            </div>\n        </div>\n\n    }\n    onChangeOfAmtShares = (e) => {\n\n    }\n\n    onChangeOfSymbol = (e) => {\n\n    }\n\n    shareHolderFormFromat = () => {\n        let shareHoldersList = []\n        for (let i = 0; i < this.state.shareHolderCount; i++) {\n            shareHoldersList.push(\n                <span key={i}>\n                    {i === 0 &&\n                        <span>\n                            <div className=\"flexContainer\">\n\n                                <div className='share-col-1' style={{ width: '160px' }}>Amount of Shares <i data-tip data-for=\"CO_Amount_Of_Shares_Id\" className=\"fas fa-question-circle toolTipQuestion\"></i>\n                                    <CommonTooltip tooltipId=\"CO_Amount_Of_Shares_Id\" tooltipName=\"Amount of Shares\"></CommonTooltip>\n                                </div>\n                                <div className='share-col-2' >Symbol <i data-tip data-for=\"CO_Symbol_Id\" className=\"fas fa-question-circle toolTipQuestion\">\n                                    <CommonTooltip tooltipId=\"CO_Symbol_Id\" tooltipName=\"Symbol\"></CommonTooltip>\n                                </i></div>\n                            </div>\n\n\n                            <div className=\"flexContainer\">\n                                <input type=\"text\"\n                                    style={{ width: '160px' }}\n                                    type=\"Number\"\n                                    className='organisations-TextBox org-txtBox-col-1'\n                                    onChange={(event, newValue) => this.onShareNameChange(event, newValue, 'amount', i)}\n                                    value={this.state.shareHoldersinfo.amount}\n                                    placeholder={'eg: 100,000'} />\n\n                                <input type=\"text\"\n                                    value={this.state.shareHoldersinfo.symbol}\n                                    className='organisations-TextBox org-txtBox-col-2'\n                                    onChange={(event, newValue) => this.onShareNameChange(event, newValue, 'symbol', i)}\n                                    placeholder={'eg: ABC'} />\n\n                            </div>\n                            <div className=\"flexContainer\" style={{ marginBottom: '10px', marginTop: '-20px' }}>\n                                <div className=\"errMsg\" style={{ marginBottom: '0px', width: '160px', marginRight: '16px' }}>{this.state.shareHoldersinfo.amountErrMsg}</div>\n                                <div className=\"errMsg\" style={{ marginBottom: '0px' }}>{this.state.shareHoldersinfo.symbolErrMsg}</div>\n                            </div>\n                            <div className=\"flexContainer\">\n                                <div className='share-col-1'>Shareholders <i data-tip data-for=\"CO_Shareholders_Id\" className=\"fas fa-question-circle toolTipQuestion\"></i>\n                                    <CommonTooltip tooltipId=\"CO_Shareholders_Id\" tooltipName=\"Shareholders\"></CommonTooltip>\n                                </div>\n                                <div className='share-col-2'>Balances <i data-tip data-for=\"CO_Balances_Id\" className=\"fas fa-question-circle toolTipQuestion\"></i>\n                                    <CommonTooltip tooltipId=\"CO_Balances_Id\" tooltipName=\"Balances\"></CommonTooltip>\n                                </div>\n                            </div>\n\n                        </span>\n                    }\n\n                    <div className=\"flexContainer\">\n                        <div className=\"errMsg\" style={{ marginBottom: '0px', width: '424px', marginRight: '16px' }}>{this.state.shareHoldersAccount[i].errMsg}</div>\n                        <div className=\"errMsg\" style={{ marginBottom: '0px', width: '100px' }}>{this.state.shareHoldersAccount[i].balanceError}</div>\n                    </div>\n                    <div className=\"flexContainer\">\n                        <input type=\"text\"\n                            className='organisations-TextBox org-txtBox-col-1'\n                            value={this.state.shareHoldersAccount[i].shareholderAccount}\n                            onChange={(event, newValue) => this.onShareNameAccountChange(event, newValue, 'shareholderAccount', i)}\n                            placeholder={'Enter EOS Account Name'} />\n\n                        <input type=\"text\"\n                            type='number'\n                            className='organisations-TextBox org-txtBox-col-2'\n                            value={this.state.shareHoldersAccount[i].balance === '' ? this.state.shareHoldersAccount[i].balance : Number((this.state.shareHoldersAccount[i].balance.split(' '))[0])}\n                            onChange={(event, newValue) => this.onShareNameAccountChange(event, newValue, 'balance', i)}\n                            placeholder={'-'} />\n\n                    </div>\n                </span>\n            )\n        }\n        return shareHoldersList\n    }\n\n    renderStepFive = () => {\n        return <div>\n            <div className='card-heading'>Configure Shareholders</div>\n            <div className='voting-subInfo'>Edit at a later date within shareholder settings.</div>\n            {this.shareHolderFormFromat()}\n            {/* {this.state.addMore === 1 && this.shareHolderFormFromat()} */}\n            <button className=\"organisation-btn next-btn addMore-share-btn\" onClick={this.addMoreShares}>Add More</button>\n            <div style={{ display: 'flex' }}>\n                <button className=\"organisation-btn next-btn voting-next-btn\"\n                    onClick={() => this.next('Configure Shareholders')} >Next</button>\n\n                <button className=\"organisation-btn next-btn voting-next-btn returnBtn\"\n                    onClick={() => this.setState({ step: 4 })} >Return</button>\n            </div>\n        </div>\n\n    }\n\n    renderStepSix = () => {\n        let setUpData = this.state.setUpData\n        return <div>\n            <div className='card-heading'>Confirm Setup</div>\n            <div className='voting-subInfo'>Check your set up & continue when you’re ready.</div>\n            {setUpData.map((obj, i) => {\n                return (<div className='organisations-TextBox confirmSetup' key={i}>{obj}\n                    <span onClick={() => {\n                        if (i === 0) {\n                            this.setState({ step: 3, isEditClick: true });\n                        } else if (i === 1) {\n                            this.setState({ step: 4, isEditClick: true });\n                        } else {\n                            this.setState({ step: 5, isEditClick: true });\n                        }\n                    }} className=\"editSetup\">Edit</span>\n                </div>)\n            })}\n            <button className=\"organisation-btn next-btn setup-next-btn\" onClick={this.createOrganisation}>Create Organisation</button>\n        </div>\n\n    }\n\n    render() {\n        let { step } = this.state\n        return (\n            <div className='cardContainer' style={{ backgroundColor: 'rgb(246, 246, 246)' }}>\n                <div className=\"card\">\n                    {step !== 0 &&\n                        <div className=\"item\">\n                            <span className=\"notify-badge\">{step === 6 ? 'Review' : `Step ${step} of 5`}</span>\n                        </div>}\n\n                    <div className=\"Orgnisation-container\">\n                        {step === 1 && this.renderStepOne()}\n                        {step === 2 && <WalletList {...this.props} />}\n                        {step === 3 && this.renderStepThree()}\n                        {step === 4 && this.renderStepFour()}\n                        {step === 5 && this.renderStepFive()}\n                        {step === 6 && this.renderStepSix()}\n                        {step === 0 && this.setOrganisation()}\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setDaotokensList: (value) => dispatch(actions.setDaotokensList(value)),\n        setCreatorsList: (value) => dispatch(actions.setCreatorsList(value)),\n        setOrganisationList: (value) => dispatch(actions.setOrganisationList(value)),\n        setActiveEosAccount: (value) => dispatch(actions.setActiveEosAccount(value))\n    }\n};\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(CreateOrganisation));","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/SideMenu/SideMenu.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/FinancialsPage.js",["236"],"import React from 'react';\nimport Balances from './Balances';\nimport './FinancialsPage.css'\nimport TransfersHeading from './TransfersHeading';\nimport TransfersTable from './TransfersTable';\n\nconst balancesData = [\n    {\n        balanceName: \"EOS\",\n        quantity: 1123,\n        value: 11000\n    },\n    {\n        balanceName: \"UST\",\n        quantity: 11,\n        value: 1234\n    },\n    // {\n    //     balanceName: \"USDC\",\n    //     quantity: 11000,\n    //     value: 11000\n    // },\n    // {\n    //     balanceName: \"BTC\",\n    //     quantity: 11,\n    //     value: 1234\n    // },\n    // {\n    //     balanceName: \"ETH\",\n    //     quantity: 112.23,\n    //     value: 12234\n    // },\n    // {\n    //     balanceName: \"SAI\",\n    //     quantity: 11,\n    //     value: 1234\n    // }\n]\n\nconst FinancialsPage = (props) => {\n    return (\n        <div className=\"DI_FinancialsPage_main\">\n            <Balances balancesData={balancesData} />\n            <div className=\"DI_FP_Transfers_Table_wrapper\">\n                <TransfersHeading />\n                \n                <div className=\"financial-btn\">\n                    See More\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FinancialsPage;","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/TransfersTable.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/SingleTransferTableRow.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/SideMenu/SideMenuLayout.js",["237","238","239"],"import React from 'react';\nimport './SideMenu.css'\nimport SideMenu from './SideMenu'\nimport LoginButton from '../../LoginButton/LoginButton';\nimport LogoutButton from '../../LogoutButton/LogoutButton';\nimport Header from '../Header/Header'\n\nconst SideMenuLayout = (props) => {\n    let modalButton = !props.activeUser && LoginButton(props)\n    const logoutBtn = LogoutButton(props)\n    let style={position:'relative'}\n    return (\n        <div className=\"DI_Flex_row\" style={{ flexDirection: 'column' }}>\n            <div><Header {...props} style={style} /></div>\n            <div className=\"DI_Flex_row\">\n                <SideMenu {...props } />\n                <div className=\"DI_Side_Menu_Col2\">\n                    <div>\n                        {props.children}\n                    </div>\n\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default SideMenuLayout;\n\n\n{/* <SideMenu {...props} />\n<div className=\"DI_Side_Menu_Col2\">\n    <div>\n        {props.children}\n    </div>\n\n\n</div> */}\n","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/Balances.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Financials/TransfersHeading.js",["240","241"],"import React, { useEffect, useRef, useState } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport TransfersTable from \"./TransfersTable\";\nimport { ExportToCsv } from 'export-to-csv';\nconst options = {\n    fieldSeparator: ',',\n    quoteStrings: '\"',\n    decimalSeparator: '.',\n    showLabels: true,\n    showTitle: true,\n    title: 'Financials Status',\n    useTextFile: false,\n    useBom: true,\n    useKeysAsHeaders: true,\n    // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\n};\n\nconst tempData = [\n    {\n        date: \"2020-02-29\",\n        sourceOrRecipient: null,\n        reference: \"Final Split\",\n        amount: \"-448.52\",\n        currency: \"SAI\"\n    },\n    {\n        date: \"2020-02-29\",\n        sourceOrRecipient: null,\n        reference: \"Final Split\",\n        amount: \"-448.52\",\n        currency: \"SAI\"\n    },\n    {\n        date: \"2020-02-29\",\n        sourceOrRecipient: null,\n        reference: \"Final Split\",\n        amount: \"-448.52\",\n        currency: \"SAI\"\n    },\n    {\n        date: \"2020-02-29\",\n        sourceOrRecipient: null,\n        reference: \"Final Split\",\n        amount: \"-448.52\",\n        currency: \"SAI\"\n    },\n    {\n        date: \"2020-02-29\",\n        sourceOrRecipient: null,\n        reference: \"Final Split\",\n        amount: \"-448.52\",\n        currency: \"SAI\"\n    },\n\n]\nconst csvExporter = new ExportToCsv(options);\n\nconst outcome = [\n    { key: 'Token', value: 'token' },\n    { key: 'All', value: 'all' },\n    { key: 'Passed', value: 'passed' },\n    { key: 'Rejected', value: 'rejected' },\n    { key: 'Enacted', value: 'enacted' },\n    { key: 'Pending', value: 'pending' }\n]\n\nconst type = [\n    { key: 'Type', value: 'type' },\n    { key: 'All', value: 'all' },\n    { key: 'Voting', value: 'voting' },\n    { key: 'Financials', value: 'financials' },\n    { key: 'Shareholder', value: 'shareholder' }\n]\n\nconst TransferHeader = [\n    { key: 'Type', selectedValue: 'Type', data: type, style: { bottom: '-169px' } },\n    { key: 'Outcome', selectedValue: 'Outcome', data: outcome, style: { bottom: '-198px' } },\n]\n\nconst TransfersHeading = (props) => {\n    const myRef = useRef();\n    const [openDropBox, setOpenDropDown] = useState(false);\n    const [TransferHeaders, setTransferHeaders] = useState(TransferHeader);\n    const [activeDroxKey, setActiveDroxKey] = useState(null);\n    const [isDropDownSelected, setDropDownSelected] = useState(false);\n\n    const openDropDown = data => {\n        setOpenDropDown(true)\n        setActiveDroxKey(data.key)\n    }\n\n    const setSelectedValue = (e, option, data) => {\n        e.stopPropagation();\n        setDropDownSelected(true)\n        TransferHeader.filter(obj => obj.key === data.key)[0].selectedValue = option.key\n        setTransferHeaders(TransferHeader)\n        setOpenDropDown(false)\n    }\n\n    const handleClickOutside = e => {\n        if (!myRef.current.contains(e.target)) {\n            openDropDown(false);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    const handleEvent = (event, picker) => {\n    }\n\n    const handleCallback = (start, end, label) => {\n    }\n\n    return (\n        <div ref={myRef} onClick={handleClickOutside}>\n            <div >\n                <div className=\"DI_FP_Transfers_Heading\">\n                    <div className=\"DI_FP_Transfers_Title\" >\n                        {'Transfers'}\n                    </div>\n                    <div className=\"DI_FP_Export_Wrapper\" onClick={() => csvExporter.generateCsv(tempData)}>\n                        <div className=\"DI_FP_Export_Text\" >\n                            {'Export'}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"voting_header\" style={{ paddingLeft: '0px' }}>\n                        {\n                            TransferHeaders.map((obj, i) => {\n                                return (\n                                    <div name={obj.key} id={obj.key} className=\"dropdown voting-status\" onClick={() => openDropDown(obj)}>\n\n                                        <span className=\"votingstatus-text\">{obj.selectedValue}</span><span><i className=\"fa fa-angle-down votingstatus-down\"></i></span>\n                                        {/* <input className=\"selected-inp\" type=\"hidden\" /> */}\n                                        {\n                                            openDropBox && activeDroxKey === obj.key &&\n                                            <ul className=\"options\" style={obj.style}>\n                                                {obj.data.length > 0 && obj.data.map((opt, i) =>\n                                                    <li data-value={`${opt.value}`} onClick={(e) => setSelectedValue(e, opt, obj)}>{opt.key}</li>\n                                                )}\n                                            </ul>\n                                        }\n\n\n                                    </div>\n                                )\n                            })\n                        }\n\n                        <DateRangePicker onEvent={handleEvent} onCallback={handleCallback}>\n                            <div className=\"dropdown voting-status\" >\n                                <span className=\"votingstatus-text\">Start | End </span><span><i className=\"fa fa-angle-down votingstatus-down\"></i></span>\n                            </div>\n\n                        </DateRangePicker>\n\n                    </div>\n                </div>\n            </div>\n            <div className=\"DI_FP_Transfers_Table_main\">\n                <TransfersTable tempData={tempData} />\n            </div>\n        </div>\n    )\n}\n\nexport default TransfersHeading;","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Organisation.js",["242","243","244","245","246","247","248","249","250"],"import React, { Component } from 'react'\nimport FinancialsPage from '../Financials/FinancialsPage';\nimport Voting from './Voting/Voting'\nimport Shareholder from './Shareholders/Shareholder';\nimport './Organisation.css'\nimport EOSIOApi from '../../../common/eosio-apiService';\nimport Transaction from \"./TransactionType/TransactionType\";\nimport { REACT_APP_EOSIO_CONTRACT_ACCOUNT } from \"../../../common/config\";\nimport { organisationEditBtnData, sideMenu, upcommingFeautre } from \"./organisationData\";\nimport * as actions from \"../Redux/Actions\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../../Loading/Loading1'\n\nconst pageSize = 5\n\nclass Organisation extends Component {\n    constructor(props) {\n        super(props)\n        let activeMenuId = 0, activeSubMenu = sideMenu.filter(menu => menu.mainMenu === this.props.match.params.menu)\n        if (this.props.match.params.menu && activeSubMenu.length > 0)\n            activeMenuId = activeSubMenu[0].id\n        this.state = {\n            loading: Object.keys(this.props.selectedDAO).length === 0 ? true : false,\n            lower_bound: 0,\n            activeEosAccountBal: 0,\n            unallocatedSharesAmt: 0,\n            upper_bound: pageSize - 1,\n            activeSubMenu: activeMenuId,\n            callShareHolders: true,\n            pageSize: pageSize,\n            openFundTransaction: false,\n            contractAccount: REACT_APP_EOSIO_CONTRACT_ACCOUNT,\n            eosio: new EOSIOApi(REACT_APP_EOSIO_CONTRACT_ACCOUNT),\n            accountName: props.activeUser && props.activeUser.accountName ? props.activeUser.accountName : '',\n            shareHoldersList: [],\n            ShareholderList: [\n                { account: 'Adamsmith123', balance: 40 },\n                { account: 'Alexbeeston7', balance: 40 },\n                { account: 'Callumhd2020', balance: 40 },\n                { account: 'John Fisher', balance: 40 },\n                { account: 'Chris Bidton', balance: 40 }],\n            organisationList: this.props.organisationList,\n            selectedDAO: this.props.selectedDAO,\n            sideMenu,\n            upcommingFeautre\n        }\n    }\n\n\n    componentDidMount = async () => {\n        this.state.sideMenu.map((menu, i) => {\n            if (menu.mainMenu === this.props.match.params.menu) {\n                this.setState({ activeSubMenu: i })\n            }\n            return menu;\n        })\n        if (Object.keys(this.state.selectedDAO).length > 0)\n            await this.getShareHolderList(this.state.selectedDAO)\n    }\n\n    getShareHolderList = async (selectedDAO) => {\n        let shareholders = [],\n            shareHoldersList = [],\n            unallocatedSharesAmt = 0,\n            activeEosAccountBal = 0,\n            token = selectedDAO.token.split(' '),\n            creatorsList = this.props.creatorsList\n\n        if (creatorsList.length > 0) {\n            for (let k = 0; k < creatorsList.length; k++) {\n                try {\n                    shareholders.push(this.state.eosio.getTableRows('daotokens123', creatorsList[k].scope, 'accounts', 0, creatorsList[k].count, creatorsList[k].count))\n                } catch (error) {\n                    console.log(error)\n                }\n                if (k === creatorsList.length - 1) {\n                    let shareholdersInfo = await Promise.all(shareholders)\n                    for (let i = 0; i < shareholdersInfo.length; i++) {\n                        let activeShareholderAccount = shareholdersInfo[i].data.rows\n                        if (activeShareholderAccount.length > 0) {\n                            for (let l = 0; l < activeShareholderAccount.length; l++) {\n                                let bal = (activeShareholderAccount[l].data.balance).split(' ')\n                                if (bal[1] === token[1]) {\n                                    if (shareholdersInfo[i].scope === 'bigpicturesw') {\n                                        unallocatedSharesAmt = Number(bal[0])\n                                    }\n                                    if (shareholdersInfo[i].scope === localStorage.getItem('activeEosAccount')) {\n                                        activeEosAccountBal = Number(bal[0])\n                                    }\n                                    if (shareholdersInfo[i].scope != 'bigpicturesw')\n                                        shareHoldersList.push({ account: shareholdersInfo[i].scope, balance: bal[0] })\n                                }\n\n                                if (l === activeShareholderAccount.length - 1 && i === shareholdersInfo.length - 1) {\n                                    this.setState({ loading: false, shareHoldersList, unallocatedSharesAmt, activeEosAccountBal })\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    componentDidUpdate = async (prevProps, prevState) => {\n        if (prevProps.organisationList != this.props.organisationList)\n            this.setState({ organisationList: this.props.organisationList })\n        if (prevProps.selectedDAO != this.props.selectedDAO) {\n            this.setState({ selectedDAO: this.props.selectedDAO })\n        }\n        if (this.props.match.params.id && this.props.organisationList.length != 0) {\n            if (Object.keys(this.props.selectedDAO).length === 0) {\n                let selectedDAO = this.props.organisationList.filter(org => String(org.data.id) === this.props.match.params.id)\n                if (selectedDAO.length > 0) {\n                    await this.props.setSelectedDAO(selectedDAO[0].data)\n                    await this.getShareHolderList(selectedDAO[0].data)\n                } else {\n                    alert(`Dao Doesn't Exits`)\n                    // this.props.history.push('/')\n                }\n            } else if (prevProps.selectedDAO != this.props.selectedDAO) {\n                await this.props.setSelectedDAO(this.props.selectedDAO)\n                await this.getShareHolderList(this.props.selectedDAO)\n            }\n        } else {\n\n        }\n\n        // this.setState({ selectedDAO: this.props.selectedDAO })\n        if (this.props.activeUser && this.state.accountName != this.props.activeUser.accountName)\n            this.setState({ accountName: this.props.activeUser.accountName })\n        this.state.sideMenu.map(async (menu, i) => {\n            if (menu.mainMenu === this.props.match.params.menu && this.state.activeSubMenu != i) {\n                if (this.state.activeSubMenu !== i) {\n                    this.setState({ activeSubMenu: i })\n                }\n            }\n            return menu;\n        })\n    }\n\n    openFundTransaction = () => {\n        let openFundTransaction = this.state.openFundTransaction\n        this.setState({ openFundTransaction: !openFundTransaction })\n\n    }\n\n    renderSubMenu = () => {\n        let { sideMenu, activeSubMenu } = this.state,\n            activeSideMenu = sideMenu.filter(menu => menu.mainMenu === this.props.match.params.menu)\n        return (\n            <div className=\"DI_Organisation_MainHeader DI_Organisation_SubHeader\">\n                {activeSideMenu.length > 0 &&\n                    activeSideMenu[0].subMenu.map((menu, i) => {\n                        return (\n                            <div key={i} className=\"\" style={{ display: 'flex' }}>\n                                <div\n                                    className={`DI_Organisation_SubHeader_Text ${(activeSubMenu === '' && i === 0) || (i === 0) ? 'DI_Organisation_SubHeader_Text_Active' : ''} `}>\n                                    {!menu.live && <i className=\"fa fa-lock\" style={{ color: 'white', marginRight: \"10px\" }}></i>}{menu.name} {!menu.live && <span style={{ fontWeight: 100, marginLeft: \"10px\", fontSize: '13px' }}>(Coming soon)</span>}</div>\n                            </div>)\n                    })}\n            </div>\n        )\n    }\n\n\n    render() {\n        let { sideMenu, activeSubMenu, shareHoldersList, unallocatedSharesAmt,\n            activeEosAccountBal, selectedDAO, openFundTransaction, show } = this.state,\n            loadingStyle = { marginLeft: 'auto', marginRight: 'auto', display: 'block' }\n        return (\n            <div>\n                {localStorage.getItem('activeEosAccount') === null && <Redirect to='/' />}\n                {this.state.loading &&\n                    <div className=\"DI_Organisation_Main\" style={{ background: 'white', height: '100vh' }}>\n                        <Loading styleData={loadingStyle} />\n                    </div>}\n                {!this.state.loading && sideMenu.map((menu, i) => {\n                    return (\n                        sideMenu[activeSubMenu].mainMenu === menu.mainMenu &&\n                        <div key={i}>\n                            <div className=\"DI_Organisation_Main\" >\n                                <div className=\"DI_Organisation_MainHeader\">\n                                    <div className=\"DI_Organisation_Title\" >{selectedDAO.daoname}</div>\n                                    <Transaction\n                                        {...{\n                                            ...this.props,\n                                            ...{ unallocatedSharesAmt, activeEosAccountBal },\n                                            ...organisationEditBtnData.filter(obj => obj.type === menu.mainMenu)[0]\n                                        }} />\n                                </div>\n                                {this.renderSubMenu()}\n                            </div>\n                            {activeSubMenu === 0 && <Shareholder ShareholderList={shareHoldersList} selectedDAO={selectedDAO} unallocatedSharesAmt={unallocatedSharesAmt} />}\n                            {activeSubMenu === 2 && <Voting {...this.props} />}\n                            {activeSubMenu === 1 && <FinancialsPage />}\n                        </div>\n                    )\n                })}\n            </div>\n        )\n\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        selectedDAO: state.organisations.selectedDAO,\n        activeEosAccount: state.organisations.activeEosAccount,\n        organisationList: state.organisations.organistionList,\n        creatorsList: state.organisations.creatorsList,\n\n    };\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSelectedDAO: (value) => dispatch(actions.setSelectedDAO(value))\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Organisation);\n","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Shareholders/Shareholder.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/common/eosio-apiService.js",["251","252","253"],"import { Api, JsonRpc } from 'eosjs' // https://github.com/EOSIO/eosjs\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig'\nimport config from '../common/config'\n\nexport default class EOSIOClient {\n  constructor(contractAccount, activeUser) {\n    const rpc = new JsonRpc(config.REACT_APP_EOSIO_HTTP_URL)\n    this.contractAccount = contractAccount\n    this.eos = activeUser\n    this.rpc = new JsonRpc(config.REACT_APP_EOSIO_HTTP_URL)\n  }\n\n\n  transaction = async (actor, action, data) => {\n    console.log(\"transaction.....!!!!!!\", \"actor:\", actor, \"action:\", action, \"data:\", data)\n    try {\n      let tansact = await this.eos.signTransaction({\n        actions: [\n          {\n            account: this.contractAccount,\n            name: action,\n            authorization: [\n              {\n                actor,\n                permission: 'active'\n              }\n            ],\n            data: {\n              ...data\n            }\n          }\n        ]\n      }, { broadcast: true })\n      return tansact\n\n    } catch (error) {\n      alert(error)\n      return { isError: true }\n\n    }\n\n  }\n\n  getTableScope = async (contract, table, scope) => {\n    return await this.rpc.get_table_by_scope({\n      json: true,\n      \"code\": contract,\n      \"table\": table,\n      \"scope\": scope,\n      \"reverse\": true,\n      \"show_payer\": true\n    })\n  }\n\n  getTableRows = async (contract, scope, table, lower = null, upper = null, pageSize = null) => {\n    console.log(\"scope....getTableRowsCALLER\", contract, scope, table, lower, upper, pageSize)\n    let req = {\n      json: true,\n      code: contract, //contract that we target\n      scope: scope, //account that owns data  \n      table: table,//table name\n      // limit: pageSize,\n      // lower_bound: 0,\n      // upper_bound: 30,\n      // lower_bound:'id',//table primary key\n      // limit:20,//here we limit to 1 get only the single row with primary key eqaul to testacc\n      reverse: false,\n      show_payer: true\n    }\n    if (pageSize != null)\n      req.limit = pageSize\n    let data = await this.rpc.get_table_rows(req)\n    console.log()\n    console.log({ scope, data })\n    return { scope, data }\n  }\n}\n","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Reducers/rootReducers.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Sagas/index.js",["254","255"],"import { takeLatest } from \"redux-saga/effects\";\nimport * as actionTypes from \"../Actions/actionTypes\";\n\nexport function* watchAppUser() {\n    // yield takeLatest(actionTypes.GET_SINGLE_REPORT_CARD_DETAILS, getSingleReportCardsDetailsSaga)\n    // yield takeLatest(actionTypes.GET_MISSION_REPORT_CARD_DETAILS, getMissionReportCardsDetailsSaga)\n    // yield takeLatest(actionTypes.GET_SESSION_SUMMARY_DATA, getSessionSummaryDataSaga)\n}","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Reducers/organisationReducer.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Actions/actionTypes.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Actions/index.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/OrganisationDatePicker.js",["256"],"import React, { Component } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n \nclass OrganisationDatePicker extends React.Component {\n    handleEvent(event, picker) {\n      console.log(picker.startDate);\n    }\n    handleCallback(start, end, label) {\n      console.log(start, end, label);\n    }\n    render() {\n      return (\n        <DateRangePicker onEvent={this.handleEvent} onCallback={this.handleCallback}>\n          <div>Tej</div>\n        </DateRangePicker>\n      )\n    }\n  }\n\nexport default OrganisationDatePicker","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Redux/Actions/organisation.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/organisationData.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/TransactionType/TransactionType.js",["257","258"],"import React, { useEffect, useRef, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './TransactionType.css'\nimport EOSIOApi from '../../../../common/eosio-apiService';\nimport config from '../../../../common/config'\nimport TransactionFund from '../TransactionFund/TransactionFund'\nimport VotingModal from \"../VotingModal/VotingModal\";\n\nfunction TransactionType(props) {\n    const eosio = new EOSIOApi(config.REACT_APP_EOSIO_CONTRACT_ACCOUNT, props.activeUser)\n    const eosioDaoToken = new EOSIOApi('daotokens123', props.activeUser)\n\n    const [proposeVotes, setVroposeVotes] = useState(null);\n    const [clickedOpenModal, setclickedOpenModal] = useState(false);\n    const [clickedSubModal, setclickedSubModal] = useState(false);\n    const [modalData, setcModalData] = useState({});\n    const [votingmodal, setVotingModal] = useState(false);\n    const myRef = useRef();\n\n    const handleClickOutside = e => {\n        if (!myRef.current.contains(e.target))\n            setclickedOpenModal(false);\n    }\n\n    const closeVotingModal = () => setVotingModal(false);\n\n    const handleClose = () => setclickedSubModal(false)\n\n    const handleClickSubModal = (data) => {\n        setcModalData(data)\n        setclickedSubModal(true)\n    }\n\n    const handleClickInside = () => {\n        if (props.match.params.menu === 'Voting') {\n            setVotingModal(true)\n        } else\n            setclickedOpenModal(true)\n    }\n\n    const transferToken = async (tokenList, index) => {\n        let data = [], tokenInfp = {}\n        for (let i = 0; i < tokenList.length; i++) {\n            if (index === 1) {\n                tokenInfp = {\n                    daoid: props.selectedDAO.id,\n                    creator: props.activeEosAccount,\n                    user: tokenList[i].shareholderAccount,\n                    amount: (`${tokenList[i].balance} `).concat(props.selectedDAO.token.split(' ')[1])\n                }\n                data.push(await eosio.transaction(props.activeEosAccount, 'crttokenprp', { ...tokenInfp }))\n            } else if (index === 2) {\n                tokenInfp = {\n                    from: props.activeEosAccount,\n                    to: tokenList[i].shareholderAccount,\n                    quantity: (`${tokenList[i].balance} `).concat(props.selectedDAO.token.split(' ')[1]),\n                    memo: 'memo'\n                }\n                data.push(await eosioDaoToken.transaction(props.activeEosAccount, 'transfer', { ...tokenInfp }))\n            }\n            if (i === tokenList.length - 1) {\n                try {\n                    let result = await Promise.all(data)\n                    if (!(result && result.length > 0 && result[0].isError)) {\n                        setclickedSubModal(false)\n                        window.location.reload();\n                    }\n                } catch (error) {\n                    console.log(\"ERROR BLCOK\")\n                    console.log(error)\n                    alert(error)\n                    this.props.history.push('/')\n                }\n            }\n        }\n    }\n\n    const proposeVote = async (question) => {\n        let questionData = { daoid: props.selectedDAO.id, creator: props.activeEosAccount, question }\n        try {\n            await eosio.transaction(props.activeEosAccount, 'crtvotingprp', { ...questionData })\n            window.location.reload();\n        } catch (error) {\n            console.log(\"error...MSG\")\n            console.log(error)\n        }\n        setVotingModal(false)\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    return (\n        <div ref={myRef} onClick={handleClickOutside}>\n            <div className=\"DI_Edit_Organisation\" onClick={handleClickInside}>\n                <i className=\"fa fa-plus\" style={{ fontSize: '22px' }}></i>\n                {clickedOpenModal &&\n                    <div id=\"myModal\" className=\"modal dao-modal transaction-type-modal\"  >\n                        <div className=\"modal-content dao-content-box transactionType\">\n                            {props.data.map((obj, i) =>\n                                <span key={i} >\n                                    <div\n                                        disabled={!obj.live}\n                                        className={`transactionTypeContent ${!obj.live && ' transactionTypeContentDeActive'}`}\n                                        onClick={() => handleClickSubModal(obj.content)}>\n                                        {!obj.live && <i className=\"fa fa-lock lock\"></i>}{obj.title}\n                                    </div>\n                                </span>)}\n                        </div>\n                    </div>}\n            </div>\n\n            {votingmodal &&\n                <VotingModal\n                    handleClose={closeVotingModal}\n                    show={votingmodal}\n                    proposeVote={proposeVote}\n                    openFundModalDtls={modalData} />}\n\n            {clickedSubModal &&\n                <TransactionFund\n                    handleClose={handleClose}\n                    show={clickedSubModal}\n                    selectedDAO={props.selectedDAO}\n                    transferToken={(tokenList, index) => transferToken(tokenList, index)}\n                    unallocatedSharesAmt={props.unallocatedSharesAmt}\n                    activeEosAccountBal={props.activeEosAccountBal}\n                    activeEosAccount={props.activeEosAccount}\n                    openFundModalDtls={modalData} />}\n        </div>\n    );\n}\n\nexport default withRouter(TransactionType);","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/Voting.js",["259","260"],"import React, { useEffect, useRef, useState } from 'react';\nimport VotingCard from './VotingCard';\nimport moment from 'moment';\nimport VotingDetails from \"./VotingDetails\";\nimport EOSIOApi from '../../../../common/eosio-apiService';\nimport { REACT_APP_EOSIO_CONTRACT_ACCOUNT } from \"../../../../common/config\";\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport './Voting.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport { votingHeader1, votingHeader } from \"./VotingFilters\";\n\nconst Voting = (props) => {\n    const myRef = useRef();\n    const [data1, setData1] = useState([]);\n    const [startDate, setStartDate] = useState(null);\n    const [votingDtls, setVotingDtls] = useState(false);\n    const [openDropBox, setOpenDropDown] = useState(false);\n    const [activeDroxKey, setActiveDroxKey] = useState(null);\n    const [selectedDates, setSelectedDates] = useState(null);\n    const [votingDtlsData, setVotingDtlsData] = useState({});\n    const [votinQuestionList, setvotinQuestionList] = useState([]);\n    const [votingHeaders, setVotingHeaders] = useState(votingHeader);\n    const [isDropDownSelected, setDropDownSelected] = useState(false);\n    const [selectedFilters, setFilters] = useState({ Status: '', Outcome: '', Type: '' });\n    const eosio = new EOSIOApi(REACT_APP_EOSIO_CONTRACT_ACCOUNT, props.activeUser);\n\n    const handleClose = () => setVotingDtls(false);\n\n    const openVotingDtls = (votings) => {\n        setVotingDtls(true)\n        setVotingDtlsData(votings.voteQuestionDtls)\n    };\n\n\n    const openDropDown = data => {\n        setOpenDropDown(true)\n        setActiveDroxKey(data.key)\n    }\n\n    const setSelectedValue = async (e, option, data) => {\n        e.stopPropagation();\n        setDropDownSelected(true)\n        let votingFilters = JSON.parse(JSON.stringify(selectedFilters))\n        votingHeader.filter(obj => obj.key === data.key)[0].selectedValue = option.key\n        votingFilters[(data.key).trim()] = option.value\n        let updatedVotingList = await filterVotes(votingFilters)\n        setvotinQuestionList(updatedVotingList)\n        setFilters(votingFilters)\n        setVotingHeaders(votingHeader)\n        setOpenDropDown(false)\n    }\n\n    const filterVotes = (votingFilters, created = selectedDates) => {\n        let filterLength = 0,\n            filterNeedToTest = [],\n            updatedVotingList = [],\n            votingData1 = JSON.parse(JSON.stringify(data1))\n\n        for (const [prop, val] of Object.entries(votingFilters)) {\n            if (val !== 'all' && val !== '')\n                filterNeedToTest.push({ key: (prop).toLowerCase(), value: val })\n        }\n\n        filterLength = filterNeedToTest.length\n\n        if (filterLength > 0 || created !== null) {\n            for (let z = 0; z < votingData1.length; z++) {\n                let obj = votingData1[z]\n                let breakFlag = false\n                if (created != null) {\n                    if (moment(obj.created).utc().format(\"MM/DD/YYYY\") >= created.startDate\n                        && moment(obj.created).utc().format(\"MM/DD/YYYY\") <= created.endDate) {\n                        if (filterLength === 0) {\n                            breakFlag = true\n                        } else {\n                            if (filterLength === 1\n                                && obj[filterNeedToTest[0].key] === filterNeedToTest[0].value) {\n                                breakFlag = true;\n                            } else if (filterLength === 2\n                                && obj[filterNeedToTest[0].key] === filterNeedToTest[0].value\n                                && obj[filterNeedToTest[1].key] === filterNeedToTest[1].value) {\n                                breakFlag = true;\n                            } else if (filterLength === 3\n                                && obj[filterNeedToTest[0].key] === filterNeedToTest[0].value\n                                && obj[filterNeedToTest[1].key] === filterNeedToTest[1].value\n                                && obj[filterNeedToTest[2].key] === filterNeedToTest[2].value) {\n                                breakFlag = true;\n                            }\n                        }\n                    }\n\n                } else {\n                    if (filterLength === 1\n                        && obj[filterNeedToTest[0].key] === filterNeedToTest[0].value) {\n                        breakFlag = true;\n                    } else if (filterLength === 2\n                        && obj[filterNeedToTest[0].key] === filterNeedToTest[0].value\n                        && obj[filterNeedToTest[1].key] === filterNeedToTest[1].value) {\n                        breakFlag = true;\n                    } else if (filterLength === 3\n                        && obj[filterNeedToTest[0].key] === filterNeedToTest[0].value\n                        && obj[filterNeedToTest[1].key] === filterNeedToTest[1].value\n                        && obj[filterNeedToTest[2].key] === filterNeedToTest[2].value) {\n                        breakFlag = true;\n                    }\n                }\n                if (breakFlag)\n                    updatedVotingList.push(obj)\n                if (z === votingData1.length - 1)\n                    return updatedVotingList\n            }\n        } else {\n            updatedVotingList = votingData1\n            return updatedVotingList\n        }\n    }\n\n    const handleClickOutside = e => {\n        if (!myRef.current.contains(e.target)) {\n            openDropDown(false);\n        }\n    };\n\n    const handleEvent = (event, picker) => {\n    }\n\n    const handleCallback = async (start, end, label) => {\n        setSelectedDates({ startDate: moment(start).format(\"MM/DD/YYYY\"), endDate: moment(end).format(\"MM/DD/YYYY\") })\n        let updatedVotingList = await filterVotes(\n            selectedFilters,\n            {\n                startDate: moment(start).format(\"MM/DD/YYYY\"),\n                endDate: moment(end).format(\"MM/DD/YYYY\")\n            })\n        setvotinQuestionList(updatedVotingList)\n    }\n\n    const enactAmount = async (vote) => {\n        let response = await eosio.transaction(props.activeEosAccount, 'exectknprp', { id: vote.id })\n        if (!(response && response.length > 0 && response[0].isError))\n            window.location.reload();\n    }\n\n    const votedQuestion = async (votingData, isVoted) => {\n        let response = null,\n            token = props.daoList.filter((dao) => dao.data.id === votingData.daoid)[0].data.token.split(' ')[1],\n            vote = { id: votingData.id, voter: props.activeEosAccount, tkn: `0 ${token}`, choice: isVoted }\n\n        if (votingData.type === 'Shareholders')\n            response = await eosio.transaction(props.activeEosAccount, 'votetknprp', { ...vote })\n        else\n            response = await eosio.transaction(props.activeEosAccount, 'votevotprp', { ...vote })\n\n        setVotingDtls(false)\n\n        if (!(response && response.length > 0 && response[0].isError))\n            window.location.reload();\n    }\n\n    const getVotingList = async () => {\n        try {\n            let j = 0,\n                data1 = [],\n                votingList = [],\n                votingListResponse = await new EOSIOApi(REACT_APP_EOSIO_CONTRACT_ACCOUNT).getTableRows('bigpicturesw', 'bigpicturesw', 'votingprp', 0, props.totalVotings, props.totalVotings),\n                shareholdersVotingListResponse = await new EOSIOApi(REACT_APP_EOSIO_CONTRACT_ACCOUNT).getTableRows('bigpicturesw', 'bigpicturesw', 'tokenprp', 0, props.totalVotings, props.totalVotings)\n\n            if (votingListResponse.data.rows.length > 0) {\n                let data = JSON.parse(JSON.stringify(votingListResponse.data.rows))\n                data.map(el => votingList.push(el.data));\n            }\n\n            if (shareholdersVotingListResponse.data.rows.length > 0) {\n                let data = JSON.parse(JSON.stringify(shareholdersVotingListResponse.data.rows))\n                data.map(el => votingList.push(el.data));\n            }\n            if (votingList.length > 0) {\n                votingList.sort((a, b) => new Date(b.created) - new Date(a.created))\n                setStartDate(moment(votingList[votingList.length - 1].created).format(\"MM/DD/YYYY\"))\n            }\n\n            for (j = 0; j < votingList.length; j++) {\n                let item = JSON.parse(JSON.stringify(votingList[j])),\n                    totalVote = item.yes + item.no,\n                    voteDAO = props.daoList.filter((dao) => dao.data.id === item.daoid)[0],\n                    token = voteDAO.data.token.split(' ')[1],\n                    isTokenAvailable = props.daotokensList.filter((dao) => (dao.data.balance).split(' ')[1] === token)\n\n                if (item.question) {\n                    item.type = 'Voting';\n                    item.title = 'Voting';\n                } else {\n                    item.type = 'Shareholders';\n                    item.title = 'Sharevolder';\n                    item.question = `This proposal will distribute ${item.amount} to ${item.user}`\n                }\n\n                if (isTokenAvailable.length > 0)\n                    item.canIVote = true\n                else\n                    item.canIVote = false\n\n                item.contentId = j + 1\n                item.yesPerc = totalVote === 0 ? 0 : ((item.yes / totalVote) * 100).toFixed(2)\n                item.noPerc = totalVote === 0 ? 0 : ((item.no / totalVote) * 100).toFixed(2)\n\n                if (moment(moment.utc(item.expires).format()).isAfter(moment.utc().format())) {\n                    item.outcome = 'Pending'\n                    item.status = 'Open'\n                } else {\n                    item.status = 'Closed'\n                    if (item.yesPerc >= voteDAO.data.support) {\n                        item.outcome = 'Passed'\n                        if (!(moment(moment.utc(item.expires).format()).isAfter(moment.utc().format())) && item.type === 'Shareholders' && item.paid === 1) {\n                            item.outcome = 'Passed & Enacted'\n                        }\n                    } else if (item.yesPerc < voteDAO.data.support) {\n                        item.outcome = 'Rejected'\n                    }\n                }\n                data1.push(item)\n                if (j === votingList.length - 1) {\n                    setData1(data1)\n                    setvotinQuestionList(data1)\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getVotingList()\n        setFilters({ Status: '', Outcome: '', Type: '' })\n        setVotingHeaders(votingHeader1)\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n    \n    return (\n        <div className=\"voting_main\" ref={myRef} onClick={handleClickOutside}>\n            <div className=\"voting_header\" >\n                {votingHeaders.map((obj, k) =>\n                    <div\n                        id={obj.key}\n                        name={obj.key}\n                        className=\"dropdown voting-status\"\n                        onClick={() => openDropDown(obj)}>\n                        <span className=\"votingstatus-text\">{obj.selectedValue}</span>\n                        <span><i className=\"fa fa-angle-down votingstatus-down\"></i></span>\n                        {openDropBox && activeDroxKey === obj.key &&\n                            <ul className=\"options\" style={obj.style}>\n                                {obj.data.length > 0 && obj.data.map((opt, i) =>\n                                    <li\n                                        key={i}\n                                        data-value={`${opt.value}`}\n                                        onClick={(e) => setSelectedValue(e, opt, obj)}>\n                                        {opt.key}\n                                    </li>\n                                )}\n                            </ul>}\n                    </div>)}\n                {startDate != null &&\n                    <DateRangePicker\n                        onEvent={handleEvent}\n                        onCallback={handleCallback}\n                        initialSettings={{\n                            startDate: selectedDates === null ? startDate : selectedDates.startDate,\n                            endDate: selectedDates === null ? moment().utc().format(\"MM/DD/YYYY\") : selectedDates.startDate\n                        }} >\n                        <div className=\"dropdown voting-status\" style={{ width: 'max-content' }} >\n                            <span className=\"votingstatus-text\" style={{ paddingRight: '51px' }}>\n                                {selectedDates === null ? `Start | End` : `${selectedDates.startDate} | ${'  '}${selectedDates.endDate}`}\n                            </span>\n                            <span><i className=\"fa fa-angle-down votingstatus-down\"></i>\n                            </span>\n                        </div>\n                    </DateRangePicker>}\n            </div>\n            <div className=\"voting_body\">\n                {votinQuestionList.length > 0 && votinQuestionList.map((obj, l) =>\n                    <VotingCard\n                        id={l}\n                        voteQuestionDtls={obj}\n                        votingDtls={votingDtls}\n                        openVotingDtls={(votings) => openVotingDtls(votings)}\n                    />)}\n            </div>\n            {\n                votingDtls && Object.keys(votingDtlsData).length > 0 &&\n                <VotingDetails\n                    show={votingDtls}\n                    votingDtlsData={votingDtlsData}\n                    handleClose={() => handleClose()}\n                    enactAmount={(vote) => enactAmount(vote)}\n                    votedQuestion={(votingData, isVoted) => votedQuestion(votingData, isVoted)}\n                />\n            }\n        </div >\n    )\n}\n\nexport default Voting;","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Loading/Loading1.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/Header/SearchBar.js",["261"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Pages/Redux/Actions/index\";\nimport './SearchBar.css';\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            daoValue: '',\n            selectedDao: null,\n            alertBox: false,\n            decentralizeDao: this.props.daoList,\n            clickedOpenDaoSearch: false\n\n        }\n        this.box = React.createRef();\n    }\n\n    handleClickOutside = (event) => {\n        if (this.box && !this.box.current.contains(event.target))\n            this.setState({ clickedOpenDaoSearch: false })\n    }\n\n    searchDao = (e) => {\n        if (this.state.daoValue.trim() === '') {\n            alert(`ADD Dao Name`)\n        } else {\n            this.setState({ clickedOpenDaoSearch: false })\n            let selectedDAO = this.props.organisationList.filter((org) =>\n                org.data.daoname.toUpperCase() === this.state.daoValue.toUpperCase())\n            if (selectedDAO.length > 0)\n                this.props.history.push(`/organisation/Shareholders/${selectedDAO[0].data.id}`)\n            else {\n                alert(`DAO DOESN'T EXIT's`)\n                this.setState({ alertBox: true })\n            }\n        }\n    }\n\n    onChange = (e) => {\n        let txtValue = '',\n            updatedecentralizeDao = [],\n            decentralizeDao = this.props.daoList,\n            filter = e.target.value.toUpperCase()\n\n        filter = e.target.value.toUpperCase();\n\n        for (let i = 0; i < decentralizeDao.length; i++) {\n            txtValue = decentralizeDao[i].data.daoname\n            if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                updatedecentralizeDao.push(decentralizeDao[i])\n            }\n        }\n\n        if (e.target.value === '')\n            this.setState({ decentralizeDao: this.props.daoList })\n\n        this.setState({ decentralizeDao: updatedecentralizeDao, daoValue: e.target.value })\n    }\n\n    onSelectOfDao = async (e, dao) => {\n        this.setState({ daoValue: dao.daoname, selectedDao: dao })\n        await this.props.setSelectedDAO(dao)\n        this.setState({ clickedOpenDaoSearch: false }, () => this.props.history.push(`/organisation/Shareholders/${dao.id}`))\n    }\n\n    handleClickInside = () => {\n        console.log(\"handleClickInside....\", this.props)\n        if (this.props.activeUser === null)\n            alert(\"Please Connect to Wallet\")\n        else\n            this.setState({ clickedOpenDaoSearch: true })\n    }\n\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.daoList !== this.props.daoList)\n            this.setState({ decentralizeDao: this.props.daoList })\n\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    render() {\n        let { clickedOpenDaoSearch, decentralizeDao } = this.state\n        return (\n            <div className=\"DI_header_search\" ref={this.box} onClick={this.handleClickInside}>\n                <div className=\"input-group DI_search\" >\n                    <input type=\"text\"\n                        disabled={this.props.activeUser === null}\n                        className=\"form-control\"\n                        onChange={this.onChange}\n                        placeholder=\"Search DAO's\"\n                        value={this.state.daoValue}\n                        onKeyDown={(e) => e.key === 'Enter' && this.searchDao(e)}\n                    />\n                    <div className=\"input-group-append\">\n                        <button\n                            type=\"button\"\n                            disabled={this.props.activeUser === null}\n                            className=\"btn btn-secondary\"\n                            onClick={this.searchDao}\n                            disabled={this.state.daoValue.trim() === '' ? true : false}>\n                            <i className=\"fa fa-search DI-search\"></i>\n                        </button>\n                    </div>\n                </div>\n                {clickedOpenDaoSearch &&\n                    <div id=\"myModal\" className=\"modal dao-modal\" >\n                        <div className=\"modal-content dao-content-box\">\n                            {decentralizeDao.length > 0 && decentralizeDao.map((dao, i) =>\n                                <div\n                                    key={i}\n                                    className=\"dao-list\"\n                                    onClick={e => this.onSelectOfDao(e, dao.data)}>\n                                    {dao.data.daoname}\n                                </div>)}\n                        </div>\n                    </div>}\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        organisationList: state.organisations.organistionList,\n        creatorsList: state.organisations.creatorsList,\n        selectedDAO: state.organisations.selectedDAO\n    };\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSelectedDAO: (value) => dispatch(actions.setSelectedDAO(value))\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VotingCard.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VotingDetails.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/VotingModal/VotingModal.js",["262","263","264"],"import React, { useEffect, useRef, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Modal, Button } from \"react-bootstrap\";\nimport './VotingModal.css';\nimport CommonTooltip from '../../../Tooltip/CommonTooltip';\n\nfunction VotingModal(props) {\n    const [question, setQuestionValue] = useState('');\n    const [errMsg, setErrorMsg] = useState('');\n\n    const setQuestion = (e) => {\n        setQuestionValue(e.target.value)\n    }\n\n    const proposeVote = (questionData) => {\n        if (question.trim() === '')\n            setErrorMsg(`Question can't be empty`)\n        else\n            props.proposeVote(questionData)\n    }\n    \n    return (\n        <>\n            <Modal className=\"voting-modal\" show={props.show} onHide={props.handleClose} animation={false}>\n                <Modal.Header>\n                    <Modal.Title>Propose a vote</Modal.Title>\n                    <div className=\"modal-close\" onClick={props.handleClose}> <i className=\"fa fa-close DI-close\"></i></div>\n                </Modal.Header>\n                <div className=\"voting-modal-body\">Your question  <i data-tip data-for=\"CO_PV_Question_Id\" className=\"fas fa-question-circle toolTipQuestion\"></i>\n                    <CommonTooltip tooltipId=\"CO_PV_Question_Id\" tooltipName=\"Question\"></CommonTooltip>\n                </div>\n                <textarea placeholder='Enter your question....' className=\"voting-modal-textarea\" onChange={(e) => setQuestion(e)} />\n                {errMsg && <div className=\"errMsg\" style={{ marginBottom: '0px' }}>{errMsg}</div>}\n                <div className=\"propose-vote-btn\" onClick={() => proposeVote(question)}>Propose Vote</div>\n            </Modal>\n        </>\n    );\n}\n\n\nexport default withRouter(VotingModal);","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/TransactionFund/TransactionFund.js",["265","266"],"import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './TransactionFund.css'\nimport { Modal } from \"react-bootstrap\";\nimport { REACT_APP_EOSIO_CONTRACT_ACCOUNT } from \"../../../../common/config\";\nimport CommonTooltip from '../../../Tooltip/CommonTooltip';\n\n\nfunction TransactionFund(props) {\n    const [shareHolderCount, addShareHolderCount] = useState(1);\n    const [shareHoldersAccount, addShareHoldersAccount] = useState([\n        {\n            shareholderAccount: '',\n            balance: '',\n            balanceError: '',\n            errMsg: ''\n        }]);\n\n    let insufititentBalance = false,\n        subHeading = props.openFundModalDtls.subHeading\n\n    if (props.openFundModalDtls.subHeading.includes('9900')) {\n        if (props.unallocatedSharesAmt === 0)\n            insufititentBalance = true\n        subHeading = subHeading.replace('9900', props.unallocatedSharesAmt)\n    } if (props.openFundModalDtls.subHeading.includes('20 FRST')) {\n        if (props.activeEosAccountBal === 0)\n            insufititentBalance = true\n        subHeading = subHeading.replace('20 FRST', `${props.activeEosAccountBal} FRST`).replace(\"#activeEosAccountBal#\", localStorage.getItem('activeEosAccount'))\n    }\n\n    const shareHolderFormFromat = () => {\n        let shareHoldersList = []\n        for (let i = 0; i < shareHolderCount; i++) {\n            shareHoldersList.push(\n                <span key={i}>\n                    <div className=\"flexContainer\">\n                        <div className=\"errMsg\" style={{ marginBottom: '0px', width: '424px', marginRight: '16px' }}>{shareHoldersAccount[i].errMsg}</div>\n                        <div className=\"errMsg\" style={{ marginBottom: '0px', width: '100px' }}>{shareHoldersAccount[i].balanceError}</div>\n                    </div>\n                    <div className=\"flexContainer\">\n                        <input type=\"text\"\n                            className='organisations-TextBox org-txtBox-col-1'\n                            onChange={(event, newValue) => onShareNameAccountChange(event, newValue, 'shareholderAccount', i)}\n                            placeholder={props.openFundModalDtls.placeholder} />\n                        <input type=\"text\"\n                            className='organisations-TextBox org-txtBox-col-2'\n                            onChange={(event, newValue) => onShareNameAccountChange(event, newValue, 'balance', i)}\n                            placeholder={'-'} />\n                    </div>\n                </span>\n            )\n        }\n        return shareHoldersList\n    }\n\n\n    const addMoreShares = () => {\n        shareHoldersAccount.push({ shareholderAccount: '', balance: '' })\n        addShareHolderCount(shareHolderCount + 1)\n        addShareHoldersAccount(shareHoldersAccount)\n    }\n\n    const onShareNameAccountChange = (event, value, contentType, i) => {\n        shareHoldersAccount[i][contentType] = event.target.value\n        if (shareHoldersAccount[i].errMsg !== '' && event.target.value !== '')\n            shareHoldersAccount[i].errMsg = ''\n        if (shareHoldersAccount[i].balanceError !== '' && event.target.value !== '')\n            shareHoldersAccount[i].balanceError = ''\n        addShareHoldersAccount(shareHoldersAccount)\n    }\n\n\n    const transfer = (index) => {\n        let isError = false,\n            token = props.selectedDAO.token.split(' ')[1],\n            myshareHoldersAccount = JSON.parse(JSON.stringify(shareHoldersAccount))\n        let tootal = 0\n        for (let i = 0; i < myshareHoldersAccount.length; i++) {\n            const regex = /[^a-z0-5]/gm;\n            // var regex1 = new RegExp('(\\\\d+(?:\\\\.\\\\d+)?\\\\s' + token + ')')\n            // if (!(regex1.exec(myshareHoldersAccount[i].balance))) {\n            //     isError = true\n            //     myshareHoldersAccount[i].balanceError = `Symbol:${token}`\n            // } else\n            let bal = myshareHoldersAccount[i].balance.split(' ')[0]\n            tootal = Number(bal) + tootal\n            if (((index === 1 && Number(bal) > props.unallocatedSharesAmt) ||\n                (index === 2 && Number(bal) > props.activeEosAccountBal))) {\n                isError = true\n                myshareHoldersAccount[i].balanceError = 'overdrawn balance'\n            }\n\n            if (Number(bal) > 0) {\n                myshareHoldersAccount[i].myshareHoldersAccount = ''\n                myshareHoldersAccount[i].balance = bal.trim()\n\n            } else {\n                isError = true\n                myshareHoldersAccount[i].balanceError = `Must transfer positive quantity`\n            }\n            if (((index === 1 && tootal > props.unallocatedSharesAmt) ||\n                (index === 2 && tootal > props.activeEosAccountBal))\n                && i === myshareHoldersAccount.length - 1) {\n                alert('overdrawn balance')\n                isError = true\n            }\n            // if (myshareHoldersAccount[i].balance.split(' ')[0] > props.activeEosAccountBal) {\n            //     isError = true\n            //     myshareHoldersAccount[i].balanceError = 'overdrawn balance'\n            // } else {\n            //     myshareHoldersAccount[i].balanceError = ''\n            // }\n            // let bal = myshareHoldersAccount[i].balance\n            // myshareHoldersAccount[i].balance = (bal.trim()).concat(` ${token}`)\n\n            if (regex.exec(myshareHoldersAccount[i].shareholderAccount) != null || myshareHoldersAccount[i].shareholderAccount.length < 12 || regex.exec(myshareHoldersAccount[i].shareholderAccount) != null || myshareHoldersAccount[i].shareholderAccount.length > 14 || myshareHoldersAccount[i].shareholderAccount === '') {\n                isError = true\n                myshareHoldersAccount[i].errMsg = 'Account names must be 12 characters long and only include the characters 12345abcdefghijklmnopqrstuvwxyz'\n            } else if (myshareHoldersAccount[i].shareholderAccount === props.activeEosAccount) {\n                isError = true\n                myshareHoldersAccount[i].errMsg = `Cann't transfer to self`\n\n            } else {\n                myshareHoldersAccount[i].errMsg = ''\n            }\n        }\n        if (isError) {\n            addShareHoldersAccount(myshareHoldersAccount)\n        } else {\n            addShareHoldersAccount(myshareHoldersAccount)\n            props.transferToken(myshareHoldersAccount, index)\n        }\n    }\n\n    return (\n        <>\n            <Modal show={props.show} onHide={props.handleClose} animation={false}>\n                <Modal.Header>\n                    <Modal.Title>{props.openFundModalDtls.heading}</Modal.Title>\n                    <div className=\"modal-close\" onClick={props.handleClose}> <i className=\"fa fa-close DI-close\"></i></div>\n                </Modal.Header>\n                <div className=\"modal-subheader\">{subHeading}</div>\n                {insufititentBalance && <div style={{ color: 'red', fontSize: '10px' }}> Insuffitient Shares</div>}\n                <Modal.Body>\n                    <div className=\"flexContainer\">\n                        <div className='share-col-1 fundtransfer-account'>{props.openFundModalDtls.fund} <i data-tip data-for=\"CO_TF_Shareholder_Id\" className=\"fas fa-question-circle toolTipQuestion\"></i>\n                            <CommonTooltip tooltipId=\"CO_TF_Shareholder_Id\" tooltipName=\"Shareholders\"></CommonTooltip>\n                        </div>\n                        <div className='share-col-2'>Balances  <i data-tip data-for=\"CO_TF_Balances_Id\" className=\"fas fa-question-circle toolTipQuestion\"></i>\n                            <CommonTooltip tooltipId=\"CO_TF_Balances_Id\" tooltipName=\"Balances\"></CommonTooltip>\n                        </div>\n                    </div>\n                    <div className=\"errMsg\" style={{ marginBottom: '0px' }}></div>\n                    {shareHolderFormFromat()}\n                    <button className=\"organisation-btn next-btn addMore-share-btn addMore-fundTransfer-btn\"\n                        onClick={addMoreShares} disabled={insufititentBalance} >Add More</button>\n                    <button className=\"fundtransfer-btn\" onClick={() => transfer(props.openFundModalDtls.index)} disabled={insufititentBalance}>{props.openFundModalDtls.btn}</button>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default withRouter(TransactionFund);","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/WalletList/WalletList.js",["267","268","269","270","271","272","273"],"import React from 'react';\nimport \"./WalletList.css\";\nimport anchor from \"../../Assets/images/1x/anchor.png\";\nimport eosAuth from \"../../Assets/images/1x/eosAuth.png\";\nimport ledger from \"../../Assets/images/1x/ledger.png\";\nimport trezor from \"../../Assets/images/1x/trezor.png\";\nimport lynx from \"../../Assets/images/1x/lynx.png\";\nimport scatter from \"../../Assets/images/1x/scatter.png\";\nimport simpleEos from \"../../Assets/images/1x/simpleEos.png\";\n\n\nconst WalletList = (props) => {\n    return (\n        <div className=\"wallet\">\n            <div className=\"walletType-heading\">Wallet Type</div>\n            <div className=\"walletType-subheading\">We currently only support Anchor wallet, but we will be adding more soon!</div>\n            <div className=\"walletType-btn\" style={{cursor:'pointer'}} onClick={props.ual.showModal}>\n                <img src={anchor} style={{ width: '20%', marginTop: '8px' }} />Anchor</div>\n            <div className=\"walletType-cmgSoon\">Comming Soon...</div>\n            <div className=\"flexContainer\">\n                <div className=\"walletType-btn walletType-disablebtn\">\n                <img src={scatter} style={{ width: '15%', marginTop: '0px', marginRight: '8px' }} />\n                    Scatter\n                </div>\n                <div className=\"walletType-btn walletType-disablebtn\">\n                    <img src={ledger} style={{ width: '15%', marginTop: '0px', marginRight: '3px' }} />\n                    Ledger\n                </div>\n                <div className=\"walletType-btn walletType-disablebtn\">\n                    <img src={trezor} style={{ width: '15%', marginTop: '2px', marginRight: '7px' }} />\n                    Trezor\n                </div>\n            </div>\n            <div className=\"flexContainer\">\n                <div className=\"walletType-btn walletType-disablebtn\">\n                    <img src={simpleEos} style={{ width: '15%', marginTop: '2px', marginRight: '7px' }} />\n                    SimplEOS\n                </div>\n                <div className=\"walletType-btn walletType-disablebtn\">\n                    <img src={lynx} style={{ width: '20%', marginLeft: '-2px' }} />\n                    Lynx\n                </div>\n                <div className=\"walletType-btn walletType-disablebtn\">\n                    <img src={eosAuth} style={{ width: '15%', marginTop: '2px', marginRight: '7px' }} />\n                    EOS\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WalletList;","/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VotingFilters.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VoteResult.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Pages/Organisations/Voting/VotingPercentage.js",[],"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/Tooltip/CommonTooltip.js",[],{"ruleId":"274","severity":1,"message":"275","line":7,"column":49,"nodeType":"276","messageId":"277","endLine":7,"endColumn":64},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"274","severity":1,"message":"282","line":3,"column":8,"nodeType":"276","messageId":"277","endLine":3,"endColumn":30},{"ruleId":"274","severity":1,"message":"283","line":24,"column":7,"nodeType":"276","messageId":"277","endLine":24,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":71,"column":18,"nodeType":"276","messageId":"286","endLine":71,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":81,"column":18,"nodeType":"276","messageId":"286","endLine":81,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":86,"column":18,"nodeType":"276","messageId":"286","endLine":86,"endColumn":19},{"ruleId":"287","severity":1,"message":"288","line":19,"column":22,"nodeType":"289","endLine":19,"endColumn":79},{"ruleId":"290","severity":1,"message":"291","line":5,"column":73,"nodeType":"292","endLine":5,"endColumn":96},{"ruleId":"287","severity":1,"message":"288","line":15,"column":17,"nodeType":"289","endLine":15,"endColumn":84},{"ruleId":"274","severity":1,"message":"293","line":7,"column":8,"nodeType":"276","messageId":"277","endLine":7,"endColumn":20},{"ruleId":"274","severity":1,"message":"294","line":10,"column":10,"nodeType":"276","messageId":"277","endLine":10,"endColumn":42},{"ruleId":"274","severity":1,"message":"295","line":131,"column":56,"nodeType":"276","messageId":"277","endLine":131,"endColumn":75},{"ruleId":"274","severity":1,"message":"296","line":286,"column":36,"nodeType":"276","messageId":"277","endLine":286,"endColumn":42},{"ruleId":"297","severity":1,"message":"298","line":312,"column":36,"nodeType":"299","messageId":"300","endLine":312,"endColumn":38},{"ruleId":"290","severity":1,"message":"291","line":353,"column":37,"nodeType":"292","endLine":353,"endColumn":50},{"ruleId":"290","severity":1,"message":"291","line":394,"column":29,"nodeType":"292","endLine":394,"endColumn":42},{"ruleId":"274","severity":1,"message":"301","line":5,"column":8,"nodeType":"276","messageId":"277","endLine":5,"endColumn":22},{"ruleId":"274","severity":1,"message":"302","line":9,"column":9,"nodeType":"276","messageId":"277","endLine":9,"endColumn":20},{"ruleId":"274","severity":1,"message":"303","line":10,"column":11,"nodeType":"276","messageId":"277","endLine":10,"endColumn":20},{"ruleId":"304","severity":1,"message":"305","line":34,"column":1,"nodeType":"306","messageId":"307","endLine":41,"endColumn":11},{"ruleId":"274","severity":1,"message":"308","line":85,"column":12,"nodeType":"276","messageId":"277","endLine":85,"endColumn":30},{"ruleId":"309","severity":1,"message":"310","line":109,"column":8,"nodeType":"311","endLine":109,"endColumn":10,"suggestions":"312"},{"ruleId":"297","severity":1,"message":"298","line":91,"column":67,"nodeType":"299","messageId":"300","endLine":91,"endColumn":69},{"ruleId":"297","severity":1,"message":"298","line":107,"column":40,"nodeType":"299","messageId":"300","endLine":107,"endColumn":42},{"ruleId":"297","severity":1,"message":"298","line":109,"column":35,"nodeType":"299","messageId":"300","endLine":109,"endColumn":37},{"ruleId":"297","severity":1,"message":"298","line":112,"column":78,"nodeType":"299","messageId":"300","endLine":112,"endColumn":80},{"ruleId":"297","severity":1,"message":"298","line":122,"column":46,"nodeType":"299","messageId":"300","endLine":122,"endColumn":48},{"ruleId":"297","severity":1,"message":"298","line":131,"column":61,"nodeType":"299","messageId":"300","endLine":131,"endColumn":63},{"ruleId":"297","severity":1,"message":"298","line":134,"column":92,"nodeType":"299","messageId":"300","endLine":134,"endColumn":94},{"ruleId":"274","severity":1,"message":"313","line":170,"column":47,"nodeType":"276","messageId":"277","endLine":170,"endColumn":66},{"ruleId":"274","severity":1,"message":"314","line":170,"column":68,"nodeType":"276","messageId":"277","endLine":170,"endColumn":72},{"ruleId":"274","severity":1,"message":"315","line":1,"column":10,"nodeType":"276","messageId":"277","endLine":1,"endColumn":13},{"ruleId":"274","severity":1,"message":"316","line":2,"column":10,"nodeType":"276","messageId":"277","endLine":2,"endColumn":29},{"ruleId":"274","severity":1,"message":"317","line":7,"column":11,"nodeType":"276","messageId":"277","endLine":7,"endColumn":14},{"ruleId":"274","severity":1,"message":"318","line":1,"column":10,"nodeType":"276","messageId":"277","endLine":1,"endColumn":20},{"ruleId":"274","severity":1,"message":"319","line":2,"column":13,"nodeType":"276","messageId":"277","endLine":2,"endColumn":24},{"ruleId":"274","severity":1,"message":"320","line":1,"column":17,"nodeType":"276","messageId":"277","endLine":1,"endColumn":26},{"ruleId":"274","severity":1,"message":"321","line":13,"column":12,"nodeType":"276","messageId":"277","endLine":13,"endColumn":24},{"ruleId":"274","severity":1,"message":"322","line":13,"column":26,"nodeType":"276","messageId":"277","endLine":13,"endColumn":41},{"ruleId":"274","severity":1,"message":"308","line":24,"column":12,"nodeType":"276","messageId":"277","endLine":24,"endColumn":30},{"ruleId":"309","severity":1,"message":"323","line":239,"column":8,"nodeType":"311","endLine":239,"endColumn":10,"suggestions":"324"},{"ruleId":"290","severity":1,"message":"291","line":111,"column":29,"nodeType":"292","endLine":111,"endColumn":88},{"ruleId":"274","severity":1,"message":"325","line":1,"column":17,"nodeType":"276","messageId":"277","endLine":1,"endColumn":26},{"ruleId":"274","severity":1,"message":"326","line":1,"column":28,"nodeType":"276","messageId":"277","endLine":1,"endColumn":34},{"ruleId":"274","severity":1,"message":"327","line":3,"column":17,"nodeType":"276","messageId":"277","endLine":3,"endColumn":23},{"ruleId":"274","severity":1,"message":"294","line":5,"column":10,"nodeType":"276","messageId":"277","endLine":5,"endColumn":42},{"ruleId":"274","severity":1,"message":"328","line":76,"column":13,"nodeType":"276","messageId":"277","endLine":76,"endColumn":18},{"ruleId":"287","severity":1,"message":"288","line":18,"column":17,"nodeType":"289","endLine":18,"endColumn":80},{"ruleId":"287","severity":1,"message":"288","line":22,"column":17,"nodeType":"289","endLine":22,"endColumn":101},{"ruleId":"287","severity":1,"message":"288","line":26,"column":21,"nodeType":"289","endLine":26,"endColumn":104},{"ruleId":"287","severity":1,"message":"288","line":30,"column":21,"nodeType":"289","endLine":30,"endColumn":104},{"ruleId":"287","severity":1,"message":"288","line":36,"column":21,"nodeType":"289","endLine":36,"endColumn":107},{"ruleId":"287","severity":1,"message":"288","line":40,"column":21,"nodeType":"289","endLine":40,"endColumn":84},{"ruleId":"287","severity":1,"message":"288","line":44,"column":21,"nodeType":"289","endLine":44,"endColumn":105},"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","no-native-reassign",["329"],"no-negated-in-lhs",["330"],"'OrganisationDatePicker' is defined but never used.","'contract_account' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BottomDesign' is defined but never used.","'REACT_APP_EOSIO_CONTRACT_ACCOUNT' is defined but never used.","'votingConfiguration' is assigned a value but never used.","'errMsg' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'TransfersTable' is defined but never used.","'modalButton' is assigned a value but never used.","'logoutBtn' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'isDropDownSelected' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.","ArrayExpression",["331"],"'openFundTransaction' is assigned a value but never used.","'show' is assigned a value but never used.","'Api' is defined but never used.","'JsSignatureProvider' is defined but never used.","'rpc' is assigned a value but never used.","'takeLatest' is defined but never used.","'actionTypes' is defined but never used.","'Component' is defined but never used.","'proposeVotes' is assigned a value but never used.","'setVroposeVotes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getVotingList' and 'handleClickOutside'. Either include them or remove the dependency array.",["332"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},"Update the dependencies array to be: [handleClickOutside]",{"range":"337","text":"338"},"Update the dependencies array to be: [getVotingList, handleClickOutside]",{"range":"339","text":"340"},[3154,3156],"[handleClickOutside]",[10806,10808],"[getVotingList, handleClickOutside]"]