{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport baseLogger from './logger.js';\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  LanguageUtil.prototype.getScriptPartFromCode = function getScriptPartFromCode(code) {\n    if (!code || code.indexOf('-') < 0) return null;\n    var p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    return this.formatLanguageCode(p.join('-'));\n  };\n\n  LanguageUtil.prototype.getLanguagePartFromCode = function getLanguagePartFromCode(code) {\n    if (!code || code.indexOf('-') < 0) return code;\n    var p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  };\n\n  LanguageUtil.prototype.formatLanguageCode = function formatLanguageCode(code) {\n    // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      var p = code.split('-');\n\n      if (this.options.lowerCaseLng) {\n        p = p.map(function (part) {\n          return part.toLowerCase();\n        });\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase(); // if lenght 2 guess it's a country\n\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n\n      return p.join('-');\n    }\n\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  };\n\n  LanguageUtil.prototype.isWhitelisted = function isWhitelisted(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n      code = this.getLanguagePartFromCode(code);\n    }\n\n    return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n  };\n\n  LanguageUtil.prototype.getFallbackCodes = function getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n    if (!code) return fallbacks.default || []; // asume we have an object defining fallbacks\n\n    var found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  };\n\n  LanguageUtil.prototype.toResolveHierarchy = function toResolveHierarchy(code, fallbackCode) {\n    var _this = this;\n\n    var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    var codes = [];\n\n    var addCode = function addCode(c) {\n      if (!c) return;\n\n      if (_this.isWhitelisted(c)) {\n        codes.push(c);\n      } else {\n        _this.logger.warn('rejecting non-whitelisted language code: ' + c);\n      }\n    };\n\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n\n    fallbackCodes.forEach(function (fc) {\n      if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n    });\n    return codes;\n  };\n\n  return LanguageUtil;\n}();\n\nexport default LanguageUtil;","map":{"version":3,"sources":["/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/node_modules/i18next/dist/es/LanguageUtils.js"],"names":["_classCallCheck","instance","Constructor","TypeError","baseLogger","capitalize","string","charAt","toUpperCase","slice","LanguageUtil","options","whitelist","logger","create","prototype","getScriptPartFromCode","code","indexOf","p","split","length","pop","formatLanguageCode","join","getLanguagePartFromCode","specialCases","lowerCaseLng","map","part","toLowerCase","cleanCode","isWhitelisted","load","nonExplicitWhitelist","getFallbackCodes","fallbacks","Object","toString","apply","default","found","toResolveHierarchy","fallbackCode","_this","fallbackCodes","fallbackLng","codes","addCode","c","push","warn","forEach","fc"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport baseLogger from './logger.js';\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  LanguageUtil.prototype.getScriptPartFromCode = function getScriptPartFromCode(code) {\n    if (!code || code.indexOf('-') < 0) return null;\n\n    var p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    return this.formatLanguageCode(p.join('-'));\n  };\n\n  LanguageUtil.prototype.getLanguagePartFromCode = function getLanguagePartFromCode(code) {\n    if (!code || code.indexOf('-') < 0) return code;\n\n    var p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  };\n\n  LanguageUtil.prototype.formatLanguageCode = function formatLanguageCode(code) {\n    // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      var p = code.split('-');\n\n      if (this.options.lowerCaseLng) {\n        p = p.map(function (part) {\n          return part.toLowerCase();\n        });\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n\n        // if lenght 2 guess it's a country\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n\n      return p.join('-');\n    }\n\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  };\n\n  LanguageUtil.prototype.isWhitelisted = function isWhitelisted(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n  };\n\n  LanguageUtil.prototype.getFallbackCodes = function getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n\n    if (!code) return fallbacks.default || [];\n\n    // asume we have an object defining fallbacks\n    var found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks.default;\n\n    return found || [];\n  };\n\n  LanguageUtil.prototype.toResolveHierarchy = function toResolveHierarchy(code, fallbackCode) {\n    var _this = this;\n\n    var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n\n    var codes = [];\n    var addCode = function addCode(c) {\n      if (!c) return;\n      if (_this.isWhitelisted(c)) {\n        codes.push(c);\n      } else {\n        _this.logger.warn('rejecting non-whitelisted language code: ' + c);\n      }\n    };\n\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n\n    fallbackCodes.forEach(function (fc) {\n      if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n    });\n\n    return codes;\n  };\n\n  return LanguageUtil;\n}();\n\nexport default LanguageUtil;"]},"metadata":{},"sourceType":"module"}