{"ast":null,"code":"var _jsxFileName = \"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/Header/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Pages/Redux/Actions/index\";\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = event => {\n      if (this.box && !this.box.current.contains(event.target)) this.setState({\n        clickedOpenDaoSearch: false\n      });\n    };\n\n    this.searchDao = e => {\n      if (this.state.daoValue.trim() === '') {\n        alert(`ADD Dao Name`);\n      } else {\n        this.setState({\n          clickedOpenDaoSearch: false\n        });\n        let selectedDAO = this.props.organisationList.filter(org => org.data.daoname.toUpperCase() === this.state.daoValue.toUpperCase());\n        if (selectedDAO.length > 0) this.props.history.push(`/organisation/Shareholders/${selectedDAO[0].data.id}`);else {\n          alert(`DAO DOESN'T EXIT's`);\n          this.setState({\n            alertBox: true\n          });\n        }\n      }\n    };\n\n    this.onChange = e => {\n      let txtValue = '',\n          updatedecentralizeDao = [],\n          decentralizeDao = this.props.daoList,\n          filter = e.target.value.toUpperCase();\n      filter = e.target.value.toUpperCase();\n\n      for (let i = 0; i < decentralizeDao.length; i++) {\n        txtValue = decentralizeDao[i].data.daoname;\n\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          updatedecentralizeDao.push(decentralizeDao[i]);\n        }\n      }\n\n      if (e.target.value === '') this.setState({\n        decentralizeDao: this.props.daoList\n      });\n      this.setState({\n        decentralizeDao: updatedecentralizeDao,\n        daoValue: e.target.value\n      });\n    };\n\n    this.onSelectOfDao = async (e, dao) => {\n      this.setState({\n        daoValue: dao.daoname,\n        selectedDao: dao\n      });\n      await this.props.setSelectedDAO(dao);\n      this.setState({\n        clickedOpenDaoSearch: false\n      }, () => this.props.history.push(`/organisation/Shareholders/${dao.id}`));\n    };\n\n    this.handleClickInside = () => {\n      console.log(\"handleClickInside....\", this.props);\n      if (this.props.activeUser === null) alert(\"Please Connect to Wallet\");else this.setState({\n        clickedOpenDaoSearch: true\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps.daoList !== this.props.daoList) this.setState({\n        decentralizeDao: this.props.daoList\n      });\n      document.addEventListener('mousedown', this.handleClickOutside);\n    };\n\n    this.componentDidMount = () => {\n      document.addEventListener('mousedown', this.handleClickOutside);\n    };\n\n    this.componentWillUnmount = () => {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    };\n\n    this.state = {\n      daoValue: '',\n      selectedDao: null,\n      alertBox: false,\n      decentralizeDao: this.props.daoList,\n      clickedOpenDaoSearch: false\n    };\n    this.box = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    let {\n      clickedOpenDaoSearch,\n      decentralizeDao\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DI_header_search\",\n      ref: this.box,\n      onClick: this.handleClickInside,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group DI_search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          disabled: this.props.activeUser === null,\n          className: \"form-control\",\n          onChange: this.onChange,\n          placeholder: \"Search DAO's\",\n          value: this.state.daoValue,\n          onKeyDown: e => e.key === 'Enter' && this.searchDao(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: this.props.activeUser === null,\n            className: \"btn btn-secondary\",\n            onClick: this.searchDao,\n            disabled: this.state.daoValue.trim() === '' ? true : false,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-search DI-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), clickedOpenDaoSearch && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"myModal\",\n        className: \"modal dao-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content dao-content-box\",\n          children: decentralizeDao.length > 0 && decentralizeDao.map((dao, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dao-list\",\n            onClick: e => this.onSelectOfDao(e, dao.data),\n            children: dao.data.daoname\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    organisationList: state.organisations.organistionList,\n    creatorsList: state.organisations.creatorsList,\n    selectedDAO: state.organisations.selectedDAO\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedDAO: value => dispatch(actions.setSelectedDAO(value))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchBar));","map":{"version":3,"sources":["/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/src/components/layouts/Header/SearchBar.js"],"names":["React","Component","withRouter","connect","actions","SearchBar","constructor","props","handleClickOutside","event","box","current","contains","target","setState","clickedOpenDaoSearch","searchDao","e","state","daoValue","trim","alert","selectedDAO","organisationList","filter","org","data","daoname","toUpperCase","length","history","push","id","alertBox","onChange","txtValue","updatedecentralizeDao","decentralizeDao","daoList","value","i","indexOf","onSelectOfDao","dao","selectedDao","setSelectedDAO","handleClickInside","console","log","activeUser","componentDidUpdate","prevProps","document","addEventListener","componentDidMount","componentWillUnmount","removeEventListener","createRef","render","key","map","mapStateToProps","organisations","organistionList","creatorsList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Pages/Redux/Actions/index\";\nimport './SearchBar.css';\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            daoValue: '',\n            selectedDao: null,\n            alertBox: false,\n            decentralizeDao: this.props.daoList,\n            clickedOpenDaoSearch: false\n\n        }\n        this.box = React.createRef();\n    }\n\n    handleClickOutside = (event) => {\n        if (this.box && !this.box.current.contains(event.target))\n            this.setState({ clickedOpenDaoSearch: false })\n    }\n\n    searchDao = (e) => {\n        if (this.state.daoValue.trim() === '') {\n            alert(`ADD Dao Name`)\n        } else {\n            this.setState({ clickedOpenDaoSearch: false })\n            let selectedDAO = this.props.organisationList.filter((org) =>\n                org.data.daoname.toUpperCase() === this.state.daoValue.toUpperCase())\n            if (selectedDAO.length > 0)\n                this.props.history.push(`/organisation/Shareholders/${selectedDAO[0].data.id}`)\n            else {\n                alert(`DAO DOESN'T EXIT's`)\n                this.setState({ alertBox: true })\n            }\n        }\n    }\n\n    onChange = (e) => {\n        let txtValue = '',\n            updatedecentralizeDao = [],\n            decentralizeDao = this.props.daoList,\n            filter = e.target.value.toUpperCase()\n\n        filter = e.target.value.toUpperCase();\n\n        for (let i = 0; i < decentralizeDao.length; i++) {\n            txtValue = decentralizeDao[i].data.daoname\n            if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                updatedecentralizeDao.push(decentralizeDao[i])\n            }\n        }\n\n        if (e.target.value === '')\n            this.setState({ decentralizeDao: this.props.daoList })\n\n        this.setState({ decentralizeDao: updatedecentralizeDao, daoValue: e.target.value })\n    }\n\n    onSelectOfDao = async (e, dao) => {\n        this.setState({ daoValue: dao.daoname, selectedDao: dao })\n        await this.props.setSelectedDAO(dao)\n        this.setState({ clickedOpenDaoSearch: false }, () => this.props.history.push(`/organisation/Shareholders/${dao.id}`))\n    }\n\n    handleClickInside = () => {\n        console.log(\"handleClickInside....\", this.props)\n        if (this.props.activeUser === null)\n            alert(\"Please Connect to Wallet\")\n        else\n            this.setState({ clickedOpenDaoSearch: true })\n    }\n\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.daoList !== this.props.daoList)\n            this.setState({ decentralizeDao: this.props.daoList })\n\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    render() {\n        let { clickedOpenDaoSearch, decentralizeDao } = this.state\n        return (\n            <div className=\"DI_header_search\" ref={this.box} onClick={this.handleClickInside}>\n                <div className=\"input-group DI_search\" >\n                    <input type=\"text\"\n                        disabled={this.props.activeUser === null}\n                        className=\"form-control\"\n                        onChange={this.onChange}\n                        placeholder=\"Search DAO's\"\n                        value={this.state.daoValue}\n                        onKeyDown={(e) => e.key === 'Enter' && this.searchDao(e)}\n                    />\n                    <div className=\"input-group-append\">\n                        <button\n                            type=\"button\"\n                            disabled={this.props.activeUser === null}\n                            className=\"btn btn-secondary\"\n                            onClick={this.searchDao}\n                            disabled={this.state.daoValue.trim() === '' ? true : false}>\n                            <i className=\"fa fa-search DI-search\"></i>\n                        </button>\n                    </div>\n                </div>\n                {clickedOpenDaoSearch &&\n                    <div id=\"myModal\" className=\"modal dao-modal\" >\n                        <div className=\"modal-content dao-content-box\">\n                            {decentralizeDao.length > 0 && decentralizeDao.map((dao, i) =>\n                                <div\n                                    key={i}\n                                    className=\"dao-list\"\n                                    onClick={e => this.onSelectOfDao(e, dao.data)}>\n                                    {dao.data.daoname}\n                                </div>)}\n                        </div>\n                    </div>}\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        organisationList: state.organisations.organistionList,\n        creatorsList: state.organisations.creatorsList,\n        selectedDAO: state.organisations.selectedDAO\n    };\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSelectedDAO: (value) => dispatch(actions.setSelectedDAO(value))\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n"]},"metadata":{},"sourceType":"module"}