{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _regeneratorRuntime = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnchorUser = void 0;\n\nvar universal_authenticator_library_1 = require(\"universal-authenticator-library\");\n\nvar eosio_1 = require(\"@greymass/eosio\");\n\nvar UALAnchorError_1 = require(\"./UALAnchorError\");\n\nvar AnchorUser = /*#__PURE__*/function (_universal_authentica) {\n  _inherits(AnchorUser, _universal_authentica);\n\n  var _super = _createSuper(AnchorUser);\n\n  function AnchorUser(rpc, client, identity) {\n    var _this;\n\n    _classCallCheck(this, AnchorUser);\n\n    _this = _super.call(this);\n    _this.accountName = '';\n    _this.requestPermission = '';\n    var session = identity.session;\n    _this.accountName = String(session.auth.actor);\n    _this.chainId = String(session.chainId);\n\n    if (identity.signatures) {\n      var _identity$signatures = _slicedToArray(identity.signatures, 1);\n\n      _this.signerProof = _identity$signatures[0];\n    }\n\n    if (identity.signerKey) {\n      _this.signerKey = identity.signerKey;\n    }\n\n    if (identity.resolvedTransaction) {\n      _this.signerRequest = identity.transaction;\n    }\n\n    _this.requestPermission = String(session.auth.permission);\n    _this.session = session;\n    _this.client = client;\n    _this.rpc = rpc;\n    return _this;\n  }\n\n  _createClass(AnchorUser, [{\n    key: \"objectify\",\n    value: function objectify(data) {\n      return JSON.parse(JSON.stringify(data));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction, options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var completedTransaction, wasBroadcast, serializedTransaction, message, type, cause;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.session.transact(transaction, options);\n\n              case 3:\n                completedTransaction = _context.sent;\n                wasBroadcast = options.broadcast !== false;\n                serializedTransaction = eosio_1.PackedTransaction.fromSigned(eosio_1.SignedTransaction.from(completedTransaction.transaction));\n                return _context.abrupt(\"return\", this.returnEosjsTransaction(wasBroadcast, Object.assign(Object.assign({}, completedTransaction), {\n                  transaction_id: completedTransaction.payload.tx,\n                  serializedTransaction: serializedTransaction.packed_trx.array,\n                  signatures: this.objectify(completedTransaction.signatures)\n                })));\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                message = 'Unable to sign transaction';\n                type = universal_authenticator_library_1.UALErrorType.Signing;\n                cause = _context.t0;\n                throw new UALAnchorError_1.UALAnchorError(message, type, cause);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n    }\n  }, {\n    key: \"signArbitrary\",\n    value: function signArbitrary(publicKey, data, _) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                throw new UALAnchorError_1.UALAnchorError(\"Anchor does not currently support signArbitrary(\".concat(publicKey, \", \").concat(data, \")\"), universal_authenticator_library_1.UALErrorType.Unsupported, null);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"verifyKeyOwnership\",\n    value: function verifyKeyOwnership(challenge) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw new UALAnchorError_1.UALAnchorError(\"Anchor does not currently support verifyKeyOwnership(\".concat(challenge, \")\"), universal_authenticator_library_1.UALErrorType.Unsupported, null);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"getAccountName\",\n    value: function getAccountName() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.accountName);\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.chainId);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getKeys\",\n    value: function getKeys() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var keys, message, type, cause;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return this.signatureProvider.getAvailableKeys(this.requestPermission);\n\n              case 3:\n                keys = _context6.sent;\n                return _context6.abrupt(\"return\", keys);\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                message = \"Unable to getKeys for account \".concat(this.accountName, \".\\n        Please make sure your wallet is running.\");\n                type = universal_authenticator_library_1.UALErrorType.DataRequest;\n                cause = _context6.t0;\n                throw new UALAnchorError_1.UALAnchorError(message, type, cause);\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n    }\n  }, {\n    key: \"isAccountValid\",\n    value: function isAccountValid() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var account, actualKeys, authorizationKeys, message, type, cause;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.t0 = this.client;\n\n                if (!_context7.t0) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                _context7.next = 5;\n                return this.client.v1.chain.get_account(this.accountName);\n\n              case 5:\n                _context7.t0 = _context7.sent;\n\n              case 6:\n                account = _context7.t0;\n                actualKeys = this.extractAccountKeys(account);\n                _context7.next = 10;\n                return this.getKeys();\n\n              case 10:\n                authorizationKeys = _context7.sent;\n                return _context7.abrupt(\"return\", actualKeys.filter(function (key) {\n                  return authorizationKeys.indexOf(key) !== -1;\n                }).length > 0);\n\n              case 14:\n                _context7.prev = 14;\n                _context7.t1 = _context7[\"catch\"](0);\n\n                if (!(_context7.t1.constructor.name === 'UALAnchorError')) {\n                  _context7.next = 18;\n                  break;\n                }\n\n                throw _context7.t1;\n\n              case 18:\n                message = \"Account validation failed for account \".concat(this.accountName, \".\");\n                type = universal_authenticator_library_1.UALErrorType.Validation;\n                cause = _context7.t1;\n                throw new UALAnchorError_1.UALAnchorError(message, type, cause);\n\n              case 22:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 14]]);\n      }));\n    }\n  }, {\n    key: \"extractAccountKeys\",\n    value: function extractAccountKeys(account) {\n      var keySubsets = account.permissions.map(function (permission) {\n        return permission.required_auth.keys.map(function (key) {\n          return key.key;\n        });\n      });\n      var keys = [];\n\n      var _iterator = _createForOfIteratorHelper(keySubsets),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var keySubset = _step.value;\n          keys = keys.concat(keySubset);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return keys;\n    }\n  }]);\n\n  return AnchorUser;\n}(universal_authenticator_library_1.User);\n\nexports.AnchorUser = AnchorUser;","map":{"version":3,"sources":["/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/ual-anchor/dist/AnchorUser.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","AnchorUser","universal_authenticator_library_1","require","eosio_1","UALAnchorError_1","rpc","client","identity","accountName","requestPermission","session","String","auth","actor","chainId","signatures","signerProof","signerKey","resolvedTransaction","signerRequest","transaction","permission","data","JSON","parse","stringify","options","transact","completedTransaction","wasBroadcast","broadcast","serializedTransaction","PackedTransaction","fromSigned","SignedTransaction","from","returnEosjsTransaction","assign","transaction_id","payload","tx","packed_trx","array","objectify","message","type","UALErrorType","Signing","cause","UALAnchorError","publicKey","_","Unsupported","challenge","signatureProvider","getAvailableKeys","keys","DataRequest","v1","chain","get_account","account","actualKeys","extractAccountKeys","getKeys","authorizationKeys","filter","key","indexOf","length","constructor","name","Validation","keySubsets","permissions","map","required_auth","keySubset","concat","User"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnchorUser = void 0;\nconst universal_authenticator_library_1 = require(\"universal-authenticator-library\");\nconst eosio_1 = require(\"@greymass/eosio\");\nconst UALAnchorError_1 = require(\"./UALAnchorError\");\nclass AnchorUser extends universal_authenticator_library_1.User {\n    constructor(rpc, client, identity) {\n        super();\n        this.accountName = '';\n        this.requestPermission = '';\n        const { session } = identity;\n        this.accountName = String(session.auth.actor);\n        this.chainId = String(session.chainId);\n        if (identity.signatures) {\n            [this.signerProof] = identity.signatures;\n        }\n        if (identity.signerKey) {\n            this.signerKey = identity.signerKey;\n        }\n        if (identity.resolvedTransaction) {\n            this.signerRequest = identity.transaction;\n        }\n        this.requestPermission = String(session.auth.permission);\n        this.session = session;\n        this.client = client;\n        this.rpc = rpc;\n    }\n    objectify(data) {\n        return JSON.parse(JSON.stringify(data));\n    }\n    signTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const completedTransaction = yield this.session.transact(transaction, options);\n                const wasBroadcast = (options.broadcast !== false);\n                const serializedTransaction = eosio_1.PackedTransaction.fromSigned(eosio_1.SignedTransaction.from(completedTransaction.transaction));\n                return this.returnEosjsTransaction(wasBroadcast, Object.assign(Object.assign({}, completedTransaction), { transaction_id: completedTransaction.payload.tx, serializedTransaction: serializedTransaction.packed_trx.array, signatures: this.objectify(completedTransaction.signatures) }));\n            }\n            catch (e) {\n                const message = 'Unable to sign transaction';\n                const type = universal_authenticator_library_1.UALErrorType.Signing;\n                const cause = e;\n                throw new UALAnchorError_1.UALAnchorError(message, type, cause);\n            }\n        });\n    }\n    signArbitrary(publicKey, data, _) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new UALAnchorError_1.UALAnchorError(`Anchor does not currently support signArbitrary(${publicKey}, ${data})`, universal_authenticator_library_1.UALErrorType.Unsupported, null);\n        });\n    }\n    verifyKeyOwnership(challenge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new UALAnchorError_1.UALAnchorError(`Anchor does not currently support verifyKeyOwnership(${challenge})`, universal_authenticator_library_1.UALErrorType.Unsupported, null);\n        });\n    }\n    getAccountName() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.accountName;\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.chainId;\n        });\n    }\n    getKeys() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const keys = yield this.signatureProvider.getAvailableKeys(this.requestPermission);\n                return keys;\n            }\n            catch (error) {\n                const message = `Unable to getKeys for account ${this.accountName}.\n        Please make sure your wallet is running.`;\n                const type = universal_authenticator_library_1.UALErrorType.DataRequest;\n                const cause = error;\n                throw new UALAnchorError_1.UALAnchorError(message, type, cause);\n            }\n        });\n    }\n    isAccountValid() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const account = this.client && (yield this.client.v1.chain.get_account(this.accountName));\n                const actualKeys = this.extractAccountKeys(account);\n                const authorizationKeys = yield this.getKeys();\n                return actualKeys.filter((key) => {\n                    return authorizationKeys.indexOf(key) !== -1;\n                }).length > 0;\n            }\n            catch (e) {\n                if (e.constructor.name === 'UALAnchorError') {\n                    throw e;\n                }\n                const message = `Account validation failed for account ${this.accountName}.`;\n                const type = universal_authenticator_library_1.UALErrorType.Validation;\n                const cause = e;\n                throw new UALAnchorError_1.UALAnchorError(message, type, cause);\n            }\n        });\n    }\n    extractAccountKeys(account) {\n        const keySubsets = account.permissions.map((permission) => permission.required_auth.keys.map((key) => key.key));\n        let keys = [];\n        for (const keySubset of keySubsets) {\n            keys = keys.concat(keySubset);\n        }\n        return keys;\n    }\n}\nexports.AnchorUser = AnchorUser;\n"]},"metadata":{},"sourceType":"script"}