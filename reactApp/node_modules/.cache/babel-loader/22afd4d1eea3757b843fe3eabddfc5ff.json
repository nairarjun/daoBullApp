{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This class provides the business logic layer for the UAL.\n */\n\nclass UAL {\n  /**\n   * @param chains          A list of chains the dapp supports.\n   *\n   * @param appName         The name of the app using the authenticators\n   *\n   * @param authenticators  A list of authenticator apps that the dapp supports.\n   */\n  constructor(chains, appName, authenticators) {\n    this.chains = chains;\n    this.appName = appName;\n    this.authenticators = authenticators;\n  }\n  /**\n   * Returns an object with a list of initialized Authenticators that returned true for shouldRender()\n   * as well as an authenticator that supports autoLogin\n   */\n\n\n  getAuthenticators() {\n    const availableAuthenticators = this.authenticators.filter(authenticator => {\n      return authenticator.shouldRender();\n    });\n    availableAuthenticators.forEach(authenticator => authenticator.init());\n    let autoLoginAuthenticator = null;\n\n    if (availableAuthenticators.length === 1) {\n      if (availableAuthenticators[0].shouldAutoLogin()) {\n        autoLoginAuthenticator = availableAuthenticators[0];\n      }\n    }\n\n    return {\n      availableAuthenticators,\n      autoLoginAuthenticator\n    };\n  }\n\n}\n\nexports.UAL = UAL;","map":{"version":3,"sources":["/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/node_modules/universal-authenticator-library/dist/UAL.js"],"names":["Object","defineProperty","exports","value","UAL","constructor","chains","appName","authenticators","getAuthenticators","availableAuthenticators","filter","authenticator","shouldRender","forEach","init","autoLoginAuthenticator","length","shouldAutoLogin"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;;AACA,MAAMC,GAAN,CAAU;AACN;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,cAAlB,EAAkC;AACzC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,uBAAuB,GAAG,KAAKF,cAAL,CAAoBG,MAApB,CAA4BC,aAAD,IAAmB;AAC1E,aAAOA,aAAa,CAACC,YAAd,EAAP;AACH,KAF+B,CAAhC;AAGAH,IAAAA,uBAAuB,CAACI,OAAxB,CAAiCF,aAAD,IAAmBA,aAAa,CAACG,IAAd,EAAnD;AACA,QAAIC,sBAAsB,GAAG,IAA7B;;AACA,QAAIN,uBAAuB,CAACO,MAAxB,KAAmC,CAAvC,EAA0C;AACtC,UAAIP,uBAAuB,CAAC,CAAD,CAAvB,CAA2BQ,eAA3B,EAAJ,EAAkD;AAC9CF,QAAAA,sBAAsB,GAAGN,uBAAuB,CAAC,CAAD,CAAhD;AACH;AACJ;;AACD,WAAO;AACHA,MAAAA,uBADG;AAEHM,MAAAA;AAFG,KAAP;AAIH;;AAhCK;;AAkCVd,OAAO,CAACE,GAAR,GAAcA,GAAd","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This class provides the business logic layer for the UAL.\n */\nclass UAL {\n    /**\n     * @param chains          A list of chains the dapp supports.\n     *\n     * @param appName         The name of the app using the authenticators\n     *\n     * @param authenticators  A list of authenticator apps that the dapp supports.\n     */\n    constructor(chains, appName, authenticators) {\n        this.chains = chains;\n        this.appName = appName;\n        this.authenticators = authenticators;\n    }\n    /**\n     * Returns an object with a list of initialized Authenticators that returned true for shouldRender()\n     * as well as an authenticator that supports autoLogin\n     */\n    getAuthenticators() {\n        const availableAuthenticators = this.authenticators.filter((authenticator) => {\n            return authenticator.shouldRender();\n        });\n        availableAuthenticators.forEach((authenticator) => authenticator.init());\n        let autoLoginAuthenticator = null;\n        if (availableAuthenticators.length === 1) {\n            if (availableAuthenticators[0].shouldAutoLogin()) {\n                autoLoginAuthenticator = availableAuthenticators[0];\n            }\n        }\n        return {\n            availableAuthenticators,\n            autoLoginAuthenticator\n        };\n    }\n}\nexports.UAL = UAL;\n"]},"metadata":{},"sourceType":"script"}