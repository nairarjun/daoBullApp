{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withUAL = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _UALContext = require(\"./UALContext\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * @type {function}\n * @name withUAL\n * @desc Function for making a component a consumer of the UAL context\n */\n\n\nvar withUAL = function withUAL(WrappedComponent) {\n  return function (props) {\n    var displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n    var WithUAL = function WithUAL(wrappedProps) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_UALContext.UALContext.Consumer, null, function (context) {\n        return /*#__PURE__*/_react[\"default\"].createElement(WrappedComponent, _extends({}, wrappedProps, {\n          ual: context\n        }));\n      });\n    };\n\n    WithUAL.displayName = \"withUAL(\".concat(displayName, \")\");\n    return /*#__PURE__*/_react[\"default\"].createElement(WithUAL, props);\n  };\n};\n\nexports.withUAL = withUAL;","map":{"version":3,"sources":["../../../src/components/provider/withUAL.js"],"names":["withUAL","displayName","WrappedComponent","WithUAL","context"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;AAKO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAA,gBAAA,EAAgB;AAAA,SAAI,UAAA,KAAA,EAAS;AAClD,QAAMC,WAAW,GAAGC,gBAAgB,CAAhBA,WAAAA,IAAgCA,gBAAgB,CAAhDA,IAAAA,IAApB,WAAA;;AACA,QAAMC,OAAO,GAAG,SAAVA,OAAU,CAAA,YAAA,EAAY;AAAA,aAAA,aAC1B,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,WAAA,CAAD,UAAC,CAAD,QAAA,EAAA,IAAA,EACI,UAAA,OAAA,EAAO;AAAA,eAAA,aAAK,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,YAAA,EAAA;AAAoC,UAAA,GAAG,EAAEC;AAAzC,SAAA,CAAA,CAAL;AAFe,OAC1B,CAD0B;AAA5B,KAAA;;AAKAD,IAAAA,OAAO,CAAPA,WAAAA,GAAAA,WAAAA,MAAAA,CAAAA,WAAAA,EAAAA,GAAAA,CAAAA;AACA,WAAA,aAAO,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,OAAA,EAAP,KAAO,CAAP;AARqC,GAAA;AAAhC,CAAA","sourcesContent":["import React from 'react'\n\nimport { UALContext } from './UALContext'\n\n/**\n * @type {function}\n * @name withUAL\n * @desc Function for making a component a consumer of the UAL context\n */\nexport const withUAL = WrappedComponent => props => {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component'\n  const WithUAL = wrappedProps => (\n    <UALContext.Consumer>\n      { context =>  <WrappedComponent {...wrappedProps} ual={context} /> }\n    </UALContext.Consumer>\n  )\n  WithUAL.displayName = `withUAL(${displayName})`\n  return <WithUAL {...props}/>\n}\n"]},"metadata":{},"sourceType":"script"}