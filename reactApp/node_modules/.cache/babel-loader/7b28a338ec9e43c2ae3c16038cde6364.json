{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Represents Button that is rendered for, and interfaces with, a specific Authenticator app.\n */\n\nvar Authenticator = /*#__PURE__*/function () {\n  /**\n   * @param chains     This represents each of the chains that the dapp provides support for.\n   *\n   * @param options    Optional argument that is intended for Authenticator specific options.\n   */\n  function Authenticator(chains, options) {\n    _classCallCheck(this, Authenticator);\n\n    this.chains = chains;\n    this.options = options;\n    /**\n     * Default value for shouldInvalidateAfter(), 1 week in seconds\n     */\n\n    this.defaultInvalidateAfter = 604800;\n  }\n  /**\n   * Returns the amount of seconds after the authentication will be invalid for logging in on new\n   * browser sessions.  Setting this value to zero will cause users to re-attempt authentication on\n   * every new browser session.  Please note that the invalidate time will be saved client-side and\n   * should not be relied on for security.\n   */\n\n\n  _createClass(Authenticator, [{\n    key: \"shouldInvalidateAfter\",\n    value: function shouldInvalidateAfter() {\n      return this.defaultInvalidateAfter;\n    }\n  }]);\n\n  return Authenticator;\n}();\n\nexports.Authenticator = Authenticator;","map":{"version":3,"sources":["/home/turbo/devel/MyGame/contracts/decentralize-io-ui/node_modules/universal-authenticator-library/dist/Authenticator.js"],"names":["Object","defineProperty","exports","value","Authenticator","chains","options","defaultInvalidateAfter"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;;IACMC,a;AACF;AACJ;AACA;AACA;AACA;AACI,yBAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AACzB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA;AACR;AACA;;AACQ,SAAKC,sBAAL,GAA8B,MAA9B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,iCAAwB;AACpB,aAAO,KAAKA,sBAAZ;AACH;;;;;;AAELL,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents Button that is rendered for, and interfaces with, a specific Authenticator app.\n */\nclass Authenticator {\n    /**\n     * @param chains     This represents each of the chains that the dapp provides support for.\n     *\n     * @param options    Optional argument that is intended for Authenticator specific options.\n     */\n    constructor(chains, options) {\n        this.chains = chains;\n        this.options = options;\n        /**\n         * Default value for shouldInvalidateAfter(), 1 week in seconds\n         */\n        this.defaultInvalidateAfter = 604800;\n    }\n    /**\n     * Returns the amount of seconds after the authentication will be invalid for logging in on new\n     * browser sessions.  Setting this value to zero will cause users to re-attempt authentication on\n     * every new browser session.  Please note that the invalidate time will be saved client-side and\n     * should not be relied on for security.\n     */\n    shouldInvalidateAfter() {\n        return this.defaultInvalidateAfter;\n    }\n}\nexports.Authenticator = Authenticator;\n"]},"metadata":{},"sourceType":"script"}