{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signatureToString = exports.stringToSignature = exports.privateKeyToString = exports.privateKeyToLegacyString = exports.stringToPrivateKey = exports.convertLegacyPublicKeys = exports.convertLegacyPublicKey = exports.publicKeyToString = exports.publicKeyToLegacyString = exports.stringToPublicKey = exports.signatureDataSize = exports.privateKeyDataSize = exports.publicKeyDataSize = exports.KeyType = exports.base64ToBinary = exports.binaryToBase58 = exports.base58ToBinary = exports.signedBinaryToDecimal = exports.binaryToDecimal = exports.signedDecimalToBinary = exports.decimalToBinary = exports.negate = exports.isNegative = void 0;\n/**\n * @module Numeric\n */\n\nvar hash_js_1 = require(\"hash.js\"); // copyright defined in eosjs/LICENSE.txt\n\n\nvar ripemd160 = require('./ripemd').RIPEMD160.hash;\n\nvar base58Chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar create_base58_map = function create_base58_map() {\n  var base58M = Array(256).fill(-1);\n\n  for (var i = 0; i < base58Chars.length; ++i) {\n    base58M[base58Chars.charCodeAt(i)] = i;\n  }\n\n  return base58M;\n};\n\nvar base58Map = create_base58_map();\n\nvar create_base64_map = function create_base64_map() {\n  var base64M = Array(256).fill(-1);\n\n  for (var i = 0; i < base64Chars.length; ++i) {\n    base64M[base64Chars.charCodeAt(i)] = i;\n  }\n\n  base64M['='.charCodeAt(0)] = 0;\n  return base64M;\n};\n\nvar base64Map = create_base64_map();\n/** Is `bignum` a negative number? */\n\nexports.isNegative = function (bignum) {\n  return (bignum[bignum.length - 1] & 0x80) !== 0;\n};\n/** Negate `bignum` */\n\n\nexports.negate = function (bignum) {\n  var carry = 1;\n\n  for (var i = 0; i < bignum.length; ++i) {\n    var x = (~bignum[i] & 0xff) + carry;\n    bignum[i] = x;\n    carry = x >> 8;\n  }\n};\n/**\n * Convert an unsigned decimal number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\n\n\nexports.decimalToBinary = function (size, s) {\n  var result = new Uint8Array(size);\n\n  for (var i = 0; i < s.length; ++i) {\n    var srcDigit = s.charCodeAt(i);\n\n    if (srcDigit < '0'.charCodeAt(0) || srcDigit > '9'.charCodeAt(0)) {\n      throw new Error('invalid number');\n    }\n\n    var carry = srcDigit - '0'.charCodeAt(0);\n\n    for (var j = 0; j < size; ++j) {\n      var x = result[j] * 10 + carry;\n      result[j] = x;\n      carry = x >> 8;\n    }\n\n    if (carry) {\n      throw new Error('number is out of range');\n    }\n  }\n\n  return result;\n};\n/**\n * Convert a signed decimal number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\n\n\nexports.signedDecimalToBinary = function (size, s) {\n  var negative = s[0] === '-';\n\n  if (negative) {\n    s = s.substr(1);\n  }\n\n  var result = exports.decimalToBinary(size, s);\n\n  if (negative) {\n    exports.negate(result);\n\n    if (!exports.isNegative(result)) {\n      throw new Error('number is out of range');\n    }\n  } else if (exports.isNegative(result)) {\n    throw new Error('number is out of range');\n  }\n\n  return result;\n};\n/**\n * Convert `bignum` to an unsigned decimal number\n *\n * @param minDigits 0-pad result to this many digits\n */\n\n\nexports.binaryToDecimal = function (bignum, minDigits) {\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n\n  var result = Array(minDigits).fill('0'.charCodeAt(0));\n\n  for (var i = bignum.length - 1; i >= 0; --i) {\n    var carry = bignum[i];\n\n    for (var j = 0; j < result.length; ++j) {\n      var x = (result[j] - '0'.charCodeAt(0) << 8) + carry;\n      result[j] = '0'.charCodeAt(0) + x % 10;\n      carry = x / 10 | 0;\n    }\n\n    while (carry) {\n      result.push('0'.charCodeAt(0) + carry % 10);\n      carry = carry / 10 | 0;\n    }\n  }\n\n  result.reverse();\n  return String.fromCharCode.apply(String, __spread(result));\n};\n/**\n * Convert `bignum` to a signed decimal number\n *\n * @param minDigits 0-pad result to this many digits\n */\n\n\nexports.signedBinaryToDecimal = function (bignum, minDigits) {\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n\n  if (exports.isNegative(bignum)) {\n    var x = bignum.slice();\n    exports.negate(x);\n    return '-' + exports.binaryToDecimal(x, minDigits);\n  }\n\n  return exports.binaryToDecimal(bignum, minDigits);\n};\n\nvar base58ToBinaryVarSize = function base58ToBinaryVarSize(s) {\n  var e_1, _a;\n\n  var result = [];\n\n  for (var i = 0; i < s.length; ++i) {\n    var carry = base58Map[s.charCodeAt(i)];\n\n    if (carry < 0) {\n      throw new Error('invalid base-58 value');\n    }\n\n    for (var j = 0; j < result.length; ++j) {\n      var x = result[j] * 58 + carry;\n      result[j] = x & 0xff;\n      carry = x >> 8;\n    }\n\n    if (carry) {\n      result.push(carry);\n    }\n  }\n\n  try {\n    for (var s_1 = __values(s), s_1_1 = s_1.next(); !s_1_1.done; s_1_1 = s_1.next()) {\n      var ch = s_1_1.value;\n\n      if (ch === '1') {\n        result.push(0);\n      } else {\n        break;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (s_1_1 && !s_1_1.done && (_a = s_1.return)) _a.call(s_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  result.reverse();\n  return new Uint8Array(result);\n};\n/**\n * Convert an unsigned base-58 number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\n\n\nexports.base58ToBinary = function (size, s) {\n  if (!size) {\n    return base58ToBinaryVarSize(s);\n  }\n\n  var result = new Uint8Array(size);\n\n  for (var i = 0; i < s.length; ++i) {\n    var carry = base58Map[s.charCodeAt(i)];\n\n    if (carry < 0) {\n      throw new Error('invalid base-58 value');\n    }\n\n    for (var j = 0; j < size; ++j) {\n      var x = result[j] * 58 + carry;\n      result[j] = x;\n      carry = x >> 8;\n    }\n\n    if (carry) {\n      throw new Error('base-58 value is out of range');\n    }\n  }\n\n  result.reverse();\n  return result;\n};\n/**\n * Convert `bignum` to a base-58 number\n *\n * @param minDigits 0-pad result to this many digits\n */\n\n\nexports.binaryToBase58 = function (bignum, minDigits) {\n  var e_2, _a, e_3, _b;\n\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n\n  var result = [];\n\n  try {\n    for (var bignum_1 = __values(bignum), bignum_1_1 = bignum_1.next(); !bignum_1_1.done; bignum_1_1 = bignum_1.next()) {\n      var byte = bignum_1_1.value;\n      var carry = byte;\n\n      for (var j = 0; j < result.length; ++j) {\n        var x = (base58Map[result[j]] << 8) + carry;\n        result[j] = base58Chars.charCodeAt(x % 58);\n        carry = x / 58 | 0;\n      }\n\n      while (carry) {\n        result.push(base58Chars.charCodeAt(carry % 58));\n        carry = carry / 58 | 0;\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (bignum_1_1 && !bignum_1_1.done && (_a = bignum_1.return)) _a.call(bignum_1);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  try {\n    for (var bignum_2 = __values(bignum), bignum_2_1 = bignum_2.next(); !bignum_2_1.done; bignum_2_1 = bignum_2.next()) {\n      var byte = bignum_2_1.value;\n\n      if (byte) {\n        break;\n      } else {\n        result.push('1'.charCodeAt(0));\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (bignum_2_1 && !bignum_2_1.done && (_b = bignum_2.return)) _b.call(bignum_2);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  result.reverse();\n  return String.fromCharCode.apply(String, __spread(result));\n};\n/** Convert an unsigned base-64 number in `s` to a bignum */\n\n\nexports.base64ToBinary = function (s) {\n  var len = s.length;\n\n  if ((len & 3) === 1 && s[len - 1] === '=') {\n    len -= 1;\n  } // fc appends an extra '='\n\n\n  if ((len & 3) !== 0) {\n    throw new Error('base-64 value is not padded correctly');\n  }\n\n  var groups = len >> 2;\n  var bytes = groups * 3;\n\n  if (len > 0 && s[len - 1] === '=') {\n    if (s[len - 2] === '=') {\n      bytes -= 2;\n    } else {\n      bytes -= 1;\n    }\n  }\n\n  var result = new Uint8Array(bytes);\n\n  for (var group = 0; group < groups; ++group) {\n    var digit0 = base64Map[s.charCodeAt(group * 4 + 0)];\n    var digit1 = base64Map[s.charCodeAt(group * 4 + 1)];\n    var digit2 = base64Map[s.charCodeAt(group * 4 + 2)];\n    var digit3 = base64Map[s.charCodeAt(group * 4 + 3)];\n    result[group * 3 + 0] = digit0 << 2 | digit1 >> 4;\n\n    if (group * 3 + 1 < bytes) {\n      result[group * 3 + 1] = (digit1 & 15) << 4 | digit2 >> 2;\n    }\n\n    if (group * 3 + 2 < bytes) {\n      result[group * 3 + 2] = (digit2 & 3) << 6 | digit3;\n    }\n  }\n\n  return result;\n};\n/** Key types this library supports */\n\n\nvar KeyType;\n\n(function (KeyType) {\n  KeyType[KeyType[\"k1\"] = 0] = \"k1\";\n  KeyType[KeyType[\"r1\"] = 1] = \"r1\";\n  KeyType[KeyType[\"wa\"] = 2] = \"wa\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\n/** Public key data size, excluding type field */\n\n\nexports.publicKeyDataSize = 33;\n/** Private key data size, excluding type field */\n\nexports.privateKeyDataSize = 32;\n/** Signature data size, excluding type field */\n\nexports.signatureDataSize = 65;\n\nvar digestSuffixRipemd160 = function digestSuffixRipemd160(data, suffix) {\n  var d = new Uint8Array(data.length + suffix.length);\n\n  for (var i = 0; i < data.length; ++i) {\n    d[i] = data[i];\n  }\n\n  for (var i = 0; i < suffix.length; ++i) {\n    d[data.length + i] = suffix.charCodeAt(i);\n  }\n\n  return ripemd160(d);\n};\n\nvar stringToKey = function stringToKey(s, type, size, suffix) {\n  var whole = exports.base58ToBinary(size ? size + 4 : 0, s);\n  var result = {\n    type: type,\n    data: new Uint8Array(whole.buffer, 0, whole.length - 4)\n  };\n  var digest = new Uint8Array(digestSuffixRipemd160(result.data, suffix));\n\n  if (digest[0] !== whole[whole.length - 4] || digest[1] !== whole[whole.length - 3] || digest[2] !== whole[whole.length - 2] || digest[3] !== whole[whole.length - 1]) {\n    throw new Error('checksum doesn\\'t match');\n  }\n\n  return result;\n};\n\nvar keyToString = function keyToString(key, suffix, prefix) {\n  var digest = new Uint8Array(digestSuffixRipemd160(key.data, suffix));\n  var whole = new Uint8Array(key.data.length + 4);\n\n  for (var i = 0; i < key.data.length; ++i) {\n    whole[i] = key.data[i];\n  }\n\n  for (var i = 0; i < 4; ++i) {\n    whole[i + key.data.length] = digest[i];\n  }\n\n  return prefix + exports.binaryToBase58(whole);\n};\n/** Convert key in `s` to binary form */\n\n\nexports.stringToPublicKey = function (s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing public key');\n  }\n\n  if (s.substr(0, 3) === 'EOS') {\n    var whole = exports.base58ToBinary(exports.publicKeyDataSize + 4, s.substr(3));\n    var key = {\n      type: KeyType.k1,\n      data: new Uint8Array(exports.publicKeyDataSize)\n    };\n\n    for (var i = 0; i < exports.publicKeyDataSize; ++i) {\n      key.data[i] = whole[i];\n    }\n\n    var digest = new Uint8Array(ripemd160(key.data));\n\n    if (digest[0] !== whole[exports.publicKeyDataSize] || digest[1] !== whole[34] || digest[2] !== whole[35] || digest[3] !== whole[36]) {\n      throw new Error('checksum doesn\\'t match');\n    }\n\n    return key;\n  } else if (s.substr(0, 7) === 'PUB_K1_') {\n    return stringToKey(s.substr(7), KeyType.k1, exports.publicKeyDataSize, 'K1');\n  } else if (s.substr(0, 7) === 'PUB_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.publicKeyDataSize, 'R1');\n  } else if (s.substr(0, 7) === 'PUB_WA_') {\n    return stringToKey(s.substr(7), KeyType.wa, 0, 'WA');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n};\n/** Convert public `key` to legacy string (base-58) form */\n\n\nexports.publicKeyToLegacyString = function (key) {\n  if (key.type === KeyType.k1 && key.data.length === exports.publicKeyDataSize) {\n    return keyToString(key, '', 'EOS');\n  } else if (key.type === KeyType.r1 || key.type === KeyType.wa) {\n    throw new Error('Key format not supported in legacy conversion');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n};\n/** Convert `key` to string (base-58) form */\n\n\nexports.publicKeyToString = function (key) {\n  if (key.type === KeyType.k1 && key.data.length === exports.publicKeyDataSize) {\n    return keyToString(key, 'K1', 'PUB_K1_');\n  } else if (key.type === KeyType.r1 && key.data.length === exports.publicKeyDataSize) {\n    return keyToString(key, 'R1', 'PUB_R1_');\n  } else if (key.type === KeyType.wa) {\n    return keyToString(key, 'WA', 'PUB_WA_');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n};\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\n\n\nexports.convertLegacyPublicKey = function (s) {\n  if (s.substr(0, 3) === 'EOS') {\n    return exports.publicKeyToString(exports.stringToPublicKey(s));\n  }\n\n  return s;\n};\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\n\n\nexports.convertLegacyPublicKeys = function (keys) {\n  return keys.map(exports.convertLegacyPublicKey);\n};\n/** Convert key in `s` to binary form */\n\n\nexports.stringToPrivateKey = function (s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing private key');\n  }\n\n  if (s.substr(0, 7) === 'PVT_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.privateKeyDataSize, 'R1');\n  } else if (s.substr(0, 7) === 'PVT_K1_') {\n    return stringToKey(s.substr(7), KeyType.k1, exports.privateKeyDataSize, 'K1');\n  } else {\n    // todo: Verify checksum: sha256(sha256(key.data)).\n    //       Not critical since a bad key will fail to produce a\n    //       valid signature anyway.\n    var whole = exports.base58ToBinary(exports.privateKeyDataSize + 5, s);\n    var key = {\n      type: KeyType.k1,\n      data: new Uint8Array(exports.privateKeyDataSize)\n    };\n\n    if (whole[0] !== 0x80) {\n      throw new Error('unrecognized private key type');\n    }\n\n    for (var i = 0; i < exports.privateKeyDataSize; ++i) {\n      key.data[i] = whole[i + 1];\n    }\n\n    return key;\n  }\n};\n/** Convert private `key` to legacy string (base-58) form */\n\n\nexports.privateKeyToLegacyString = function (key) {\n  if (key.type === KeyType.k1 && key.data.length === exports.privateKeyDataSize) {\n    var whole_1 = [];\n    whole_1.push(128);\n    key.data.forEach(function (byte) {\n      return whole_1.push(byte);\n    });\n    var digest = new Uint8Array(hash_js_1.sha256().update(hash_js_1.sha256().update(whole_1).digest()).digest());\n    var result = new Uint8Array(exports.privateKeyDataSize + 5);\n\n    for (var i = 0; i < whole_1.length; i++) {\n      result[i] = whole_1[i];\n    }\n\n    for (var i = 0; i < 4; i++) {\n      result[i + whole_1.length] = digest[i];\n    }\n\n    return exports.binaryToBase58(result);\n  } else if (key.type === KeyType.r1 || key.type === KeyType.wa) {\n    throw new Error('Key format not supported in legacy conversion');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n};\n/** Convert `key` to string (base-58) form */\n\n\nexports.privateKeyToString = function (key) {\n  if (key.type === KeyType.r1) {\n    return keyToString(key, 'R1', 'PVT_R1_');\n  } else if (key.type === KeyType.k1) {\n    return keyToString(key, 'K1', 'PVT_K1_');\n  } else {\n    throw new Error('unrecognized private key format');\n  }\n};\n/** Convert key in `s` to binary form */\n\n\nexports.stringToSignature = function (s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing signature');\n  }\n\n  if (s.substr(0, 7) === 'SIG_K1_') {\n    return stringToKey(s.substr(7), KeyType.k1, exports.signatureDataSize, 'K1');\n  } else if (s.substr(0, 7) === 'SIG_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.signatureDataSize, 'R1');\n  } else if (s.substr(0, 7) === 'SIG_WA_') {\n    return stringToKey(s.substr(7), KeyType.wa, 0, 'WA');\n  } else {\n    throw new Error('unrecognized signature format');\n  }\n};\n/** Convert `signature` to string (base-58) form */\n\n\nexports.signatureToString = function (signature) {\n  if (signature.type === KeyType.k1) {\n    return keyToString(signature, 'K1', 'SIG_K1_');\n  } else if (signature.type === KeyType.r1) {\n    return keyToString(signature, 'R1', 'SIG_R1_');\n  } else if (signature.type === KeyType.wa) {\n    return keyToString(signature, 'WA', 'SIG_WA_');\n  } else {\n    throw new Error('unrecognized signature format');\n  }\n};","map":{"version":3,"sources":["../src/eosjs-numeric.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signatureToString = exports.stringToSignature = exports.privateKeyToString = exports.privateKeyToLegacyString = exports.stringToPrivateKey = exports.convertLegacyPublicKeys = exports.convertLegacyPublicKey = exports.publicKeyToString = exports.publicKeyToLegacyString = exports.stringToPublicKey = exports.signatureDataSize = exports.privateKeyDataSize = exports.publicKeyDataSize = exports.KeyType = exports.base64ToBinary = exports.binaryToBase58 = exports.base58ToBinary = exports.signedBinaryToDecimal = exports.binaryToDecimal = exports.signedDecimalToBinary = exports.decimalToBinary = exports.negate = exports.isNegative = void 0;\n/**\n * @module Numeric\n */\nvar hash_js_1 = require(\"hash.js\");\n// copyright defined in eosjs/LICENSE.txt\nvar ripemd160 = require('./ripemd').RIPEMD160.hash;\nvar base58Chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nvar create_base58_map = function () {\n    var base58M = Array(256).fill(-1);\n    for (var i = 0; i < base58Chars.length; ++i) {\n        base58M[base58Chars.charCodeAt(i)] = i;\n    }\n    return base58M;\n};\nvar base58Map = create_base58_map();\nvar create_base64_map = function () {\n    var base64M = Array(256).fill(-1);\n    for (var i = 0; i < base64Chars.length; ++i) {\n        base64M[base64Chars.charCodeAt(i)] = i;\n    }\n    base64M['='.charCodeAt(0)] = 0;\n    return base64M;\n};\nvar base64Map = create_base64_map();\n/** Is `bignum` a negative number? */\nexports.isNegative = function (bignum) {\n    return (bignum[bignum.length - 1] & 0x80) !== 0;\n};\n/** Negate `bignum` */\nexports.negate = function (bignum) {\n    var carry = 1;\n    for (var i = 0; i < bignum.length; ++i) {\n        var x = (~bignum[i] & 0xff) + carry;\n        bignum[i] = x;\n        carry = x >> 8;\n    }\n};\n/**\n * Convert an unsigned decimal number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\nexports.decimalToBinary = function (size, s) {\n    var result = new Uint8Array(size);\n    for (var i = 0; i < s.length; ++i) {\n        var srcDigit = s.charCodeAt(i);\n        if (srcDigit < '0'.charCodeAt(0) || srcDigit > '9'.charCodeAt(0)) {\n            throw new Error('invalid number');\n        }\n        var carry = srcDigit - '0'.charCodeAt(0);\n        for (var j = 0; j < size; ++j) {\n            var x = result[j] * 10 + carry;\n            result[j] = x;\n            carry = x >> 8;\n        }\n        if (carry) {\n            throw new Error('number is out of range');\n        }\n    }\n    return result;\n};\n/**\n * Convert a signed decimal number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\nexports.signedDecimalToBinary = function (size, s) {\n    var negative = s[0] === '-';\n    if (negative) {\n        s = s.substr(1);\n    }\n    var result = exports.decimalToBinary(size, s);\n    if (negative) {\n        exports.negate(result);\n        if (!exports.isNegative(result)) {\n            throw new Error('number is out of range');\n        }\n    }\n    else if (exports.isNegative(result)) {\n        throw new Error('number is out of range');\n    }\n    return result;\n};\n/**\n * Convert `bignum` to an unsigned decimal number\n *\n * @param minDigits 0-pad result to this many digits\n */\nexports.binaryToDecimal = function (bignum, minDigits) {\n    if (minDigits === void 0) { minDigits = 1; }\n    var result = Array(minDigits).fill('0'.charCodeAt(0));\n    for (var i = bignum.length - 1; i >= 0; --i) {\n        var carry = bignum[i];\n        for (var j = 0; j < result.length; ++j) {\n            var x = ((result[j] - '0'.charCodeAt(0)) << 8) + carry;\n            result[j] = '0'.charCodeAt(0) + x % 10;\n            carry = (x / 10) | 0;\n        }\n        while (carry) {\n            result.push('0'.charCodeAt(0) + carry % 10);\n            carry = (carry / 10) | 0;\n        }\n    }\n    result.reverse();\n    return String.fromCharCode.apply(String, __spread(result));\n};\n/**\n * Convert `bignum` to a signed decimal number\n *\n * @param minDigits 0-pad result to this many digits\n */\nexports.signedBinaryToDecimal = function (bignum, minDigits) {\n    if (minDigits === void 0) { minDigits = 1; }\n    if (exports.isNegative(bignum)) {\n        var x = bignum.slice();\n        exports.negate(x);\n        return '-' + exports.binaryToDecimal(x, minDigits);\n    }\n    return exports.binaryToDecimal(bignum, minDigits);\n};\nvar base58ToBinaryVarSize = function (s) {\n    var e_1, _a;\n    var result = [];\n    for (var i = 0; i < s.length; ++i) {\n        var carry = base58Map[s.charCodeAt(i)];\n        if (carry < 0) {\n            throw new Error('invalid base-58 value');\n        }\n        for (var j = 0; j < result.length; ++j) {\n            var x = result[j] * 58 + carry;\n            result[j] = x & 0xff;\n            carry = x >> 8;\n        }\n        if (carry) {\n            result.push(carry);\n        }\n    }\n    try {\n        for (var s_1 = __values(s), s_1_1 = s_1.next(); !s_1_1.done; s_1_1 = s_1.next()) {\n            var ch = s_1_1.value;\n            if (ch === '1') {\n                result.push(0);\n            }\n            else {\n                break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (s_1_1 && !s_1_1.done && (_a = s_1.return)) _a.call(s_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    result.reverse();\n    return new Uint8Array(result);\n};\n/**\n * Convert an unsigned base-58 number in `s` to a bignum\n *\n * @param size bignum size (bytes)\n */\nexports.base58ToBinary = function (size, s) {\n    if (!size) {\n        return base58ToBinaryVarSize(s);\n    }\n    var result = new Uint8Array(size);\n    for (var i = 0; i < s.length; ++i) {\n        var carry = base58Map[s.charCodeAt(i)];\n        if (carry < 0) {\n            throw new Error('invalid base-58 value');\n        }\n        for (var j = 0; j < size; ++j) {\n            var x = result[j] * 58 + carry;\n            result[j] = x;\n            carry = x >> 8;\n        }\n        if (carry) {\n            throw new Error('base-58 value is out of range');\n        }\n    }\n    result.reverse();\n    return result;\n};\n/**\n * Convert `bignum` to a base-58 number\n *\n * @param minDigits 0-pad result to this many digits\n */\nexports.binaryToBase58 = function (bignum, minDigits) {\n    var e_2, _a, e_3, _b;\n    if (minDigits === void 0) { minDigits = 1; }\n    var result = [];\n    try {\n        for (var bignum_1 = __values(bignum), bignum_1_1 = bignum_1.next(); !bignum_1_1.done; bignum_1_1 = bignum_1.next()) {\n            var byte = bignum_1_1.value;\n            var carry = byte;\n            for (var j = 0; j < result.length; ++j) {\n                var x = (base58Map[result[j]] << 8) + carry;\n                result[j] = base58Chars.charCodeAt(x % 58);\n                carry = (x / 58) | 0;\n            }\n            while (carry) {\n                result.push(base58Chars.charCodeAt(carry % 58));\n                carry = (carry / 58) | 0;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (bignum_1_1 && !bignum_1_1.done && (_a = bignum_1.return)) _a.call(bignum_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    try {\n        for (var bignum_2 = __values(bignum), bignum_2_1 = bignum_2.next(); !bignum_2_1.done; bignum_2_1 = bignum_2.next()) {\n            var byte = bignum_2_1.value;\n            if (byte) {\n                break;\n            }\n            else {\n                result.push('1'.charCodeAt(0));\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (bignum_2_1 && !bignum_2_1.done && (_b = bignum_2.return)) _b.call(bignum_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    result.reverse();\n    return String.fromCharCode.apply(String, __spread(result));\n};\n/** Convert an unsigned base-64 number in `s` to a bignum */\nexports.base64ToBinary = function (s) {\n    var len = s.length;\n    if ((len & 3) === 1 && s[len - 1] === '=') {\n        len -= 1;\n    } // fc appends an extra '='\n    if ((len & 3) !== 0) {\n        throw new Error('base-64 value is not padded correctly');\n    }\n    var groups = len >> 2;\n    var bytes = groups * 3;\n    if (len > 0 && s[len - 1] === '=') {\n        if (s[len - 2] === '=') {\n            bytes -= 2;\n        }\n        else {\n            bytes -= 1;\n        }\n    }\n    var result = new Uint8Array(bytes);\n    for (var group = 0; group < groups; ++group) {\n        var digit0 = base64Map[s.charCodeAt(group * 4 + 0)];\n        var digit1 = base64Map[s.charCodeAt(group * 4 + 1)];\n        var digit2 = base64Map[s.charCodeAt(group * 4 + 2)];\n        var digit3 = base64Map[s.charCodeAt(group * 4 + 3)];\n        result[group * 3 + 0] = (digit0 << 2) | (digit1 >> 4);\n        if (group * 3 + 1 < bytes) {\n            result[group * 3 + 1] = ((digit1 & 15) << 4) | (digit2 >> 2);\n        }\n        if (group * 3 + 2 < bytes) {\n            result[group * 3 + 2] = ((digit2 & 3) << 6) | digit3;\n        }\n    }\n    return result;\n};\n/** Key types this library supports */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"k1\"] = 0] = \"k1\";\n    KeyType[KeyType[\"r1\"] = 1] = \"r1\";\n    KeyType[KeyType[\"wa\"] = 2] = \"wa\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\n/** Public key data size, excluding type field */\nexports.publicKeyDataSize = 33;\n/** Private key data size, excluding type field */\nexports.privateKeyDataSize = 32;\n/** Signature data size, excluding type field */\nexports.signatureDataSize = 65;\nvar digestSuffixRipemd160 = function (data, suffix) {\n    var d = new Uint8Array(data.length + suffix.length);\n    for (var i = 0; i < data.length; ++i) {\n        d[i] = data[i];\n    }\n    for (var i = 0; i < suffix.length; ++i) {\n        d[data.length + i] = suffix.charCodeAt(i);\n    }\n    return ripemd160(d);\n};\nvar stringToKey = function (s, type, size, suffix) {\n    var whole = exports.base58ToBinary(size ? size + 4 : 0, s);\n    var result = { type: type, data: new Uint8Array(whole.buffer, 0, whole.length - 4) };\n    var digest = new Uint8Array(digestSuffixRipemd160(result.data, suffix));\n    if (digest[0] !== whole[whole.length - 4] || digest[1] !== whole[whole.length - 3]\n        || digest[2] !== whole[whole.length - 2] || digest[3] !== whole[whole.length - 1]) {\n        throw new Error('checksum doesn\\'t match');\n    }\n    return result;\n};\nvar keyToString = function (key, suffix, prefix) {\n    var digest = new Uint8Array(digestSuffixRipemd160(key.data, suffix));\n    var whole = new Uint8Array(key.data.length + 4);\n    for (var i = 0; i < key.data.length; ++i) {\n        whole[i] = key.data[i];\n    }\n    for (var i = 0; i < 4; ++i) {\n        whole[i + key.data.length] = digest[i];\n    }\n    return prefix + exports.binaryToBase58(whole);\n};\n/** Convert key in `s` to binary form */\nexports.stringToPublicKey = function (s) {\n    if (typeof s !== 'string') {\n        throw new Error('expected string containing public key');\n    }\n    if (s.substr(0, 3) === 'EOS') {\n        var whole = exports.base58ToBinary(exports.publicKeyDataSize + 4, s.substr(3));\n        var key = { type: KeyType.k1, data: new Uint8Array(exports.publicKeyDataSize) };\n        for (var i = 0; i < exports.publicKeyDataSize; ++i) {\n            key.data[i] = whole[i];\n        }\n        var digest = new Uint8Array(ripemd160(key.data));\n        if (digest[0] !== whole[exports.publicKeyDataSize] || digest[1] !== whole[34]\n            || digest[2] !== whole[35] || digest[3] !== whole[36]) {\n            throw new Error('checksum doesn\\'t match');\n        }\n        return key;\n    }\n    else if (s.substr(0, 7) === 'PUB_K1_') {\n        return stringToKey(s.substr(7), KeyType.k1, exports.publicKeyDataSize, 'K1');\n    }\n    else if (s.substr(0, 7) === 'PUB_R1_') {\n        return stringToKey(s.substr(7), KeyType.r1, exports.publicKeyDataSize, 'R1');\n    }\n    else if (s.substr(0, 7) === 'PUB_WA_') {\n        return stringToKey(s.substr(7), KeyType.wa, 0, 'WA');\n    }\n    else {\n        throw new Error('unrecognized public key format');\n    }\n};\n/** Convert public `key` to legacy string (base-58) form */\nexports.publicKeyToLegacyString = function (key) {\n    if (key.type === KeyType.k1 && key.data.length === exports.publicKeyDataSize) {\n        return keyToString(key, '', 'EOS');\n    }\n    else if (key.type === KeyType.r1 || key.type === KeyType.wa) {\n        throw new Error('Key format not supported in legacy conversion');\n    }\n    else {\n        throw new Error('unrecognized public key format');\n    }\n};\n/** Convert `key` to string (base-58) form */\nexports.publicKeyToString = function (key) {\n    if (key.type === KeyType.k1 && key.data.length === exports.publicKeyDataSize) {\n        return keyToString(key, 'K1', 'PUB_K1_');\n    }\n    else if (key.type === KeyType.r1 && key.data.length === exports.publicKeyDataSize) {\n        return keyToString(key, 'R1', 'PUB_R1_');\n    }\n    else if (key.type === KeyType.wa) {\n        return keyToString(key, 'WA', 'PUB_WA_');\n    }\n    else {\n        throw new Error('unrecognized public key format');\n    }\n};\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\nexports.convertLegacyPublicKey = function (s) {\n    if (s.substr(0, 3) === 'EOS') {\n        return exports.publicKeyToString(exports.stringToPublicKey(s));\n    }\n    return s;\n};\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\nexports.convertLegacyPublicKeys = function (keys) {\n    return keys.map(exports.convertLegacyPublicKey);\n};\n/** Convert key in `s` to binary form */\nexports.stringToPrivateKey = function (s) {\n    if (typeof s !== 'string') {\n        throw new Error('expected string containing private key');\n    }\n    if (s.substr(0, 7) === 'PVT_R1_') {\n        return stringToKey(s.substr(7), KeyType.r1, exports.privateKeyDataSize, 'R1');\n    }\n    else if (s.substr(0, 7) === 'PVT_K1_') {\n        return stringToKey(s.substr(7), KeyType.k1, exports.privateKeyDataSize, 'K1');\n    }\n    else {\n        // todo: Verify checksum: sha256(sha256(key.data)).\n        //       Not critical since a bad key will fail to produce a\n        //       valid signature anyway.\n        var whole = exports.base58ToBinary(exports.privateKeyDataSize + 5, s);\n        var key = { type: KeyType.k1, data: new Uint8Array(exports.privateKeyDataSize) };\n        if (whole[0] !== 0x80) {\n            throw new Error('unrecognized private key type');\n        }\n        for (var i = 0; i < exports.privateKeyDataSize; ++i) {\n            key.data[i] = whole[i + 1];\n        }\n        return key;\n    }\n};\n/** Convert private `key` to legacy string (base-58) form */\nexports.privateKeyToLegacyString = function (key) {\n    if (key.type === KeyType.k1 && key.data.length === exports.privateKeyDataSize) {\n        var whole_1 = [];\n        whole_1.push(128);\n        key.data.forEach(function (byte) { return whole_1.push(byte); });\n        var digest = new Uint8Array(hash_js_1.sha256().update(hash_js_1.sha256().update(whole_1).digest()).digest());\n        var result = new Uint8Array(exports.privateKeyDataSize + 5);\n        for (var i = 0; i < whole_1.length; i++) {\n            result[i] = whole_1[i];\n        }\n        for (var i = 0; i < 4; i++) {\n            result[i + whole_1.length] = digest[i];\n        }\n        return exports.binaryToBase58(result);\n    }\n    else if (key.type === KeyType.r1 || key.type === KeyType.wa) {\n        throw new Error('Key format not supported in legacy conversion');\n    }\n    else {\n        throw new Error('unrecognized public key format');\n    }\n};\n/** Convert `key` to string (base-58) form */\nexports.privateKeyToString = function (key) {\n    if (key.type === KeyType.r1) {\n        return keyToString(key, 'R1', 'PVT_R1_');\n    }\n    else if (key.type === KeyType.k1) {\n        return keyToString(key, 'K1', 'PVT_K1_');\n    }\n    else {\n        throw new Error('unrecognized private key format');\n    }\n};\n/** Convert key in `s` to binary form */\nexports.stringToSignature = function (s) {\n    if (typeof s !== 'string') {\n        throw new Error('expected string containing signature');\n    }\n    if (s.substr(0, 7) === 'SIG_K1_') {\n        return stringToKey(s.substr(7), KeyType.k1, exports.signatureDataSize, 'K1');\n    }\n    else if (s.substr(0, 7) === 'SIG_R1_') {\n        return stringToKey(s.substr(7), KeyType.r1, exports.signatureDataSize, 'R1');\n    }\n    else if (s.substr(0, 7) === 'SIG_WA_') {\n        return stringToKey(s.substr(7), KeyType.wa, 0, 'WA');\n    }\n    else {\n        throw new Error('unrecognized signature format');\n    }\n};\n/** Convert `signature` to string (base-58) form */\nexports.signatureToString = function (signature) {\n    if (signature.type === KeyType.k1) {\n        return keyToString(signature, 'K1', 'SIG_K1_');\n    }\n    else if (signature.type === KeyType.r1) {\n        return keyToString(signature, 'R1', 'SIG_R1_');\n    }\n    else if (signature.type === KeyType.wa) {\n        return keyToString(signature, 'WA', 'SIG_WA_');\n    }\n    else {\n        throw new Error('unrecognized signature format');\n    }\n};\n//# sourceMappingURL=eosjs-numeric.js.map"]},"metadata":{},"sourceType":"script"}