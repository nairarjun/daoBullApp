{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/turbo/devel/MyGame/contracts/eos-hackathon/decentralize-io-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UALProvider = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _i18n = _interopRequireDefault(require(\"../../i18n\"));\n\nrequire(\"../../types\");\n\nvar _universalAuthenticatorLibrary = require(\"universal-authenticator-library\");\n\nvar _UALContext = require(\"./UALContext\");\n\nvar _provider = require(\"../../constants/provider\");\n\nvar _UALBox = require(\"../modal/UALBox\");\n\nvar _provider2 = require(\"../../styles/provider\");\n\nvar _base = require(\"../../styles/base\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Wrapper component that provides a child app with access to UAL functionality\n */\n\n\nvar UALProvider = /*#__PURE__*/function (_Component) {\n  _inherits(UALProvider, _Component);\n\n  var _super = _createSuper(UALProvider);\n\n  function UALProvider(props) {\n    var _this;\n\n    _classCallCheck(this, UALProvider);\n\n    _this = _super.call(this, props);\n    /**\n     * @namespace UAL\n     */\n\n    _defineProperty(_assertThisInitialized(_this), \"getAuthenticatorInstance\", function (type, availableAuthenticators) {\n      var loggedIn = availableAuthenticators.filter(function (auth) {\n        return auth.getName() === type;\n      });\n\n      if (!loggedIn.length) {\n        _this.clearCache();\n      }\n\n      return loggedIn.length ? loggedIn[0] : false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkForInvalidatedSession\", function (type, invalidate) {\n      if (type && invalidate && new Date(invalidate) <= new Date()) {\n        _this.clearCache();\n\n        return undefined;\n      }\n\n      return type;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setUALInvalidateAt\", function (authenticator) {\n      var invalidateSeconds = authenticator.shouldInvalidateAfter();\n      var invalidateAt = new Date();\n      invalidateAt.setSeconds(invalidateAt.getSeconds() + invalidateSeconds);\n      window.localStorage.setItem('UALInvalidateAt', invalidateAt);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchAuthenticators\", function (availableAuthenticators, autoLoginAuthenticator) {\n      var authenticateWithoutAccountInput = _this.state.authenticateWithoutAccountInput;\n\n      if (autoLoginAuthenticator) {\n        _this.setState({\n          availableAuthenticators: [autoLoginAuthenticator]\n        }, function () {\n          var availableCheck = setInterval(function () {\n            if (!autoLoginAuthenticator.isLoading()) {\n              clearInterval(availableCheck);\n              authenticateWithoutAccountInput(autoLoginAuthenticator, true);\n            }\n          }, 250);\n        });\n      } else {\n        _this.setState({\n          availableAuthenticators: availableAuthenticators\n        }, function () {\n          _this.setState({\n            message: _i18n[\"default\"].t('authenticatorsLoaded')\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearCache\", function () {\n      window.localStorage.removeItem('UALLoggedInAuthType');\n      window.localStorage.removeItem('UALAccountName');\n      window.localStorage.removeItem('UALInvalidateAt');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fullLogout\", function (authenticator) {\n      _this.clearCache();\n\n      authenticator.logout()[\"catch\"](function (e) {\n        return console.warn(e);\n      });\n    });\n\n    _this.state = {\n      /**\n       * @memberof UAL\n       * @desc chain list from props\n       * @type {Chain[]} chains\n       */\n      chains: props.chains,\n\n      /**\n       * @memberof UAL\n       * @desc authenticator instances from props\n       * @type {Authenticator[]} authenticators\n       */\n      authenticators: props.authenticators,\n\n      /**\n       * @memberof UAL\n       * @desc available authenticator list\n       * @type {Authenticator[]} availableAuthenticators\n       */\n      availableAuthenticators: [],\n\n      /**\n       * @memberof UAL\n       * @desc name of app\n       * @type {string} appName\n       */\n      appName: props.appName,\n\n      /**\n       * @memberof UAL\n       * @desc whether or not show modal, initialized via props\n       * @type {boolean} modal\n       */\n      modal: props.modal,\n\n      /**\n       * @memberof UAL\n       * @desc loading state of UAL\n       * @type {boolean} loading\n       */\n      loading: false,\n\n      /**\n       * @memberof UAL\n       * @desc list of authenticated users\n       * @type {User[]} users\n       */\n      users: [],\n\n      /**\n       * @memberof UAL\n       * @desc authenticator currently used\n       * @type {Authenticator} activeAuthenticator\n       */\n      activeAuthenticator: null,\n\n      /**\n       * @memberof UAL\n       * @desc logged in user\n       * @type {User} activeUser\n       */\n      activeUser: null,\n\n      /**\n       * @memberof UAL\n       * @desc whether or not activeAuthenticator should auto login\n       * @type {boolean} isAutoLogin\n       */\n      isAutoLogin: false,\n\n      /**\n       * @memberof UAL\n       * @desc captured error if any\n       * @type {UALError|null} error\n       */\n      error: null,\n\n      /**\n       * @memberof UAL\n       * @desc message, if any, accompanying current UAL state\n       * @type {string} message\n       */\n      message: '',\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name hideModal\n       * @desc hides the modal\n       * @return {Void}\n       */\n      hideModal: function hideModal() {\n        return _this.setState({\n          modal: false,\n          loading: true,\n          message: _i18n[\"default\"].t('loadingAuthenticators')\n        });\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name showModal\n       * @desc shows the modal\n       * @return {Void}\n       */\n      showModal: function showModal() {\n        _this.setState({\n          modal: true\n        });\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name logout\n       * @desc logs user out of authenticator and resets UAL state\n       * @return {Void}\n       */\n      logout: function logout() {\n        var activeAuthenticator = _this.state.activeAuthenticator;\n\n        _this.setState(_provider.DEFAULT_STATUS, function () {\n          return activeAuthenticator && _this.fullLogout(activeAuthenticator);\n        });\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name restart\n       * @desc resets all available authenticators and resets UAL state\n       * @return {Void}\n       */\n      restart: function restart() {\n        _this.setState({\n          DEFAULT_STATUS: _provider.DEFAULT_STATUS\n        }, function () {\n          var availableAuthenticators = _this.state.availableAuthenticators;\n          availableAuthenticators.forEach(function (auth) {\n            return auth.reset();\n          });\n\n          _this.setState(availableAuthenticators);\n        });\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name broadcastStatus\n       * @desc dispatches a provider state update\n       * @return {Void}\n       */\n      broadcastStatus: function broadcastStatus() {\n        var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _provider.DEFAULT_STATUS;\n        return _this.setState(status);\n      },\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name authenticateWithoutAccountInput\n       * @desc attempts authentication with an authenticator not requiring account input\n       * @return {Void}\n       * @param {Authenticator} authenticator\n       * @param {boolean} [false] isAutoLogin\n       */\n      authenticateWithoutAccountInput: function () {\n        var _authenticateWithoutAccountInput = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authenticator) {\n          var isAutoLogin,\n              broadcastStatus,\n              users,\n              accountName,\n              _args = arguments;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  isAutoLogin = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n                  broadcastStatus = _this.state.broadcastStatus;\n                  broadcastStatus({\n                    loading: true,\n                    message: _i18n[\"default\"].t('continueWithAuthenticator', {\n                      authenticatorName: authenticator.getStyle().text\n                    }),\n                    activeAuthenticator: authenticator\n                  });\n                  _context.prev = 3;\n                  _context.next = 6;\n                  return authenticator.login();\n\n                case 6:\n                  users = _context.sent;\n                  _context.next = 9;\n                  return users[0].getAccountName();\n\n                case 9:\n                  accountName = _context.sent;\n\n                  if (!isAutoLogin) {\n                    window.localStorage.setItem('UALLoggedInAuthType', authenticator.getName());\n\n                    _this.setUALInvalidateAt(authenticator);\n                  }\n\n                  broadcastStatus({\n                    activeUser: users[users.length - 1],\n                    users: users,\n                    isAutoLogin: isAutoLogin,\n                    message: _i18n[\"default\"].t('currentlyLoggedInAs', {\n                      accountName: accountName\n                    })\n                  });\n                  _context.next = 17;\n                  break;\n\n                case 14:\n                  _context.prev = 14;\n                  _context.t0 = _context[\"catch\"](3);\n                  broadcastStatus({\n                    loading: false,\n                    error: _context.t0,\n                    message: _context.t0.message\n                  });\n\n                case 17:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[3, 14]]);\n        }));\n\n        function authenticateWithoutAccountInput(_x) {\n          return _authenticateWithoutAccountInput.apply(this, arguments);\n        }\n\n        return authenticateWithoutAccountInput;\n      }(),\n\n      /**\n       * @memberof UAL\n       * @function\n       * @name submitAccountForLogin\n       * @desc attempts authentication\n       * @return {Void}\n       * @param {string} accountInput\n       * @param {Authenticator} authenticator\n       */\n      submitAccountForLogin: function () {\n        var _submitAccountForLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(accountInput, authenticator) {\n          var broadcastStatus, users;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  broadcastStatus = _this.state.broadcastStatus;\n                  broadcastStatus({\n                    loading: true,\n                    message: authenticator.requiresGetKeyConfirmation() ? _i18n[\"default\"].t('waitWhileFindAccountWithConfirmation') : _i18n[\"default\"].t('waitWhileFindAccount')\n                  });\n                  _context2.prev = 2;\n                  _context2.next = 5;\n                  return authenticator.login(accountInput);\n\n                case 5:\n                  users = _context2.sent;\n                  window.localStorage.setItem('UALLoggedInAuthType', authenticator.getName());\n                  window.localStorage.setItem('UALAccountName', accountInput);\n                  broadcastStatus({\n                    activeUser: users[users.length - 1],\n                    activeAuthenticator: authenticator,\n                    users: users,\n                    message: _i18n[\"default\"].t('currentlyLoggedInAs', {\n                      accountName: accountInput\n                    })\n                  });\n\n                  _this.setUALInvalidateAt(authenticator);\n\n                  _context2.next = 15;\n                  break;\n\n                case 12:\n                  _context2.prev = 12;\n                  _context2.t0 = _context2[\"catch\"](2);\n                  broadcastStatus({\n                    error: _context2.t0,\n                    message: _context2.t0.message,\n                    loading: false\n                  });\n\n                case 15:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[2, 12]]);\n        }));\n\n        function submitAccountForLogin(_x2, _x3) {\n          return _submitAccountForLogin.apply(this, arguments);\n        }\n\n        return submitAccountForLogin;\n      }()\n    };\n    return _this;\n  }\n\n  _createClass(UALProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$state = this.state,\n          chains = _this$state.chains,\n          appName = _this$state.appName,\n          authenticators = _this$state.authenticators,\n          authenticateWithoutAccountInput = _this$state.authenticateWithoutAccountInput,\n          submitAccountForLogin = _this$state.submitAccountForLogin;\n      var type = window.localStorage.getItem('UALLoggedInAuthType');\n      var invalidate = window.localStorage.getItem('UALInvalidateAt');\n      var accountName = window.localStorage.getItem('UALAccountName');\n      type = this.checkForInvalidatedSession(type, invalidate);\n      var ual = new _universalAuthenticatorLibrary.UAL(chains, appName, authenticators);\n\n      var _ual$getAuthenticator = ual.getAuthenticators(),\n          availableAuthenticators = _ual$getAuthenticator.availableAuthenticators,\n          autoLoginAuthenticator = _ual$getAuthenticator.autoLoginAuthenticator;\n\n      try {\n        if (type) {\n          var authenticator = this.getAuthenticatorInstance(type, availableAuthenticators);\n\n          if (!authenticator) {\n            throw new Error('authenticator instance not found');\n          }\n\n          var availableCheck = setInterval(function () {\n            if (!authenticator.isLoading()) {\n              clearInterval(availableCheck); // Only Ledger requires an account name\n\n              if (accountName) {\n                submitAccountForLogin(accountName, authenticator);\n              } else {\n                authenticateWithoutAccountInput(authenticator);\n              }\n            }\n          }, 250);\n        }\n      } catch (e) {\n        this.clearCache();\n\n        var msg = _i18n[\"default\"].t('sessionEndedNeedLogin');\n\n        var source = type || 'Universal Authenticator Library';\n        var errType = _universalAuthenticatorLibrary.UALErrorType.Login;\n        console.warn(new _universalAuthenticatorLibrary.UALError(msg, errType, e, source));\n      } finally {\n        this.fetchAuthenticators(availableAuthenticators, autoLoginAuthenticator);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$state2 = this.state,\n          loading = _this$state2.loading,\n          message = _this$state2.message,\n          availableAuthenticators = _this$state2.availableAuthenticators,\n          broadcastStatus = _this$state2.broadcastStatus;\n\n      if (loading && message === _i18n[\"default\"].t('loadingAuthenticators') && availableAuthenticators.length) {\n        broadcastStatus({\n          message: _i18n[\"default\"].t('authenticatorsLoaded'),\n          loading: false\n        });\n      }\n    }\n    /**\n     * Verifies a logged in user's authenticator is still app supported\n     *\n     * @method\n     * @param {string} type - authenticator type of sessioned user\n     * @param {Object[]} availableAuthenticators - list of available app supported authenticators\n     * @return {number|boolean}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modal = this.state.modal && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: _provider2.modalStyles\n      }, /*#__PURE__*/_react[\"default\"].createElement(_UALBox.UALBox, null));\n\n      return /*#__PURE__*/_react[\"default\"].createElement(_UALContext.UALContext.Provider, {\n        value: this.state\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"style\", null, _base.baseFont), modal, this.props.children);\n    }\n  }]);\n\n  return UALProvider;\n}(_react.Component);\n/**\n * @memberof UALProvider\n * @name props\n * @prop {Chain[]} chains - list of chains the app supports\n * @prop {Authenticator[]} authenticators - list of authenticators the app supports\n * @prop {Node[]|Node} children - child app(s)\n * @prop {string} appName - name of app\n * @prop {boolean} modal - whether or not to show modal\n */\n\n\nexports.UALProvider = UALProvider;\n\n_defineProperty(UALProvider, \"displayName\", 'UALProvider');\n\nUALProvider.propTypes = {\n  chains: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object).isRequired,\n  authenticators: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object).isRequired,\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].node]).isRequired,\n  appName: _propTypes[\"default\"].string.isRequired,\n  modal: _propTypes[\"default\"].bool\n};\nUALProvider.defaultProps = {\n  modal: false\n};","map":{"version":3,"sources":["../../../src/components/provider/UALProvider.js"],"names":["UALProvider","Component","chains","props","authenticators","availableAuthenticators","appName","modal","loading","users","activeAuthenticator","activeUser","isAutoLogin","error","message","hideModal","i18n","showModal","logout","DEFAULT_STATUS","restart","auth","broadcastStatus","status","authenticateWithoutAccountInput","authenticatorName","authenticator","text","accountName","window","submitAccountForLogin","accountInput","type","invalidate","ual","UAL","autoLoginAuthenticator","availableCheck","setInterval","clearInterval","msg","source","errType","UALErrorType","console","UALError","loggedIn","invalidateSeconds","invalidateAt","modalStyles","state","baseFont","PropTypes","children","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '../../i18n'\nimport '../../types'\nimport { UAL, UALError, UALErrorType } from 'universal-authenticator-library'\n\nimport { UALContext } from './UALContext'\nimport { DEFAULT_STATUS } from '../../constants/provider'\nimport { UALBox } from '../modal/UALBox'\n\nimport { modalStyles } from '../../styles/provider'\nimport { baseFont } from '../../styles/base'\n\n/**\n * Wrapper component that provides a child app with access to UAL functionality\n */\nexport class UALProvider extends Component {\n  static displayName = 'UALProvider'\n\n  constructor(props) {\n    super(props)\n    /**\n     * @namespace UAL\n     */\n    this.state = {\n      /**\n       * @memberof UAL\n       * @desc chain list from props\n       * @type {Chain[]} chains\n       */\n      chains: props.chains,\n      /**\n       * @memberof UAL\n       * @desc authenticator instances from props\n       * @type {Authenticator[]} authenticators\n       */\n      authenticators: props.authenticators,\n      /**\n       * @memberof UAL\n       * @desc available authenticator list\n       * @type {Authenticator[]} availableAuthenticators\n       */\n      availableAuthenticators: [],\n      /**\n       * @memberof UAL\n       * @desc name of app\n       * @type {string} appName\n       */\n      appName: props.appName,\n      /**\n       * @memberof UAL\n       * @desc whether or not show modal, initialized via props\n       * @type {boolean} modal\n       */\n      modal: props.modal,\n      /**\n       * @memberof UAL\n       * @desc loading state of UAL\n       * @type {boolean} loading\n       */\n      loading: false,\n      /**\n       * @memberof UAL\n       * @desc list of authenticated users\n       * @type {User[]} users\n       */\n      users: [],\n      /**\n       * @memberof UAL\n       * @desc authenticator currently used\n       * @type {Authenticator} activeAuthenticator\n       */\n      activeAuthenticator: null,\n      /**\n       * @memberof UAL\n       * @desc logged in user\n       * @type {User} activeUser\n       */\n      activeUser: null,\n      /**\n       * @memberof UAL\n       * @desc whether or not activeAuthenticator should auto login\n       * @type {boolean} isAutoLogin\n       */\n      isAutoLogin: false,\n      /**\n       * @memberof UAL\n       * @desc captured error if any\n       * @type {UALError|null} error\n       */\n      error: null,\n      /**\n       * @memberof UAL\n       * @desc message, if any, accompanying current UAL state\n       * @type {string} message\n       */\n      message: '',\n      /**\n       * @memberof UAL\n       * @function\n       * @name hideModal\n       * @desc hides the modal\n       * @return {Void}\n       */\n      hideModal: () => this.setState({ modal: false, loading: true, message: i18n.t('loadingAuthenticators') }),\n      /**\n       * @memberof UAL\n       * @function\n       * @name showModal\n       * @desc shows the modal\n       * @return {Void}\n       */\n      showModal: () => {\n        this.setState({ modal: true })\n      },\n      /**\n       * @memberof UAL\n       * @function\n       * @name logout\n       * @desc logs user out of authenticator and resets UAL state\n       * @return {Void}\n       */\n      logout: () => {\n        const { activeAuthenticator } = this.state\n        this.setState(DEFAULT_STATUS, () => activeAuthenticator && this.fullLogout(activeAuthenticator))\n      },\n      /**\n       * @memberof UAL\n       * @function\n       * @name restart\n       * @desc resets all available authenticators and resets UAL state\n       * @return {Void}\n       */\n      restart: () => {\n        this.setState({ DEFAULT_STATUS }, () => {\n          const { availableAuthenticators } = this.state\n          availableAuthenticators.forEach(auth => auth.reset())\n          this.setState(availableAuthenticators)\n        })\n      },\n      /**\n       * @memberof UAL\n       * @function\n       * @name broadcastStatus\n       * @desc dispatches a provider state update\n       * @return {Void}\n       */\n      broadcastStatus: (status = DEFAULT_STATUS) => this.setState(status),\n      /**\n       * @memberof UAL\n       * @function\n       * @name authenticateWithoutAccountInput\n       * @desc attempts authentication with an authenticator not requiring account input\n       * @return {Void}\n       * @param {Authenticator} authenticator\n       * @param {boolean} [false] isAutoLogin\n       */\n      authenticateWithoutAccountInput: async (authenticator, isAutoLogin = false) => {\n        const { broadcastStatus } = this.state\n        broadcastStatus({\n          loading: true,\n          message: i18n.t('continueWithAuthenticator', { authenticatorName: authenticator.getStyle().text }),\n          activeAuthenticator: authenticator,\n        })\n        try {\n          const users = await authenticator.login()\n          const accountName = await users[0].getAccountName()\n          if (!isAutoLogin) {\n            window.localStorage.setItem('UALLoggedInAuthType', authenticator.getName())\n            this.setUALInvalidateAt(authenticator)\n          }\n          broadcastStatus({\n            activeUser: users[users.length - 1],\n            users,\n            isAutoLogin,\n            message: i18n.t('currentlyLoggedInAs', { accountName }),\n          })\n        } catch (err) {\n          broadcastStatus({\n            loading: false,\n            error: err,\n            message: err.message,\n          })\n        }\n      },\n      /**\n       * @memberof UAL\n       * @function\n       * @name submitAccountForLogin\n       * @desc attempts authentication\n       * @return {Void}\n       * @param {string} accountInput\n       * @param {Authenticator} authenticator\n       */\n      submitAccountForLogin: async (accountInput, authenticator) => {\n        const { broadcastStatus } = this.state\n        broadcastStatus({\n          loading: true,\n          message: authenticator.requiresGetKeyConfirmation()\n            ? i18n.t('waitWhileFindAccountWithConfirmation')\n            : i18n.t('waitWhileFindAccount'),\n        })\n        try {\n          const users = await authenticator.login(accountInput)\n          window.localStorage.setItem('UALLoggedInAuthType', authenticator.getName())\n          window.localStorage.setItem('UALAccountName', accountInput)\n          broadcastStatus({\n            activeUser: users[users.length - 1],\n            activeAuthenticator: authenticator,\n            users,\n            message: i18n.t('currentlyLoggedInAs', { accountName: accountInput }),\n          })\n          this.setUALInvalidateAt(authenticator)\n        } catch (err) {\n          broadcastStatus({\n            error: err,\n            message: err.message,\n            loading: false,\n          })\n        }\n      },\n    }\n  }\n\n  componentDidMount() {\n    const { chains, appName, authenticators, authenticateWithoutAccountInput, submitAccountForLogin } = this.state\n    let type = window.localStorage.getItem('UALLoggedInAuthType')\n    const invalidate = window.localStorage.getItem('UALInvalidateAt')\n    const accountName = window.localStorage.getItem('UALAccountName')\n    type = this.checkForInvalidatedSession(type, invalidate)\n    const ual = new UAL(chains, appName, authenticators)\n    const { availableAuthenticators, autoLoginAuthenticator } = ual.getAuthenticators()\n    try {\n      if (type) {\n        const authenticator = this.getAuthenticatorInstance(type, availableAuthenticators)\n        if (!authenticator) {\n          throw new Error('authenticator instance not found')\n        }\n        const availableCheck = setInterval(() => {\n          if (!authenticator.isLoading()) {\n            clearInterval(availableCheck)\n            // Only Ledger requires an account name\n            if (accountName) {\n              submitAccountForLogin(accountName, authenticator)\n            } else {\n              authenticateWithoutAccountInput(authenticator)\n            }\n          }\n        }, 250)\n      }\n    } catch (e) {\n      this.clearCache()\n      const msg = i18n.t('sessionEndedNeedLogin')\n      const source = type || 'Universal Authenticator Library'\n      const errType = UALErrorType.Login\n      console.warn(new UALError(msg, errType, e, source))\n    } finally {\n      this.fetchAuthenticators(availableAuthenticators, autoLoginAuthenticator)\n    }\n  }\n\n  componentDidUpdate() {\n    const { loading, message, availableAuthenticators, broadcastStatus } = this.state\n    if (loading && message === i18n.t('loadingAuthenticators') && availableAuthenticators.length) {\n      broadcastStatus({ message: i18n.t('authenticatorsLoaded'), loading: false })\n    }\n  }\n\n  /**\n   * Verifies a logged in user's authenticator is still app supported\n   *\n   * @method\n   * @param {string} type - authenticator type of sessioned user\n   * @param {Object[]} availableAuthenticators - list of available app supported authenticators\n   * @return {number|boolean}\n   */\n  getAuthenticatorInstance = (type, availableAuthenticators) => {\n    const loggedIn = availableAuthenticators.filter(auth => auth.getName() === type)\n    if (!loggedIn.length) {\n      this.clearCache()\n    }\n    return loggedIn.length ? loggedIn[0] : false\n  }\n\n  /**\n   * Checks if the saved browser session has passed the UALInvalidateAt date and clear the cache if true\n   *\n   * @method\n   * @param {string} type - UALLoggedInAuthType value\n   * @param {string} invalidate - UALInvalidateAt value in string formatted date\n   * @return {string|undefined} - UALLoggedInAuthType value or undefined if no longer valid\n   */\n  checkForInvalidatedSession = (type, invalidate) => {\n    if (type && invalidate && new Date(invalidate) <= new Date()) {\n      this.clearCache()\n      return undefined\n    }\n    return type\n  }\n\n  /**\n   * Sets UALInvalidateAt value to local storage depending on amount of seconds set in authenticator\n   *\n   * @method\n   * @param {Authenticator} authenticator - should-invalidate-after authenticator\n   * @return {Void}\n   */\n  setUALInvalidateAt = (authenticator) => {\n    const invalidateSeconds = authenticator.shouldInvalidateAfter()\n    const invalidateAt = new Date()\n    invalidateAt.setSeconds(invalidateAt.getSeconds() + invalidateSeconds)\n    window.localStorage.setItem('UALInvalidateAt', invalidateAt)\n  }\n\n  /**\n   * Renders available authenticators or starts auto-login process if applicable\n   *\n   * @method\n   * @param {Authenticator[]} availableAuthenticators - list of available app supported authenticators\n   * @param {Authenticator} autoLoginAuthenticator - auto-login authenticator\n   * @return {Void}\n   */\n  fetchAuthenticators = (availableAuthenticators, autoLoginAuthenticator) => {\n    const { authenticateWithoutAccountInput } = this.state\n    if (autoLoginAuthenticator) {\n      this.setState({ availableAuthenticators: [autoLoginAuthenticator] }, () => {\n        const availableCheck = setInterval(() => {\n          if (!autoLoginAuthenticator.isLoading()) {\n            clearInterval(availableCheck)\n            authenticateWithoutAccountInput(autoLoginAuthenticator, true)\n          }\n        }, 250)\n      })\n    } else {\n      this.setState({ availableAuthenticators }, () => {\n        this.setState({ message: i18n.t('authenticatorsLoaded') })\n      })\n    }\n  }\n\n  /**\n   * Clears locally stored user session\n   *\n   * @method\n   * @return {Void}\n   */\n  clearCache = () => {\n    window.localStorage.removeItem('UALLoggedInAuthType')\n    window.localStorage.removeItem('UALAccountName')\n    window.localStorage.removeItem('UALInvalidateAt')\n  }\n\n  /**\n   * Clears localStorage and logs out user\n   *\n   * @method\n   * @param {Authenticator} authenticator - used authenticator\n   * @return {Void}\n   */\n  fullLogout = (authenticator) => {\n    this.clearCache()\n    authenticator.logout()\n      .catch(e => console.warn(e))\n  }\n\n  render() {\n    const modal = this.state.modal && <div style={modalStyles}><UALBox /></div>\n    return (\n      <UALContext.Provider value={this.state}>\n        <style>{baseFont}</style>\n        { modal }\n        { this.props.children }\n      </UALContext.Provider>\n    )\n  }\n}\n\n/**\n * @memberof UALProvider\n * @name props\n * @prop {Chain[]} chains - list of chains the app supports\n * @prop {Authenticator[]} authenticators - list of authenticators the app supports\n * @prop {Node[]|Node} children - child app(s)\n * @prop {string} appName - name of app\n * @prop {boolean} modal - whether or not to show modal\n */\nUALProvider.propTypes = {\n\n  chains: PropTypes.arrayOf(PropTypes.object).isRequired,\n  authenticators: PropTypes.arrayOf(PropTypes.object).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  appName: PropTypes.string.isRequired,\n  modal: PropTypes.bool,\n}\n\nUALProvider.defaultProps = {\n  modal: false,\n}\n"]},"metadata":{},"sourceType":"script"}