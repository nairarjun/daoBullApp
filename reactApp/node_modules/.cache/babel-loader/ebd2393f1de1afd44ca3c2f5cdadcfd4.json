{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UALBoxParts = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _i18n = _interopRequireDefault(require(\"../../i18n\"));\n\nvar _UALAccountInput = require(\"../authentication/UALAccountInput\");\n\nvar _UALAuthButton = require(\"../authentication/UALAuthButton\");\n\nvar _UALLearnMore = require(\"../info/UALLearnMore\");\n\nvar _UALExitButton = require(\"../misc/UALExitButton\");\n\nvar _UALErrorMessage = require(\"../info/UALErrorMessage\");\n\nvar _UALLoadingIcon = require(\"../misc/UALLoadingIcon\");\n\nvar _UALInstallAuth = require(\"../authentication/UALInstallAuth\");\n\nvar _title = require(\"../../styles/title\");\n\nvar _back = require(\"../../styles/buttons/back\");\n\nvar _retry = require(\"../../styles/buttons/retry\");\n\nvar _instructions = require(\"../../styles/instructions\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * @class\n * @name UALBoxParts\n * @desc class for rendering sections of the UALBox Component\n */\n\n\nvar UALBoxParts = /*#__PURE__*/function () {\n  function UALBoxParts() {\n    _classCallCheck(this, UALBoxParts);\n  }\n\n  _createClass(UALBoxParts, null, [{\n    key: \"authButton\",\n\n    /**\n     * returns an instance of UALAuthButton\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name authButton\n     * @return {ReactElement}\n     */\n    value: function authButton(authenticator, index, instructions, authenticate, checkAuthenticators, enterInstallScreen) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_UALAuthButton.UALAuthButton, {\n        key: index,\n        index: index,\n        instructions: instructions,\n        onErroredState: checkAuthenticators,\n        authenticator: authenticator,\n        onAuthenticatorSelect: authenticate,\n        onRequestInstall: enterInstallScreen\n      });\n    }\n    /**\n     * returns an instance of UALAuthInput\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name accountLogin\n     * @return {ReactElement}\n     */\n\n  }, {\n    key: \"accountLogin\",\n    value: function accountLogin(submitAccountForLogin, loading, authenticator) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_UALAccountInput.UALAccountInput, {\n        submitAccountForLogin: submitAccountForLogin,\n        authenticator: authenticator,\n        loading: loading\n      });\n    }\n    /**\n     * returns the secondary instructions for a given screen\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name secondaryInstructions\n     * @return {HTML}\n     */\n\n  }, {\n    key: \"secondaryInstructions\",\n    value: function secondaryInstructions(_ref, refreshBox) {\n      var _secondaryInstructions = _ref.secondaryInstructions,\n          showInstallScreen = _ref.showInstallScreen;\n\n      var retry = /*#__PURE__*/_react[\"default\"].createElement(\"strong\", {\n        role: \"button\",\n        \"aria-label\": \"Go Back\",\n        tabIndex: \"-1\",\n        style: _retry.retryButton,\n        onClick: refreshBox\n      }, _i18n[\"default\"].t('retry'));\n\n      if (_secondaryInstructions !== '') {\n        var trueStyle = showInstallScreen ? _instructions.secondaryInstructionsLight : _instructions.secondaryInstructionsText;\n        return /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n          style: trueStyle\n        }, _secondaryInstructions, '  ', !showInstallScreen && retry, !showInstallScreen && '.');\n      }\n\n      return null;\n    }\n    /**\n     * returns an instance of UALInstallAuth\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name installAuthenticatorSection\n     * @return {ReactElement}\n     */\n\n  }, {\n    key: \"installAuthenticatorSection\",\n    value: function installAuthenticatorSection(authenticator) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_UALInstallAuth.UALInstallAuth, {\n        authenticator: authenticator\n      });\n    }\n    /**\n     * returns a back-button DOM element\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name backButton\n     * @return {HTML}\n     */\n\n  }, {\n    key: \"backButton\",\n    value: function backButton(_ref2, goBackToAuthSelect) {\n      var showAccountInput = _ref2.showAccountInput,\n          error = _ref2.error,\n          loading = _ref2.loading,\n          logout = _ref2.logout,\n          showInstallScreen = _ref2.showInstallScreen;\n      var goBackAction = error ? logout : goBackToAuthSelect;\n\n      if ((error || showAccountInput || showInstallScreen) && !loading) {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n          style: _back.backButtonWrapper\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n          role: \"button\",\n          \"aria-label\": \"Go Back\",\n          tabIndex: \"-1\",\n          style: _back.backButton,\n          onClick: goBackAction\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"strong\", {\n          style: _back.backButtonText\n        }, _i18n[\"default\"].t('goBack'))));\n      }\n\n      return null;\n    }\n    /**\n     * returns instructions on dealing with no available authenticators\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name noAvailableAuthenticators\n     * @return {HTML}\n     */\n\n  }, {\n    key: \"noAvailableAuthenticators\",\n    value: function noAvailableAuthenticators() {\n      return /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        style: _instructions.secondaryInstructionsText\n      }, _i18n[\"default\"].t('noAuthenticatorsAvailableForDevice'));\n    }\n    /**\n     * returns the main content of UALBox\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name mainContent\n     * @return {ReactElement[]}\n     */\n\n  }, {\n    key: \"mainContent\",\n    value: function mainContent(app, authenticate, checkAuthenticators, enterInstallScreen) {\n      var _this = this;\n\n      var submitAccountForLogin = app.submitAccountForLogin,\n          authenticator = app.authenticator,\n          loading = app.loading,\n          error = app.error,\n          showAccountInput = app.showAccountInput,\n          showInstallScreen = app.showInstallScreen,\n          availableAuthenticators = app.availableAuthenticators,\n          instructions = app.instructions;\n      var authProps = [authenticate, checkAuthenticators, enterInstallScreen];\n      var mainContent = !loading ? availableAuthenticators.map(function (auth, index) {\n        return _this.authButton.apply(_this, [auth, index, instructions].concat(authProps));\n      }) : /*#__PURE__*/_react[\"default\"].createElement(_UALLoadingIcon.UALLoadingIcon, {\n        withContainer: true\n      });\n\n      if (!loading && !availableAuthenticators.length) {\n        mainContent = this.noAvailableAuthenticators();\n      }\n\n      if (showAccountInput || showInstallScreen) {\n        mainContent = showInstallScreen ? this.installAuthenticatorSection(authenticator) : this.accountLogin(submitAccountForLogin, loading, authenticator);\n      }\n\n      return !error && mainContent;\n    }\n    /**\n     * returns an instance of UALErrorMessage\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name errorMessage\n     * @return {ReactElement}\n     */\n\n  }, {\n    key: \"errorMessage\",\n    value: function errorMessage(_ref3) {\n      var error = _ref3.error;\n\n      if (error) {\n        return /*#__PURE__*/_react[\"default\"].createElement(_UALErrorMessage.UALErrorMessage, {\n          error: error\n        });\n      }\n\n      return null;\n    }\n    /**\n     * returns an instance of UALLearnMore\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name learnMore\n     * @return {ReactElement}\n     */\n\n  }, {\n    key: \"learnMore\",\n    value: function learnMore(_ref4) {\n      var showAccountInput = _ref4.showAccountInput,\n          showInstallScreen = _ref4.showInstallScreen,\n          error = _ref4.error,\n          loading = _ref4.loading;\n\n      if (!showAccountInput && !error && !loading && !showInstallScreen) {\n        return /*#__PURE__*/_react[\"default\"].createElement(_UALLearnMore.UALLearnMore, null);\n      }\n\n      return null;\n    }\n    /**\n     * returns the background color for a given screen\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name boxBackground\n     * @return {Object}\n     */\n\n  }, {\n    key: \"boxBackground\",\n    value: function boxBackground(_ref5) {\n      var error = _ref5.error,\n          loading = _ref5.loading,\n          showAccountInput = _ref5.showAccountInput,\n          showInstallScreen = _ref5.showInstallScreen,\n          activeAuthenticator = _ref5.activeAuthenticator,\n          authenticator = _ref5.authenticator;\n      var authenticatorStyle = activeAuthenticator && activeAuthenticator.getStyle().background;\n      var background = {};\n\n      if (!authenticatorStyle) {\n        authenticatorStyle = authenticator && authenticator.getStyle().background;\n      }\n\n      if (showAccountInput || loading || showInstallScreen || error) {\n        background = {\n          backgroundColor: (0, _utils.darkenColor)(authenticatorStyle)\n        };\n      }\n\n      return background;\n    }\n    /**\n     * returns the main title of a screen of UALBox\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name boxTitle\n     * @return {HTML}\n     */\n\n  }, {\n    key: \"boxTitle\",\n    value: function boxTitle(_ref6) {\n      var error = _ref6.error,\n          instructions = _ref6.instructions,\n          showAccountInput = _ref6.showAccountInput,\n          showInstallScreen = _ref6.showInstallScreen,\n          loading = _ref6.loading,\n          message = _ref6.message;\n      var boxTitle = error ? _i18n[\"default\"].t('errorDuring', {\n        src: error.source,\n        type: error.type.toLowerCase()\n      }) : instructions;\n      var titleStyle = error || showAccountInput || loading || showInstallScreen ? _title.titleSecondary : _title.title;\n      var titleContent = !loading || error ? boxTitle : message;\n      return /*#__PURE__*/_react[\"default\"].createElement(\"h1\", {\n        style: titleStyle\n      }, titleContent);\n    }\n    /**\n     * returns an instance of UALExitButton\n     *\n     * @memberof UALBoxParts\n     * @method\n     * @name exitButton\n     * @return {ReactElement}\n     */\n\n  }, {\n    key: \"exitButton\",\n    value: function exitButton(_ref7) {\n      var error = _ref7.error,\n          showAccountInput = _ref7.showAccountInput,\n          showInstallScreen = _ref7.showInstallScreen,\n          loading = _ref7.loading,\n          hideModal = _ref7.hideModal;\n      return /*#__PURE__*/_react[\"default\"].createElement(_UALExitButton.UALExitButton, {\n        isSecondaryStyle: !!error || showAccountInput || !!loading || showInstallScreen,\n        hideModal: hideModal\n      });\n    }\n  }]);\n\n  return UALBoxParts;\n}();\n\nexports.UALBoxParts = UALBoxParts;\n\n_defineProperty(UALBoxParts, \"displayName\", 'UALBoxParts');","map":{"version":3,"sources":["../../../src/components/modal/UALBoxParts.js"],"names":["UALBoxParts","authenticator","index","instructions","authenticate","checkAuthenticators","enterInstallScreen","submitAccountForLogin","loading","secondaryInstructions","showInstallScreen","refreshBox","retry","retryButton","i18n","trueStyle","secondaryInstructionsLight","secondaryInstructionsText","showAccountInput","error","logout","goBackToAuthSelect","goBackAction","backButtonWrapper","backButton","backButtonText","app","availableAuthenticators","authProps","mainContent","activeAuthenticator","authenticatorStyle","background","backgroundColor","message","boxTitle","src","type","titleStyle","titleSecondary","title","titleContent","hideModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport i18n from '../../i18n'\n\nimport { UALAccountInput } from '../authentication/UALAccountInput'\nimport { UALAuthButton } from '../authentication/UALAuthButton'\nimport { UALLearnMore } from '../info/UALLearnMore'\nimport { UALExitButton } from '../misc/UALExitButton'\nimport { UALErrorMessage } from '../info/UALErrorMessage'\nimport { UALLoadingIcon } from '../misc/UALLoadingIcon'\nimport { UALInstallAuth } from '../authentication/UALInstallAuth'\n\nimport { title, titleSecondary } from '../../styles/title'\nimport { backButton, backButtonWrapper, backButtonText } from '../../styles/buttons/back'\nimport { retryButton } from '../../styles/buttons/retry'\nimport { secondaryInstructionsText, secondaryInstructionsLight } from '../../styles/instructions'\nimport { darkenColor } from '../../utils'\n\n/**\n * @class\n * @name UALBoxParts\n * @desc class for rendering sections of the UALBox Component\n */\nexport class UALBoxParts {\n  static displayName = 'UALBoxParts'\n\n  /**\n   * returns an instance of UALAuthButton\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name authButton\n   * @return {ReactElement}\n   */\n  static authButton(authenticator, index, instructions, authenticate, checkAuthenticators, enterInstallScreen) {\n    return (\n      <UALAuthButton\n        key={index}\n        index={index}\n        instructions={instructions}\n        onErroredState={checkAuthenticators}\n        authenticator={authenticator}\n        onAuthenticatorSelect={authenticate}\n        onRequestInstall={enterInstallScreen}\n      />\n    )\n  }\n\n  /**\n   * returns an instance of UALAuthInput\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name accountLogin\n   * @return {ReactElement}\n   */\n  static accountLogin(submitAccountForLogin, loading, authenticator) {\n    return (\n      <UALAccountInput\n        submitAccountForLogin={submitAccountForLogin}\n        authenticator={authenticator}\n        loading={loading}\n      />\n    )\n  }\n\n  /**\n   * returns the secondary instructions for a given screen\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name secondaryInstructions\n   * @return {HTML}\n   */\n  static secondaryInstructions({ secondaryInstructions, showInstallScreen }, refreshBox) {\n    const retry = (\n      <strong\n        role='button'\n        aria-label='Go Back'\n        tabIndex='-1'\n        style={retryButton}\n        onClick={refreshBox}\n      >\n        {i18n.t('retry')}\n      </strong>\n    )\n    if (secondaryInstructions !== '') {\n      const trueStyle = showInstallScreen ? secondaryInstructionsLight : secondaryInstructionsText\n      return (\n        <p style={trueStyle}>\n          {secondaryInstructions}\n          {'  '}\n          {!showInstallScreen && retry}\n          {!showInstallScreen && '.'}\n        </p>\n      )\n    }\n    return null\n  }\n\n  /**\n   * returns an instance of UALInstallAuth\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name installAuthenticatorSection\n   * @return {ReactElement}\n   */\n  static installAuthenticatorSection(authenticator) {\n    return <UALInstallAuth authenticator={authenticator} />\n  }\n\n  /**\n   * returns a back-button DOM element\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name backButton\n   * @return {HTML}\n   */\n  static backButton({ showAccountInput, error, loading, logout, showInstallScreen }, goBackToAuthSelect) {\n    const goBackAction = error ? logout : goBackToAuthSelect\n    if ((error || showAccountInput || showInstallScreen) && !loading) {\n      return (\n        <p style={backButtonWrapper}>\n          <span role='button' aria-label='Go Back' tabIndex='-1' style={backButton} onClick={goBackAction}>\n            <strong style={backButtonText}>{i18n.t('goBack')}</strong>\n          </span>\n        </p>\n      )\n    }\n    return null\n  }\n\n  /**\n   * returns instructions on dealing with no available authenticators\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name noAvailableAuthenticators\n   * @return {HTML}\n   */\n  static noAvailableAuthenticators() {\n    return (\n      <p\n        style={secondaryInstructionsText}\n      >\n        {i18n.t('noAuthenticatorsAvailableForDevice')}\n      </p>\n    )\n  }\n\n  /**\n   * returns the main content of UALBox\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name mainContent\n   * @return {ReactElement[]}\n   */\n  static mainContent(app, authenticate, checkAuthenticators, enterInstallScreen) {\n    const {\n      submitAccountForLogin,\n      authenticator,\n      loading,\n      error,\n      showAccountInput,\n      showInstallScreen,\n      availableAuthenticators,\n      instructions,\n    } = app\n    const authProps = [\n      authenticate,\n      checkAuthenticators,\n      enterInstallScreen,\n    ]\n    let mainContent = !loading\n      ? availableAuthenticators.map((auth, index) => this.authButton(auth, index, instructions, ...authProps))\n      : <UALLoadingIcon withContainer />\n    if (!loading && !availableAuthenticators.length) {\n      mainContent = this.noAvailableAuthenticators()\n    }\n    if (showAccountInput || showInstallScreen) {\n      mainContent = showInstallScreen\n        ? this.installAuthenticatorSection(authenticator)\n        : this.accountLogin(submitAccountForLogin, loading, authenticator)\n    }\n    return !error && mainContent\n  }\n\n  /**\n   * returns an instance of UALErrorMessage\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name errorMessage\n   * @return {ReactElement}\n   */\n  static errorMessage({ error }) {\n    if (error) {\n      return <UALErrorMessage error={error} />\n    }\n    return null\n  }\n\n  /**\n   * returns an instance of UALLearnMore\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name learnMore\n   * @return {ReactElement}\n   */\n  static learnMore({ showAccountInput, showInstallScreen, error, loading }) {\n    if (!showAccountInput && !error && !loading && !showInstallScreen) {\n      return <UALLearnMore />\n    }\n    return null\n  }\n\n  /**\n   * returns the background color for a given screen\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name boxBackground\n   * @return {Object}\n   */\n  static boxBackground({ error, loading, showAccountInput, showInstallScreen, activeAuthenticator, authenticator }) {\n    let authenticatorStyle = activeAuthenticator && activeAuthenticator.getStyle().background\n    let background = {}\n    if (!authenticatorStyle) {\n      authenticatorStyle = authenticator && authenticator.getStyle().background\n    }\n    if (showAccountInput || loading || showInstallScreen || error) {\n      background = {\n        backgroundColor: darkenColor(authenticatorStyle)\n      }\n    }\n    return background\n  }\n\n  /**\n   * returns the main title of a screen of UALBox\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name boxTitle\n   * @return {HTML}\n   */\n  static boxTitle({ error, instructions, showAccountInput, showInstallScreen, loading, message }) {\n    const boxTitle = error ? i18n.t('errorDuring', { src: error.source, type: error.type.toLowerCase() }) : instructions\n    const titleStyle = error || showAccountInput || loading || showInstallScreen ? titleSecondary : title\n    const titleContent = !loading || error ? boxTitle : message\n    return <h1 style={titleStyle}>{titleContent}</h1>\n  }\n\n  /**\n   * returns an instance of UALExitButton\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name exitButton\n   * @return {ReactElement}\n   */\n  static exitButton({ error, showAccountInput, showInstallScreen, loading, hideModal }) {\n    return (\n      <UALExitButton\n        isSecondaryStyle={!!error || showAccountInput || !!loading || showInstallScreen}\n        hideModal={hideModal}\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}